{"version":3,"sources":["lib/sound-effects.js","lib/utils.js","lib/string-tools.js","clashjs/executeMovementHelper.js","Players.js","players/codingpains.js","lib/codingpains-logic.js","players/ericku.js","players/horror.js","players/elperron.js","players/yuno.js","players/xmontoya.js","players/margeux.js","components/Tiles.jsx","components/Ammos.jsx","components/Players.jsx","components/Stats.jsx","components/Shoots.jsx","components/Notifications.jsx","clashjs/PlayerClass.js","clashjs/ClashCore.js","components/Clash.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","lasers","laser0","play","laser1","laser2","laser3","laser4","laser5","laser6","laser7","laser8","explosions","explode0","explode1","explode2","streak","firstBlood","doubleKill","tripleKill","monsterKill","killingSpree","dominating","rampage","godLike","ownage","music","theme0","DIRECTIONS","movements","isVisible","originalPosition","finalPosition","direction","randomMove","Math","random","floor","length","getDirection","start","end","diffVertical","abs","diffHorizontal","canKill","currentPlayerState","enemiesStates","some","enemyObject","isAlive","position","safeRandomMove","fastGetDirection","turn","currentPosition","howMuchTurn","currentPositionIndex","indexOf","getDistance","base64Chars","base62Chars","base32Chars","generateBaseString","digits","lowercase","uppercase","toUpperCase","special","join","pool","i","output","ceil","generateBase64String","generateBase62String","generateBase32String","generateBase10String","_","require","utils","safeMovement","value","size","data","playerIndex","playerAction","playerStates","playerInstances","gameEnvironment","evtCallback","coreCallback","gridSize","ammoPosition","forEach","el","index","splice","ammo","kills","survivors","shooter","origin","enemyIndex","push","filter","player","killer","killed","map","winner","codingpains","ericku","horror","elperron","yuno","xmontoya","margeux","logic","info","name","style","ai","enemies","armedEnemies","enemy","inDanger","_eluder","_hunter","_gatherer","ammoMove","safestMove","centerMove","mode","shouldMoveForAmmo","isMovementSafe","goToCenter","getSafestMove","turnMove","chaseMove","getDangerousEnemies","turnToAmbush","turnToKill","chaseEnemy","killers","getImmediateThreats","closeThreats","y","x","canKillAll","this","e","sameY","sameX","isHorizontal","canMoveTowards","opositeDirection","isVertical","canDie","result","getClosestAmmo","closest","getReachableAmmo","distance","action","futureState","JSON","parse","stringify","getClosestEnemy","clonedStates","slice","getBackPosition","back","sneakyGetDirection","verticalDelta","absVerticalDelta","horizontalDelta","absHorizontalDelta","ret","mockState","pos","canDo","canKillMany","isSafeHere","isSafeToMove","center","coord","movement","killables","killable","dangerous","playerPos","closestAmmo","closestEnemy","ericku_","hunter","gatherer","MUSOLINI","playerState","directionToAmmo","currentDirection","oldBestAmo","directions","1","2","3","4","turnsComplete","ElPerron","directionToTarget","toPosition","myPosition","distanceMin","ammoMin","amIndex","distanceByMe","getBestAmmo","getShortestDirection","endArray","reducedArray","reduce","reduced","Yuno","directionToPlayer","positionArray","resultPositions","currentEnemyPosition","noAmmo","directionToEnemy","Tiles","props","tileSize","tileRender","height","width","className","key","React","Component","Ammos","ammoRender","ammoPos","ammoIndex","top","left","Players","state","playerDirections","nextProps","newPlayerDirections","setState","diff","playerRender","playerData","playerInfo","getInfo","transform","backgroundImage","Stats","stats","rounds","total","playerStats","sortBy","wins","Shoots","shoots","shootsRender","Notifications","date","Date","remove","k","valueOf","idx","text","PlayerClass","options","_id","generateId","_playerInfo","_playerAI","round","fx","console","error","ClashJS","playerDefinitionArray","currentStats","_totalRounds","_rounds","_gameStats","_evtCallback","msg","_alivePlayerCount","_suddenDeathCount","_playerInstances","playerDefinition","getId","getName","deaths","kdr","winrate","setupGame","_playerStates","_gameEnvironment","shuffle","playerInstance","_currentPlayer","_createAmmo","newAmmoPosition","gameStats","totalRounds","_getAlivePlayerCount","_handleCoreAction","cloneDeep","otherPlayers","currentEnemyFilter","_savePlayerAction","execute","getState","executeMovementHelper","bind","playerArray","playerObjects","killsStack","Clash","window","ClashInstance","handleEvent","clashjs","speed","currentGameIndex","finished","nextTurn","nextTurnTimeout","clearTimeout","setTimeout","nextPly","parseInt","evt","newShoots","time","getTime","newGame","_handleKill","endGame","players","notification","handleStreak","streakCount","multiKill","spreeMessage","color","fontWeight","onClick","handleClick","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uFAAAA,EAAOC,QAAQC,OAAS,CACtBC,OAAQ,CAAEC,KAAF,cACRC,OAAQ,CAAED,KAAF,cACRE,OAAQ,CAAEF,KAAF,cACRG,OAAQ,CAAEH,KAAF,cACRI,OAAQ,CAAEJ,KAAF,cACRK,OAAQ,CAAEL,KAAF,cACRM,OAAQ,CAAEN,KAAF,cACRO,OAAQ,CAAEP,KAAF,cACRQ,OAAQ,CAAER,KAAF,eAGVJ,EAAOC,QAAQY,WAAa,CAC1BC,SAAU,CAAEV,KAAF,cACVW,SAAU,CAAEX,KAAF,cACVY,SAAU,CAAEZ,KAAF,eAGZJ,EAAOC,QAAQgB,OAAS,CACtBC,WAAY,CAAEd,KAAF,cACZe,WAAY,CAAEf,KAAF,cACZgB,WAAY,CAAEhB,KAAF,cACZiB,YAAa,CAAEjB,KAAF,cACbkB,aAAc,CAAElB,KAAF,cACdmB,WAAY,CAAEnB,KAAF,cACZoB,QAAS,CAAEpB,KAAF,cACTqB,QAAS,CAAErB,KAAF,cACTsB,OAAQ,CAAEtB,KAAF,eAGVJ,EAAOC,QAAQ0B,MAAQ,CACrBC,OAAQ,CAAExB,KAAF,gB,cC/BV,IAAIyB,EAAa,CAAC,QAAS,OAAQ,QAAS,QACxCC,EAAY,CAAC,QAAS,OAAQ,QAAS,OAAQ,SA6C/CC,EAAY,WAAgE,IAA/DC,EAA8D,uDAA3C,GAAIC,EAAuC,uDAAvB,GAAIC,EAAmB,uDAAP,GACtE,OAAQA,GACN,KAAKL,EAAW,GACd,OAAOG,EAAiB,KAAOC,EAAc,IAAMD,EAAiB,GAAKC,EAAc,GACzF,KAAKJ,EAAW,GACd,OAAOG,EAAiB,KAAOC,EAAc,IAAMD,EAAiB,GAAKC,EAAc,GACzF,KAAKJ,EAAW,GACd,OAAOG,EAAiB,KAAOC,EAAc,IAAMD,EAAiB,GAAKC,EAAc,GACzF,KAAKJ,EAAW,GACd,OAAOG,EAAiB,KAAOC,EAAc,IAAMD,EAAiB,GAAKC,EAAc,KAa7FjC,EAAOC,QAAU,CACfkC,WAlEe,WACf,OAAOC,KAAKC,SAAW,IAAO,OAASP,EAAUM,KAAKE,MAAMF,KAAKC,SAAWP,EAAUS,UAkEtFC,aAtDiB,WAA2B,IAA1BC,EAAyB,uDAAjB,GAAIC,EAAa,uDAAP,GACpCD,EAAQA,GAAS,GACjBC,EAAMA,GAAO,GAEb,IAAIC,EAAeP,KAAKQ,IAAIH,EAAM,GAAKC,EAAI,IACvCG,EAAiBT,KAAKQ,IAAIH,EAAM,GAAKC,EAAI,IAE7C,OAAIC,EAAeE,EACVJ,EAAM,GAAKC,EAAI,GAAK,EAAI,QAAU,QAEpCD,EAAM,GAAKC,EAAI,GAAK,EAAI,OAAS,QA6CxCX,YACAe,QAXY,WAAkD,IAAjDC,EAAgD,uDAA3B,GAAIC,EAAuB,uDAAP,GACtD,OAAOA,EAAcC,MAAK,SAAAC,GACxB,OAAOA,EAAYC,SACjBpB,EAAUgB,EAAmBK,SAAUF,EAAYE,SAAUL,EAAmBb,eASpFmB,eAlEmB,WACnB,OAAOjB,KAAKC,SAAW,IAAO,OAASR,EAAWO,KAAKE,MAAMF,KAAKC,SAAWR,EAAWU,UAkExFe,iBAtCqB,WAA2B,IAA1Bb,EAAyB,uDAAjB,GAAIC,EAAa,uDAAP,GACpCC,EAAeP,KAAKQ,IAAIH,EAAM,GAAKC,EAAI,IAG3C,OAAIC,EACKF,EAAM,GAAKC,EAAI,GAAK,EAAI,QAAU,QAEpCD,EAAM,GAAKC,EAAI,GAAK,EAAI,OAAS,QAgCxCa,KAhES,WAAwC,IAAvCC,EAAsC,uDAApB,GAAIC,EAAgB,uCAC5CC,EAAuB7B,EAAW8B,QAAQH,GAC9C,OAAO3B,GAAY6B,EAAuBD,GAAe,IA+DzDG,YA/CgB,WAA2B,IAA1BnB,EAAyB,uDAAjB,GAAIC,EAAa,uDAAP,GAC/BC,EAAeP,KAAKQ,IAAIH,EAAM,GAAKC,EAAI,IACvCG,EAAiBT,KAAKQ,IAAIH,EAAM,GAAKC,EAAI,IAE7C,OAAOG,EAAiBF,K,iBCjC1B,IAIIkB,EACAC,EACAC,EACAC,EAPAC,EAAS,aACTC,EAAY,4BACZC,EAAYD,EAAUE,cACtBC,EAAU,KAMdrE,EAAOC,QAAWA,EAAU,GAE5B4D,EAAc,WACZ,MAAO,CAACI,EAAQC,EAAWC,EAAWE,GAASC,KAAK,KAGtDR,EAAc,WACZ,MAAO,CAACG,EAAQC,EAAWC,GAAWG,KAAK,KAG7CP,EAAc,WACZ,MAAO,CAACI,EAAWF,GAAQK,KAAK,KAGlCN,EAAqB,SAASO,EAAMhC,GAClC,IACIiC,EADAC,EAAS,GAGb,IAAKD,EAAI,EAAGA,EAAIjC,EAAQiC,GAAK,EAC3BC,GAAUF,EAAKnC,KAAKsC,KAAqB,IAAhBtC,KAAKC,SAAiBkC,EAAKhC,QAAU,GAAK,GAGrE,OAAOkC,GAGTxE,EAAQ0E,qBAAuB,SAASpC,GACtC,OAAOyB,EAAmBH,IAAetB,IAG3CtC,EAAQ2E,qBAAuB,SAASrC,GACtC,OAAOyB,EAAmBF,IAAevB,IAG3CtC,EAAQ4E,qBAAuB,SAAStC,GACtC,OAAOyB,EAAmBD,IAAexB,IAG3CtC,EAAQ6E,qBAAuB,SAASvC,GACtC,OAAOyB,EAAmBC,EAAQ1B,K,gBC/CpC,IAAIwC,EAAIC,EAAQ,GACZC,EAAQD,EAAQ,GAChBnD,EAAa,CAAC,QAAS,OAAQ,QAAS,QAExCqD,EAAe,SAACC,EAAOC,GACzB,OAAID,EAAQ,EAAU,EAClBA,EAAQC,EAAO,EAAUA,EAAO,EAC7BD,GA8FTnF,EAAOC,QA3Fc,SAAAoF,GAAS,IACtBC,EAAyGD,EAAzGC,YAAaC,EAA4FF,EAA5FE,aAAcC,EAA8EH,EAA9EG,aAAcC,EAAgEJ,EAAhEI,gBAAiBC,EAA+CL,EAA/CK,gBAAiBC,EAA8BN,EAA9BM,YAAaC,EAAiBP,EAAjBO,aAC1F7C,EAAqByC,EAAaF,GAEtC,IAA0C,IAAtCzD,EAAW8B,QAAQ4B,GAErB,OADAxC,EAAmBb,UAAYqD,EACxBC,EAGT,GAAqB,SAAjBD,EAAyB,CAC3B,OAAQxC,EAAmBb,WACzB,KAAKL,EAAW,GACdkB,EAAmBK,SAAS,KAC5B,MACF,KAAKvB,EAAW,GACdkB,EAAmBK,SAAS,KAC5B,MACF,KAAKvB,EAAW,GACdkB,EAAmBK,SAAS,KAC5B,MACF,KAAKvB,EAAW,GACdkB,EAAmBK,SAAS,KAOhCL,EAAmBK,SAAS,GAAK8B,EAAanC,EAAmBK,SAAS,GAAIsC,EAAgBG,UAC9F9C,EAAmBK,SAAS,GAAK8B,EAAanC,EAAmBK,SAAS,GAAIsC,EAAgBG,UAG9FH,EAAgBI,aAAaC,SAAQ,SAACC,EAAIC,GACpCD,EAAG,KAAOjD,EAAmBK,SAAS,IAAM4C,EAAG,KAAOjD,EAAmBK,SAAS,KACpFsC,EAAgBI,aAAaI,OAAOD,EAAO,GAC3ClD,EAAmBoD,MAAQ,MAKjC,GAAqB,UAAjBZ,GAA4BxC,EAAmBoD,KAAO,EAAG,CAC3DpD,EAAmBoD,MAAQ,EAE3B,IAAIC,EAAQ,GACRC,EAAY,GAChBV,EAAY,QAAS,CACnBW,QAAShB,EACTiB,OAAQxD,EAAmBK,SAC3BlB,UAAWa,EAAmBb,YAGhCsD,EAAaO,SAAQ,SAAC7C,EAAasD,GAE/BtD,EAAYC,SACZ8B,EAAMlD,UAAUgB,EAAmBK,SAAUF,EAAYE,SAAUL,EAAmBb,aAEtFkE,EAAMK,KAAKD,GACXtD,EAAYC,SAAU,MAItBiD,EAAM7D,SACR8D,EAAYtB,EAAE2B,OAAOlB,GAAc,SAAAmB,GAAM,OAAIA,EAAOxD,WACpDyC,EAAa,OAAQ,CACnBgB,OAAQnB,EAAgBH,GACxBuB,OAAQ9B,EAAE+B,IAAIV,GAAO,SAAAH,GAAK,OAAIR,EAAgBQ,QAEhDN,EAAY,OAAQ,CAClBiB,OAAQtB,EACRuB,OAAQT,IAGLC,EAAU9D,SACbqD,EAAa,QACbD,EAAY,SAGW,IAArBU,EAAU9D,SACZqD,EAAa,MAAO,CAClBmB,OAAQtB,EAAgBH,KAE1BK,EAAY,MAAO,CACjBoB,OAAQtB,EAAgBH,OAMhC,OAAOE,I,gBClGTxF,EAAOC,QAAU,CACf+G,YAAahC,EAAQ,IAErBiC,OAAQjC,EAAQ,IAEhBkC,OAAQlC,EAAQ,IAChBmC,SAAUnC,EAAQ,IAClBoC,KAAMpC,EAAQ,IACdqC,SAAUrC,EAAQ,IAClBsC,QAAStC,EAAQ,M,4FCTnB,IAAMD,EAAIC,EAAQ,GAEdC,EAAQD,EAAQ,GAChBuC,EAAQvC,EAAQ,IAEhBgC,EAAc,CAChBQ,KAAM,CACJC,KAAM,QACNC,MAAO,GAGTC,GAAI,SAAShB,EAAQiB,EAASd,GAC5B,IAAIe,EAAe9C,EAAE2B,OAAOkB,GAAS,SAACE,GAAD,OAAWA,EAAM3B,KAAO,KAC7D,OAAIoB,EAAMQ,SAASpB,EAAQkB,GAAsBb,EAAYgB,QAAQrB,EAAQkB,EAAcf,GACvFH,EAAOR,KAAaa,EAAYiB,QAAQtB,EAAQiB,EAASd,GACtDE,EAAYkB,UAAUvB,EAAQiB,EAASd,IAGhDoB,UAAW,SAASvB,EAAQiB,EAASd,GACnC,IAAIqB,EACAC,EACAC,EAEJ,GADArB,EAAYQ,KAAKc,KAAO,IACnBxB,EAAIhB,aAAavD,OAGf,CAEL,IADA4F,EAAWZ,EAAMgB,kBAAkB5B,EAAQiB,EAASd,KACpCS,EAAMiB,eAAeL,EAAUxB,EAAQiB,EAASd,GAAM,OAAOqB,EAG7E,GADAE,EAAad,EAAMkB,WAAW9B,EAAQG,GAClCS,EAAMiB,eAAeH,EAAY1B,EAAQiB,EAASd,GAAM,OAAOuB,OANnE,GADAA,EAAad,EAAMkB,WAAW9B,EAAQG,GAClCS,EAAMiB,eAAeH,EAAY1B,EAAQiB,EAASd,GAAM,OAAOuB,EAUrE,OADAD,EAAab,EAAMmB,cAAc/B,EAAQiB,EAASd,KAChCS,EAAMiB,eAAeJ,EAAYzB,EAAQiB,EAASd,GAAasB,EAE1EnD,EAAM5B,kBAGf4E,QAAS,SAAStB,EAAQiB,EAASd,GACjC,IAAI6B,EAEAC,EAOJ,OAJA5B,EAAYQ,KAAKc,KAAO,IAExBV,EAAUL,EAAMsB,oBAAoBjB,GAEhC3C,EAAMnC,QAAQ6D,EAAQiB,GAAiB,SAE3Ce,EAAWpB,EAAMuB,aAAanC,EAAQiB,MAGtCe,EAAWpB,EAAMwB,WAAWpC,EAAQiB,KACpBL,EAAMiB,eAAeG,EAAUhC,EAAQiB,EAASd,GAH3C6B,GAKrBC,EAAYrB,EAAMyB,WAAWrC,EAAQiB,EAASd,KAC7BS,EAAMiB,eAAeI,EAAWjC,EAAQiB,EAASd,GAAa8B,EAElErB,EAAMmB,cAAc/B,EAAQiB,EAASd,KAG3C,GAGTkB,QAAS,SAASrB,EAAQiB,EAASd,GACjC,IAAImC,EAAU1B,EAAM2B,oBAAoBvC,EAAQiB,GAC5CuB,EAAe,CAACC,EAAG,GAAIC,EAAE,IAE7B,OADArC,EAAYQ,KAAKc,KAAO,IACpBW,EAAQ1G,OACNgF,EAAM+B,WAAW3C,EAAQsC,GACpB,UACE1B,EAAMiB,eAAe,OAAQ7B,EAAQsC,EAASnC,IAChD,OAOPH,EAAOR,KAAaoD,KAAKtB,QAAQtB,EAAQiB,EAASd,IACtD/B,EAAEgB,QAAQ6B,GAAS,SAAS4B,GACtBjC,EAAMkC,MAAM9C,EAAOvD,SAAUoG,EAAEpG,WACjC+F,EAAaC,EAAE3C,KAAK+C,GAElBjC,EAAMmC,MAAM/C,EAAOvD,SAAUoG,EAAEpG,WACjC+F,EAAaE,EAAE5C,KAAK+C,MAIpBL,EAAaE,EAAE9G,OACboE,EAAOR,MAAQlB,EAAMnC,QAAQ6D,EAAQwC,EAAaE,GAAW,QAC7D9B,EAAMoC,aAAahD,EAAOzE,YAAcqF,EAAMqC,eAAejD,EAAOzE,UAAWyE,EAAQG,GAClF,OAEAS,EAAMsC,iBAAiBV,EAAaE,EAAE,GAAGnH,WAG9CyE,EAAOR,MAAQlB,EAAMnC,QAAQ6D,EAAQwC,EAAaC,GAAW,QAC7D7B,EAAMuC,WAAWnD,EAAOzE,YAAcqF,EAAMqC,eAAejD,EAAOzE,UAAWyE,EAAQG,GAChF,OAEAS,EAAMsC,iBAAiBV,EAAaC,EAAE,GAAGlH,cAOxDlC,EAAOC,QAAU+G,G,gBC/GjB,IAAMjC,EAAIC,EAAQ,GAEdC,EAAQD,EAAQ,GAChBnD,EAAa,CAAC,QAAS,OAAQ,QAAS,QAQxC4H,EAAQ,SAAShH,EAAOC,GAC1B,OAAOD,EAAM,KAAOC,EAAI,IAGtBgH,EAAQ,SAASjH,EAAOC,GAC1B,OAAOD,EAAM,KAAOC,EAAI,IAsBtBqH,EAAS,SAASpD,EAAQiB,GAC5B,OAAOA,EACJd,KAAI,SAASgB,GACZ,OAAOA,EAAM3B,KAAO,GAAKlB,EAAMlD,UAAU+F,EAAM1E,SAAUuD,EAAOvD,SAAU0E,EAAM5F,cAEjFwE,QAAO,SAASsD,GACf,OAAkB,IAAXA,KACNzH,OAAS,GAGZ0H,EAAiB,SAAStD,EAAQb,GACpC,IAAIoE,EAEJ,GAAKpE,EAAavD,OAWlB,OATA2H,EAAUpE,EAAa,GAEvBA,EAAaC,SAAQ,SAASI,GACblB,EAAMrB,YAAY+C,EAAOvD,SAAU+C,GAAQlB,EAAMrB,YAAY+C,EAAOvD,SAAU8G,KAE3FA,EAAU/D,MAIP+D,GAGLC,EAAmB,SAASxD,EAAQiB,EAASd,GAS/C,OARgBA,EAAIhB,aAAaY,QAAO,SAASP,GAC/C,IAAIiE,EAAWnF,EAAMrB,YAAY+C,EAAOvD,SAAU+C,GAElD,OAAQyB,EAAQ3E,MAAK,SAAS6E,GAC5B,OAAO7C,EAAMrB,YAAYkE,EAAM1E,SAAU+C,GAAQiE,SAwBnD5B,EAAiB,SAAS6B,EAAQ1D,EAAQiB,EAASd,GACrD,IAAIwD,EAAcC,KAAKC,MAAMD,KAAKE,UAAU9D,IAE5C,GAAe,SAAX0D,EACF,OAAQ1D,EAAOzE,WACb,KAAKL,EAAW,GACVyI,EAAYlH,SAAS,GAAK,GAC5BkH,EAAYlH,SAAS,KAEvB,MACF,KAAKvB,EAAW,GACVyI,EAAYlH,SAAS,GAAK0D,EAAIjB,UAChCyE,EAAYlH,SAAS,KAEvB,MACF,KAAKvB,EAAW,GACVyI,EAAYlH,SAAS,GAAK0D,EAAIjB,UAChCyE,EAAYlH,SAAS,KAEvB,MACF,KAAKvB,EAAW,GACVyI,EAAYlH,SAAS,GAAK,GAC5BkH,EAAYlH,SAAS,KAQ7B,OAAI2G,EAAOO,EAAa1C,IAmCtB8C,EAAkB,SAAS/D,EAAQiB,GACrC,IACIsC,EADAS,EAAe/C,EAAQgD,MAAM,EAAGhD,EAAQrF,QAe5C,OAZAoI,EAAeA,EAAajE,QAAO,SAASoB,GAC1C,OAAOA,EAAM3E,WAGf+G,EAAUS,EAAa,GAEvBA,EAAa5E,SAAQ,SAAS+B,GACxB7C,EAAMrB,YAAY+C,EAAQmB,GAAS7C,EAAMrB,YAAY+C,EAAQuD,KAC/DA,EAAUpC,MAIPoC,GAGLW,EAAkB,SAAS/C,GAC7B,IAAIgD,EAAOhD,EAAM1E,SAASwH,MAAM,EAAG,GACnC,OAAQ9C,EAAM5F,WACZ,IAAK,QACH4I,EAAK,KACL,MACF,IAAK,QACHA,EAAK,KACL,MACF,IAAK,OACHA,EAAK,KACL,MACF,IAAK,OACHA,EAAK,KAIT,OAAOA,GAGLC,EAAqB,SAASpE,EAAQmB,GAGxC,OAFmB1F,KAAKQ,IAAI+D,EAAOvD,SAAS,GAAKuD,EAAOvD,SAAS,KAE1B,UAAnB0E,EAAM1E,UAA2C,UAAnB0E,EAAM1E,SAC/CuD,EAAOvD,SAAS,GAAK0E,EAAM1E,SAAS,GAAK,EAAI,QAAU,QAEzDuD,EAAOvD,SAAS,GAAK0E,EAAM1E,SAAS,GAAK,EAAI,OAAS,QAG3D4H,EAAgB,SAASvI,EAAOC,GAClC,OAAOD,EAAM,GAAKC,EAAI,IAGpBuI,EAAmB,SAASxI,EAAOC,GACrC,OAAON,KAAKQ,IAAIoI,EAAcvI,EAAOC,KAGnCwI,EAAkB,SAASzI,EAAOC,GACpC,OAAOD,EAAM,GAAKC,EAAI,IAGpByI,EAAqB,SAAS1I,EAAOC,GACvC,OAAON,KAAKQ,IAAIsI,EAAgBzI,EAAOC,KAGrCoH,EAAa,SAAS5H,GACxB,MAAO,CAAC,QAAS,SAASyB,QAAQzB,IAAc,GAG9CyH,EAAe,SAASzH,GAC1B,MAAO,CAAC,OAAQ,QAAQyB,QAAQzB,IAAc,GAG5C2H,EAAmB,SAAS3H,GAC9B,IAAIkJ,EACJ,OAAQlJ,GACN,IAAK,QACHkJ,EAAM,QACN,MACF,IAAK,QACHA,EAAM,QACN,MACF,IAAK,OACHA,EAAM,OACN,MACF,IAAK,OACHA,EAAM,OAGV,OAAOA,GAGLpC,EAAa,SAASrC,EAAQiB,EAASd,GACzC,IAAIoD,EAAUQ,EAAgB/D,EAAQiB,GAElC1F,GADO2I,EAAgBX,GACXa,EAAmBpE,EAAQuD,IAE3C,OAAIhI,IAAcyE,EAAOzE,UAChBA,EAGJsG,EAAe,OAAQ7B,EAAQ,CAACuD,GAAUpD,GAMxC,OALDgD,EAAWnD,EAAOzE,YAAwE,IAA1DiJ,EAAmBxE,EAAOvD,SAAU8G,EAAQ9G,WAC5EuG,EAAahD,EAAOzE,YAAsE,IAAxD+I,EAAiBtE,EAAOvD,SAAU8G,EAAQ9G,UADwB,OAEjGyG,EAAiBK,EAAQhI,YAMhC6G,EAAa,SAASpC,EAAQiB,GAChC,IAAIrE,GAAO,EACP8H,EAAYd,KAAKC,MAAMD,KAAKE,UAAU9D,IAU1C,OARA9E,EAAWkE,SAAQ,SAAS7D,GAC1BmJ,EAAUnJ,UAAYA,EAElB+C,EAAMnC,QAAQuI,EAAWzD,KAC3BrE,EAAOrB,MAIJqB,GA0DTvD,EAAOC,QAAU,CACf8H,SA9Ua,SAASpB,EAAQiB,GAC9B,IAAKA,EAAQrF,OAAQ,OAAO,EAC5B,IAAI+I,EAAM3E,EAAOvD,SACjB,OAAO2B,EAAE9B,KAAK2E,GAAS,SAAA4B,GAAC,OAAIC,EAAM6B,EAAK9B,EAAEpG,WAAasG,EAAM4B,EAAK9B,EAAEpG,cA4UnEqG,QACAC,QACAK,SACAH,eApUmB,SAAS1H,EAAWyE,EAAQG,GAC/C,IAAIyE,GAAQ,EACZ,OAAQrJ,GACN,IAAK,QACHqJ,EAAQ5E,EAAOvD,SAAS,GAAK,EAC7B,MACF,IAAK,OACHmI,EAAQ5E,EAAOvD,SAAS,GAAK0D,EAAIjB,SACjC,MACF,IAAK,QACH0F,EAAQ5E,EAAOvD,SAAS,GAAK0D,EAAIjB,SAAW,EAC5C,MACF,IAAK,OACH0F,EAAQ5E,EAAOvD,SAAS,GAAK,EAGjC,OAAOmI,GAqTPC,YA7BgB,SAAS7E,EAAQiB,GAAU,IACrCxE,EAAwBuD,EAAxBvD,SAAUlB,EAAcyE,EAAdzE,UAEhB,OADc6C,EAAE2B,OAAOkB,GAAS,SAAAE,GAAK,OAAI7C,EAAMlD,UAAUqB,EAAU0E,EAAM1E,SAAUlB,MACpEK,OAAS,GA2BxB0H,iBACAE,mBACA5B,kBA9QsB,SAAS5B,EAAQiB,EAASd,GAChD,IACIoD,EACAhI,EAFAiE,EAAOgE,EAAiBxD,EAAQiB,EAASd,GAI7C,QAAKX,EAAK5D,SAEV2H,EAAUD,EAAetD,EAAQR,IACjCjE,EAAY+C,EAAM3B,iBAAiBqD,EAAOvD,SAAU8G,MAElCvD,EAAOzE,UAChBA,EAGF,SAiQPsG,iBACAE,cA1NkB,SAAS/B,EAAQiB,EAASd,GAC5C,IACI2E,EAAajD,EAAe,QAAS7B,EAAQiB,EAASd,GACtD4E,EAAelD,EAAe,OAAQ7B,EAAQiB,EAASd,GAE3D,OAAI2E,GACE9E,EAAOR,KACF4C,EAAWpC,EAAQiB,IAAYoB,EAAWrC,EAAQiB,EAASd,GAGlE4E,EACK,YADT,GAiNAjD,WA1Me,SAAS9B,EAAQG,GAChC,IAAI6E,EAAS,CAAC7E,EAAIjB,SAAUiB,EAAIjB,UAAUiB,KAAI,SAAA8E,GAAK,OAAIxJ,KAAKE,MAAMsJ,EAAQ,MACtEC,EAAW5G,EAAM3B,iBAAiBqD,EAAOvD,SAAUuI,GAMvD,OAJIE,IAAalF,EAAOzE,YACtB2J,EAAW,QAGNA,GAmMPnB,kBACAG,kBACAE,qBACApB,eACAG,aACAmB,mBACAE,qBACAtB,mBACAb,aACAD,aACAD,aA9EiB,SAASnC,EAAQiB,GAClC,IAkBIE,EAlBAgE,EAAYlE,EAAQlB,QAAO,SAASoB,GACtC,OAAQA,EAAM5F,WACZ,IAAK,QACH,OAA2D,IAApD8I,EAAcrE,EAAOvD,SAAU0E,EAAM1E,UAE9C,IAAK,OAGL,IAAK,QACH,OAA0D,IAAnD4H,EAAcrE,EAAOvD,SAAU0E,EAAM1E,UAE9C,IAAK,OACH,OAA2D,IAApD4H,EAAcrE,EAAOvD,SAAU0E,EAAM1E,UAE9C,QACE,OAAO,MAKb,GAAK0I,EAAUvJ,OAEf,OADAuF,EAAQgE,EAAU,GACdhC,EAAWhC,EAAM5F,WACfgJ,EAAgBvE,EAAOvD,SAAU0E,EAAM1E,UAAY,EAAU,OAC1D,OAGL4H,EAAcrE,EAAOvD,SAAU0E,EAAM1E,UAAY,EAAU,QACxD,SAkDPkG,WAzCe,SAAS3C,EAAQiB,GAChC,IAAKjB,EAAOR,KAAM,OAAO,EACzB,IAAI4F,EAAWnE,EAAQlB,QAAO,SAAAoB,GAAK,OAAI7C,EAAMnC,QAAQ6D,EAAQ,CAACmB,OAE9D,OAAOF,EAAQrF,SAAWwJ,EAASxJ,QAsCnC2G,oBAnCwB,SAASvC,EAAQiB,GACzC,OAAOA,EAAQlB,QAAO,SAAAoB,GAAK,OAAIA,EAAM3B,KAAO,GAAKlB,EAAMlD,UAAU+F,EAAM1E,SAAUuD,EAAOvD,SAAU0E,EAAM5F,eAmCxG2G,oBAhCwB,SAASjB,GACjC,IAAIoE,EAAYpE,EAAQlB,QAAO,SAAAoB,GAAK,OAAIA,EAAM3B,QAC9C,OAAI6F,EAAUzJ,OAAeyJ,EACtBpE,K,gBC/UT,IAAI3C,EAAQD,EAAQ,GAChBnD,EAAa,CAAC,QAAS,OAAQ,QAAS,QA0BxC0G,EAAoB,SAAS5B,EAAQG,GACvC,IACI5E,EADAgI,EAlBe,SAASvD,EAAQG,GACpC,GAAKA,EAAIhB,aAAavD,OAAtB,CAGA,IAAI0J,EAAYtF,EAAOvD,SACnB8I,EAAcpF,EAAIhB,aAAa,GASnC,OAPAgB,EAAIhB,aAAaC,SAAQ,SAASuF,GACjBrG,EAAMrB,YAAYqI,EAAWX,GAAOrG,EAAMrB,YAAYqI,EAAWC,KAE9EA,EAAcZ,MAIXY,GAIOjC,CAAetD,EAAQG,GAGrC,GAAKoD,EAML,OAFAhI,EAAY+C,EAAM3B,iBAAiBqD,EAAOvD,SAAU8G,MAElCvD,EAAOzE,UAChBA,EAGF,QAGLsG,EAAiB,SAAS6B,EAAQ1D,EAAQiB,EAASd,GACrD,IAAIwD,EAAcC,KAAKC,MAAMD,KAAKE,UAAU9D,IAE5C,GAAe,SAAX0D,EACF,OAAQ1D,EAAOzE,WACb,KAAKL,EAAW,GACVyI,EAAYlH,SAAS,GAAK,GAC5BkH,EAAYlH,SAAS,KAEvB,MACF,KAAKvB,EAAW,GACVyI,EAAYlH,SAAS,GAAK0D,EAAIjB,SAAS,IACzCyE,EAAYlH,SAAS,KAEvB,MACF,KAAKvB,EAAW,GACVyI,EAAYlH,SAAS,GAAK0D,EAAIjB,SAAS,IAAIyE,EAAYlH,SAAS,KACpE,MACF,KAAKvB,EAAW,GACVyI,EAAY,GAAK,GAAGA,EAAYlH,SAAS,KAOnD,OAnEW,SAASuD,EAAQiB,GAC5B,OAAOA,EACJlB,QAAO,SAACoB,GAAD,OAAWA,EAAM3E,WACxB2D,KAAI,SAACgB,GAAD,OAAW7C,EAAMnC,QAAQgF,EAAO,CAACnB,GAASmB,EAAM5F,cACpDwE,QAAO,SAACsD,GAAD,OAAuB,IAAXA,KAAiBzH,OAAS,EA+D5CwH,CAAOO,EAAa1C,IAMtBc,EAAgB,SAAS/B,EAAQiB,EAASd,GAC5C,IACI2E,EAAajD,EAAe,QAAS7B,EAAQiB,EAASd,GACtD4E,EAAelD,EAAe,OAAQ7B,EAAQiB,EAASd,GAE3D,OAAI2E,GACE9E,EAAOR,KACF4C,EAAWpC,EAAQiB,IAAYoB,EAAWrC,EAAQiB,GAGzD8D,EACK,YADT,GA0BE1C,EAAa,SAASrC,EAAQiB,GAChC,IAAIuE,EApBgB,SAASxF,EAAQiB,GACrC,IACIsC,EADAS,EAAe/C,EAAQgD,MAAM,EAAGhD,EAAQrF,QAe5C,OAZAoI,EAAeA,EAAajE,QAAO,SAASoB,GAC1C,OAAOA,EAAM3E,WAGf+G,EAAUS,EAAa,GAEvBA,EAAa5E,SAAQ,SAAS+B,GACxB7C,EAAMrB,YAAY+C,EAAQmB,GAAS7C,EAAMrB,YAAY+C,EAAQuD,KAC/DA,EAAUpC,MAIPoC,EAIYQ,CAAgB/D,EAAQiB,GACvC1F,EAAY+C,EAAM3B,iBAAiBqD,EAAOvD,SAAU+I,EAAa/I,UAErE,OAAIlB,IAAcyE,EAAOzE,UAChBA,EAGF,QAGL6G,EAAa,SAASpC,EAAQiB,GAChC,IAAIrE,EAA4B,UAArBoD,EAAOzE,UAAwB,QAAU,QAChDmJ,EAAYd,KAAKC,MAAMD,KAAKE,UAAU9D,IAc1C,OAZAiB,EAAUA,EAAQlB,QAAO,SAASoB,GAChC,OAAOA,EAAM3E,WAGftB,EAAWkE,SAAQ,SAAS7D,GAC1BmJ,EAAUnJ,UAAYA,EAElB+C,EAAMnC,QAAQuI,EAAWzD,KAC3BrE,EAAOrB,MAIJqB,GAkCL6I,EAAU,CACZ5E,KAAM,CACJC,KAAM,SACNC,MAAO,GAETC,GAAI,SAAShB,EAAQiB,EAASd,GAC5B,OAAIH,EAAOR,KArCF,SAASQ,EAAQiB,EAASd,GACrC,IAAI6B,EAIJ,OAAI1D,EAAMnC,QAAQ6D,EAAQiB,GAAiB,SAE3Ce,EAAWI,EAAWpC,EAAQiB,KACdY,EAAeG,EAAUhC,EAAQiB,EAASd,GAAa6B,EAE1DD,EAAc/B,EAAQiB,EAASd,IAGrC,OAwBmBuF,CAAO1F,EAAQiB,EAASd,GArBrC,SAASH,EAAQiB,EAASd,GACvC,IAAIqB,EAIJ,OADAA,EAAWI,EAAkB5B,EAAQG,KACrB0B,EAAeL,EAAUxB,EAAQiB,EAASd,GAAaqB,EAE1DO,EAAc/B,EAAQiB,EAASd,IAGrC7B,EAAM5B,iBAYJiJ,CAAS3F,EAAQiB,EAASd,KAIrC9G,EAAOC,QAAUmM,G,gBCxLjB,IAAInH,EAAQD,EAAQ,GAEhBuH,EAAW,CACb/E,KAAM,CACJC,KAAM,SACNC,MAAO,IAETC,GAAI,SAAC6E,EAAaxJ,EAAe0C,GAC/B,IAAI+G,EAEJ,OAAIxH,EAAMnC,QAAQ0J,EAAaxJ,IAAkBwJ,EAAYrG,KACpD,QAELT,EAAgBI,aAAavD,QAC/BkK,EAAkBxH,EAAM3B,iBAAiBkJ,EAAYpJ,SAAUsC,EAAgBI,aAAa,OAEpE0G,EAAYtK,UAAkBuK,EAC/C,OAEFxH,EAAM5B,mBAIjBrD,EAAOC,QAAUsM,G,gBCrBd,IAAItH,EAAQD,EAAQ,GACnB0H,EAAmB,EACnBC,EAAa,KACbC,EAAa,CACTC,EAAG,QACHC,EAAG,OACHC,EAAG,QACHC,EAAG,QAEPC,EAAgB,EAChBC,EAAW,CACP1F,KAAM,CACFC,KAAM,WACNC,MAAO,GAEXC,GAAI,SAAC6E,EAAaxJ,EAAe0C,GAC7B,IAAIyH,EA8CYhH,EAShB,GAAIlB,EAAMnC,QAAQ0J,EAAaxJ,IAAkBwJ,EAAYrG,KACzD,MAAO,QAGX,GAAwB,GAApBqG,EAAYrG,MAA8B,GAAjB8G,EAAoB,CAC7C,IAAIG,EAtDU,WACV,IAAIC,EAAab,EAAYpJ,SACzBkK,EAAc,GACdC,EAAU,KACd,IAAK,IAAIC,KAAW9H,EAAgBI,aAAc,CAC9C,IAAIK,EAAOT,EAAgBI,aAAa0H,GAGpCC,EAFWrL,KAAKQ,IAAIyK,EAAW,GAAKlH,EAAK,IAC9B/D,KAAKQ,IAAIyK,EAAW,GAAKlH,EAAK,IAGzCsH,EAAeH,IACfA,EAAcG,EACdF,EAAUpH,GAIlB,OAAOoH,EAsCMG,GAkBjB,OAVAP,EAAoBlI,EAAMzC,aAAagK,EAAYpJ,SAAUgK,GArB7C,OADJjH,EAwBCwG,IApBFxG,EAAK,IAAMqG,EAAYpJ,SAAS,IACnC+C,EAAK,IAAMqG,EAAYpJ,SAAS,KAoBpC6J,EAAgB,GAIpBN,EAAaS,EAGTD,IAAsBX,EAAYtK,UAC3BiL,EAGJ,OAUP,QANAT,EACuB,IACnBA,EAAmB,EACnBO,KAGGL,EAAWF,KAOlC1M,EAAOC,QAAUiN,G,gBCrHjB,IAAIjI,EAAQD,EAAQ,GAChBnD,EAAa,CAAC,QAAS,OAAQ,QAAS,QAExC8L,EAAuB,SAAClL,EAAOmL,GACjC,IAAIC,EAAeD,EAASE,QAC1B,SAACC,EAASvK,GAMR,QALoB,IAAhBuK,EAAQ,IAAa9I,EAAMrB,YAAYnB,EAAOe,GAAmBuK,EAAQ,MAC3EA,EAAQ,GAAK9I,EAAMrB,YAAYnB,EAAOe,GACtCuK,EAAQ,GAAKvK,GAGRuK,IAET,EAAE,EAAG,IAGP,OAAO9I,EAAM3B,iBAAiBb,EAAOoL,EAAa,KAahDG,EAAO,CACTxG,KAAM,CACJC,KAAM,OACNC,MAAO,GAETC,GAAI,SAAC6E,EAAaxJ,EAAe0C,GAC/B,IAAI+G,EACAwB,EAjBUjM,EAAkBkM,EAmBhC,OAAIjJ,EAAMnC,QAAQ0J,EAAaxJ,IAAkBwJ,EAAYrG,KAAa,QAEtEqG,EAAYrG,MArBFnE,EAsBmBwK,EAAYpJ,SAtBb8K,EAsBuBlL,EAAc8D,KAAI,SAAAd,GAAE,OAAIA,EAAG5C,aAAhF6K,EArBGpM,EAAWiM,QAAO,SAAC9D,EAAQ0C,GAChC,OAAI1C,GACGkE,EAAcJ,QAAO,SAACK,EAAiBC,GAC5C,OAAID,IACGlJ,EAAMlD,UAAUC,EAAkBoM,EAAsB1B,GAAoBA,EAAmB,QACrG,QACF,SAoBCuB,EAAoBN,EAAqBnB,EAAYpJ,SAAUJ,EAAc8D,KAAI,SAAAd,GAAE,OAAIA,EAAG5C,gBAChEoJ,EAAYtK,UAJ7B+L,EAKF,QAGLvI,EAAgBI,aAAavD,QAC/BkK,EAAkBkB,EAAqBnB,EAAYpJ,SAAUsC,EAAgBI,iBAErD0G,EAAYtK,UAAkBuK,EAC/C,OAGFxH,EAAM5B,mBAIjBrD,EAAOC,QAAU+N,G,gBC9DjB,IAAI/I,EAAQD,EAAQ,GAEhBqC,EAAW,CACbG,KAAM,CACJC,KAAM,aACNC,MAAO,GAETC,GAAI,SAAC6E,EAAaxJ,EAAe0C,GAC/B,IAAI+G,EAEJ,OAAIxH,EAAMnC,QAAQ0J,EAAaxJ,IAAkBwJ,EAAYrG,KACpD,QAGLT,EAAgBI,aAAavD,QAC/BkK,EAAkBxH,EAAM3B,iBAAiBkJ,EAAYpJ,SAAUsC,EAAgBI,aAAa,OAEpE0G,EAAYtK,UAAkBuK,EAC/CxH,EAAM5B,iBAGR,SAIXrD,EAAOC,QAAUoH,G,gBCzBjB,IAAIpC,EAAQD,EAAQ,GAChBqJ,GAAS,EACT/G,EAAU,CACZE,KAAM,CACJC,KAAM,UACNC,MAAO,GAETC,GAAI,SAAC6E,EAAaxJ,EAAe0C,GAC/B,IAAI+G,EACA6B,EAQJ,OAPI9B,EAAYrG,KAAM,IACpBkI,GAAS,GAEa,GAApB7B,EAAYrG,OACdkI,GAAQ,GAGN3I,EAAgBI,aAAavD,QAAU8L,GACzC5B,EAAkBxH,EAAM3B,iBAAiBkJ,EAAYpJ,SAAUsC,EAAgBI,aAAa,OAEpE0G,EAAYtK,UAAkBuK,EAC/C,OAIL4B,EAkBApJ,EAAMnC,QAAQ0J,EAAaxJ,IAAkBwJ,EAAYrG,KACpD,QAELT,EAAgBI,aAAavD,QAC/BkK,EAAkBxH,EAAM3B,iBAAiBkJ,EAAYpJ,SAAUsC,EAAgBI,aAAa,OAEpE0G,EAAYtK,UAAkBuK,EAC/C,OAEFxH,EAAM5B,kBA1BXiL,EAAmBrJ,EAAM3B,iBAAiBkJ,EAAYpJ,SAAUJ,EAAc,GAAGI,aACxDoJ,EAAYtK,UACV+C,EAAM3B,iBAAiBN,EAAc,GAAGI,SAAUoJ,EAAYpJ,YAC5DJ,EAAc,GAAGI,SAC3BkL,EAEArJ,EAAM5B,iBAGrB4B,EAAMnC,QAAQ0J,EAAaxJ,IAAkBwJ,EAAYrG,KACtD,QAEElB,EAAM5B,mBAkBrBrD,EAAOC,QAAUqH,G,kKChCFiH,E,sLApBX,OAAO,I,+BAGC,IAIJ/J,EAHEqB,EAAa0D,KAAKiF,MAAlB3I,SAEF4I,EAAW,IAAM5I,EAGjB6I,EAAa,GACjB,IAAKlK,EAAI,EAAGA,EAAIqB,EAAWA,EAAUrB,IACnCkK,EAAWjI,KACT,yBAAKiB,MAAO,CAAEiH,OAAQF,EAAW,OAAQG,MAAOH,EAAW,QAAUI,UAAU,aAAaC,IAAKtK,KAIrG,OAAO,6BAAMkK,O,GAlBGK,IAAMC,WC0BXC,E,uKAxBH,IAAD,EAC0B1F,KAAKiF,MAAhC3I,EADC,EACDA,SAAUC,EADT,EACSA,aAEZ2I,EAAW,IAAM5I,EAEjBqJ,EAAanK,IAAE+B,IAAIhB,GAAc,SAACqJ,EAASC,GAC7C,OACE,yBACEN,IAAKM,EACLP,UAAU,aACVnH,MAAO,CACL2H,IAAKZ,EAAWU,EAAQ,GAAK,OAC7BG,KAAMb,EAAWU,EAAQ,GAAK,OAC9BP,MAAOH,EAAW,OAClBE,OAAQF,EAAW,aAM3B,OAAO,yBAAKI,UAAU,8BAA8BK,O,GArBpCH,IAAMC,WCAtBnN,EAAa,CAAC,QAAS,OAAQ,QAAS,QAqE7B0N,E,kDAlEb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CACXC,iBAAkBjB,EAAMhJ,aAAasB,KAAI,SAAAd,GAAE,OAAInE,EAAW8B,QAAQqC,EAAG9D,eAHtD,E,sEAOOwN,GACxB,IAAID,EAAmBlG,KAAKiG,MAAMC,iBAC9BE,EAAsBD,EAAUlK,aAAasB,KAAI,SAAAd,GAAE,OAAInE,EAAW8B,QAAQqC,EAAG9D,cAEjFqH,KAAKqG,SAAS,CACZH,iBAAkBE,EAAoB7I,KAAI,SAACd,EAAIC,GAC7C,IAAI4J,GAAS7J,EAAK,GAAK,GAAOyJ,EAAiBxJ,GAAS,GAAK,EAI7D,OAHa,IAAT4J,IAAYA,GAAQ,IACV,IAAVA,IAAaA,EAAO,GAEjBJ,EAAiBxJ,GAAS4J,S,+BAK7B,IACFJ,EAAqBlG,KAAKiG,MAA1BC,iBADC,EAE2ClG,KAAKiF,MAAjD3I,EAFC,EAEDA,SAAUL,EAFT,EAESA,aAAcC,EAFvB,EAEuBA,gBAE1BgJ,EAAW,IAAM5I,EAEjBiK,EAAe/K,IAAE+B,IAAItB,GAAc,SAACuK,EAAYzK,GAClD,IAAKyK,EAAW5M,QAAS,OAAO,KAEhC,IAAI6M,EAAavK,EAAgBH,GAAa2K,UAE9C,OACE,yBACEnB,IAAKxJ,EACLuJ,UAAU,yBACVnH,MAAO,CACLkH,MAAOH,EAAW,OAClBE,OAAQF,EAAW,OACnByB,UACE,cACAzB,EAAWsB,EAAW3M,SAAS,GAD/B,oBAIAqL,EAAWsB,EAAW3M,SAAS,GAC/B,UAEJ,yBACEyL,UAAU,eACVnH,MAAO,CACLkH,MAAOH,EAAW,OAClBE,OAAQF,EAAW,OACnB0B,gBAAiB,6BAA+BJ,EAAWrI,OAAS,GAAK,QACzEwI,UAAW,sBAA6B,GAAKT,EAAiBnK,GAAe,WAGjF,yBAAKuJ,UAAU,qBAAqBmB,EAAWvI,UAKrD,OAAO,yBAAKoH,UAAU,eAAeiB,O,GA/DnBf,IAAMC,WCgCboB,E,uKAjCH,IAAD,EACwB7G,KAAKiF,MAA9B6B,EADC,EACDA,MAAOC,EADN,EACMA,OAAQC,EADd,EACcA,MAGrB,OAFAF,EAAQtL,IAAE+B,IAAIuJ,GAAO,SAAAG,GAAW,OAAIA,KACpCH,EAAQtL,IAAE0L,OAAOJ,GAAO,SAAAG,GAAW,OAAwB,EAApBA,EAAYE,QAEjD,yBAAK7B,UAAU,SACb,+BACE,+BACE,4BACE,6BACA,qCACSyB,EADT,IACkBC,GAElB,sCAGJ,+BACGxL,IAAE+B,IAAIuJ,GAAO,SAACG,EAAavK,GAC1B,OACE,wBAAI6I,IAAK7I,EAAO4I,UAAW2B,EAAYrN,QAAU,GAAK,eACpD,wBAAI0L,UAAU,qBAAd,gBACA,wBAAIA,UAAU,eAAe2B,EAAY/I,MACzC,wBAAIoH,UAAU,iBAAiB2B,EAAYE,iB,GAvBzC3B,IAAMC,WCAtBnN,EAAa,CAAC,QAAS,OAAQ,QAAS,QAuC7B8O,E,oLApCSjB,GACpB,OAAOA,EAAUkB,OAAOrO,SAAWgH,KAAKiF,MAAMoC,OAAOrO,S,+BAG7C,IAAD,EACoBgH,KAAKiF,MAA1BoC,EADC,EACDA,OAEFnC,EAAW,IAHR,EACO5I,SAIVgL,EAAe9L,IAAE+B,IAAI8J,GAAQ,SAAC5K,EAAIC,GACpC,OACE,yBACE6I,IAAK7I,EACL4I,UAAU,6BACVnH,MAAO,CACL2H,IAAKZ,EAAWzI,EAAGO,OAAO,GAAK,OAC/B+I,KAAMb,EAAWzI,EAAGO,OAAO,GAAK,OAChC2J,UACE,cACAzB,EAAW,EADX,oBAIAA,EAAW,EAJX,gBAOyC,IAAxC5M,EAAW8B,QAAQqC,EAAG9D,WAAa,GACpC,cAMV,OAAO,yBAAK2M,UAAU,eAAegC,O,GAjCpB9B,IAAMC,WCeZ8B,E,uKAhBH,IACF1K,EAAUmD,KAAKiF,MAAfpI,MACF2K,EAAO,IAAIC,KAIf,OAFAjM,IAAEkM,OAAO7K,GAAO,SAAA8K,GAAC,OAAIH,EAAOG,EAAEH,KAAO,OACrC3K,EAAQrB,IAAE0L,OAAOrK,GAAO,SAAA8K,GAAC,OAAIA,EAAEH,KAAKI,WAElC,yBAAKtC,UAAU,iBACZ9J,IAAE+B,IAAIV,GAAO,SAAC8K,EAAGE,GAChB,OAAO,uBAAGtC,IAAKsC,GAAMF,EAAEG,c,GAVLtC,IAAMC,W,iBCiCnBsC,E,WAhCb,WAAYC,GAAU,oBACpBhI,KAAKiI,IAAMC,IAAW5M,qBAAqB,GAC3C0E,KAAKmI,YAAcH,EAAQ/J,KAC3B+B,KAAKoI,UAAYJ,EAAQ5J,G,oDAIzB,OAAO4B,KAAKiI,M,gCAIZ,OAAOjI,KAAKmI,c,gCAIZ,OAAOnI,KAAKmI,YAAYjK,O,sCAIxB,IAAIjD,EAAIpC,KAAKwP,MAAsB,GAAhBxP,KAAKC,UAAiB,EACzCwP,IAAGhR,WAAW,UAAY2D,GAAGpE,S,8BAGvBoM,EAAaxJ,EAAe0C,GAClC,IACE,OAAO6D,KAAKoI,UAAUnF,EAAaxJ,EAAe0C,GAClD,MAAO8D,GACPsI,QAAQC,MAAM,IAAKvI,Q,sBC1BrB3H,EAAa,CAAC,QAAS,OAAQ,QAAS,QA8L7BmQ,E,WAzLb,WAAYC,EAAuBC,EAAcvM,GAAc,IAAD,2BAI5D4D,KAAK4I,aAA8C,EAA/BF,EAAsB1P,OAAa,EACvDgH,KAAK6I,QAAU,EACf7I,KAAK8I,WAAaH,GAAgB,GAClC3I,KAAK+I,aAAe,SAACC,EAAKlN,GAExBM,EAAY4M,EAAKlN,IAEnBkE,KAAKiJ,kBAAoB,EACzBjJ,KAAKkJ,kBAAoB,EACzBlJ,KAAKmJ,iBAAmBT,EAAsBnL,KAAI,SAAA6L,GAChD,IAAIhM,EAAS,IAAI2K,EAAYqB,GAS7B,OARA,EAAKN,WAAW1L,EAAOiM,SAAW,CAChCnL,KAAMd,EAAOkM,UACbC,OAAQ,EACR1M,MAAO,EACP2M,IAAK,EACLrC,KAAM,EACNsC,QAAS,GAEJrM,KAGT4C,KAAK0J,Y,mEAIL,OAAO1J,KAAK2J,cAAcpF,QAAO,SAAC9D,EAAQhE,GACxC,OAAOA,EAAG7C,QAAU6G,EAAS,EAAIA,IAChC,K,kCAGQ,IAAD,OACVT,KAAK4J,iBAAmB,CACtBtN,SAAU,GACVC,aAAc,IAEhByD,KAAK6I,UACL7I,KAAKkJ,kBAAoB,EACzBlJ,KAAKmJ,iBAAmB3N,IAAEqO,QAAQ7J,KAAKmJ,kBACvCnJ,KAAKiJ,kBAAoBjJ,KAAKmJ,iBAAiBnQ,OAC/CgH,KAAK2J,cAAgB3J,KAAKmJ,iBAAiB5L,KAAI,SAAAuM,GAC7C,IAAIxN,EAAW,EAAKsN,iBAAiBtN,SACrC,MAAO,CACL6B,MAAO2L,EAAepD,UAAUvI,MAChCtE,SAAU,CAAChB,KAAKE,MAAMF,KAAKC,SAAWwD,GAAWzD,KAAKE,MAAMF,KAAKC,SAAWwD,IAC5E3D,UAAWL,EAAWO,KAAKE,MAAsB,EAAhBF,KAAKC,WACtC8D,KAAM,EACNhD,SAAS,MAIboG,KAAK+J,eAAiB,EACtB/J,KAAKgK,gB,oCAIL,IAAIC,EAAkB,CACpBpR,KAAKE,MAAMF,KAAKC,SAAWkH,KAAK4J,iBAAiBtN,UACjDzD,KAAKE,MAAMF,KAAKC,SAAWkH,KAAK4J,iBAAiBtN,WAIjD0D,KAAK4J,iBAAiBrN,aAAa7C,MAAK,SAAA+C,GACtC,OAAOA,EAAG,KAAOwN,EAAgB,IAAMxN,EAAG,KAAOwN,EAAgB,MAGnEjK,KAAKgK,cAIPhK,KAAK4J,iBAAiBrN,aAAaW,KAAK+M,K,iCAIxC,MAAO,CACL9N,gBAAiB6D,KAAK4J,iBACtBM,UAAWlK,KAAK8I,WAChB/B,OAAQ/G,KAAK6I,QACbsB,YAAanK,KAAK4I,aAClB3M,aAAc+D,KAAK2J,cACnBzN,gBAAiB8D,KAAKmJ,oB,gCAIf,IAAD,OACJnJ,KAAKkJ,kBA5Fa,IA4F2BlJ,KAAKoK,yBACpDpK,KAAK+I,aAAa,QAClB/I,KAAKqK,kBAAkB,SAEzB,IAAIjJ,EAAe5F,IAAE8O,UAAUtK,KAAK2J,eAAe,GAE/C3J,KAAKoK,uBAAyB,IAChCpK,KAAKkJ,mBAAqB,IAGxBlJ,KAAKoK,uBAAyB,GAChCpK,KAAKkJ,oBAGP,IAAIqB,EAAenJ,EAAajE,QAAO,SAACqN,EAAoB9N,GAC1D,OAAIA,IAAU,EAAKqN,gBACZS,EAAmB5Q,WAwB5B,OArBIoG,KAAK2J,cAAc3J,KAAK+J,gBAAgBnQ,SAC1CoG,KAAKyK,kBACHzK,KAAK+J,eACL/J,KAAKmJ,iBAAiBnJ,KAAK+J,gBAAgBW,QACzCtJ,EAAapB,KAAK+J,gBAClBQ,EACA/O,IAAE8O,UAAUtK,KAAK4J,kBAAkB,KAKzC5J,KAAK+J,gBAAkB/J,KAAK+J,eAAiB,GAAK/J,KAAKmJ,iBAAiBnQ,OAEpEgH,KAAK4J,iBAAiBrN,aAAavD,OAASgH,KAAK2J,cAAc3Q,OAAS,KAAOH,KAAKC,SAAW,KACjGkH,KAAKgK,cAGHnR,KAAKC,SAAW,KAClBkH,KAAKgK,cAGAhK,KAAK2K,a,wCAGI7J,EAAQhF,GAAO,IAAD,OAC9B,GAAe,SAAXgF,EAAmB,CAAC,IAChBzD,EAAmBvB,EAAnBuB,OAAQC,EAAWxB,EAAXwB,OACd0C,KAAK8I,WAAWzL,EAAOgM,SAASxM,QAChCrB,IAAEgB,QAAQwD,KAAKmJ,kBAAkB,SAAA/L,GAC/B,IAAI0J,EAAQ,EAAKgC,WAAW1L,EAAOiM,SAC/B/L,EAAOlD,QAAQgD,IAAW,IAC5B,EAAK6L,oBACLnC,EAAMyC,UAEJzC,EAAMyC,OACRzC,EAAM0C,IAAM1C,EAAMjK,MAAQiK,EAAMyC,OAEhCzC,EAAM0C,IAAM1C,EAAMjK,SAGtBmD,KAAKkJ,kBAAoB,EAE3B,MAAe,QAAXpI,IACFd,KAAK8I,WAAWhN,EAAK0B,OAAO6L,SAASlC,OACrC3L,IAAEgB,QAAQwD,KAAK8I,YAAY,SAAC7B,EAAa1B,GAAS,IAC1C4B,EAAkBF,EAAlBE,KAAkBF,EAAZwC,QACZxC,EAAYwC,QAAU5Q,KAAKwP,MAAc,IAAPlB,EAAc,EAAK0B,YAGnD7I,KAAK6I,SAAW7I,KAAK4I,eAIZ,SAAX9H,IACFtF,IAAEgB,QAAQwD,KAAK8I,YAAY,SAAC7B,EAAa1B,GAAS,IAC1C4B,EAAkBF,EAAlBE,KAAkBF,EAAZwC,QACZxC,EAAYwC,QAAU5Q,KAAKwP,MAAc,IAAPlB,EAAc,EAAK0B,YAEnD7I,KAAK6I,SAAW7I,KAAK4I,cARhB5I,KAAK+I,aAAa,YAG7B,I,wCAWgBhN,EAAaC,GAC7BgE,KAAK2J,cAAgBiB,IAAsB,CACzC7O,YAAaA,EACbC,aAAcA,EACdC,aAAc+D,KAAK2J,cACnBzN,gBAAiB8D,KAAKmJ,iBACtBhN,gBAAiB6D,KAAK4J,iBACtBxN,YAAa4D,KAAK+I,aAClB1M,aAAc2D,KAAKqK,kBAAkBQ,KAAK7K,Y,sBCjL5C8K,EAActP,IAAEqO,QAAQrO,IAAE+B,IAAIwN,KAAe,SAAAtO,GAAE,OAAIA,MAEnDuO,EAAa,GA2OFC,E,kDArOb,WAAYhG,GAAQ,IAAD,6BACjB,cAAMA,GAENiG,OAAOC,cAAgB,IAAI1C,EAAQqC,EAAa,GAAI,EAAKM,YAAYP,KAAjB,iBAMpD,EAAK5E,MAAQ,CACXoF,QAASH,OAAOC,cAAcR,WAC9BtD,OAAQ,GACRiE,MAhBgB,IAiBhBzO,MAAO,GACP0O,iBAAkB,EAClBC,UAAU,GAfK,E,gEAoBjBxL,KAAKyL,a,oCAILzL,KAAKqG,SAAS,CACZiF,MAAOzS,KAAKE,MAAyB,GAAnBiH,KAAKiG,MAAMqF,W,gCAItB,IAAD,OACRN,EAAa,GAEThL,KAAK0L,iBAAiBC,aAAa3L,KAAK0L,iBAE5CR,OAAOC,cAAczB,YAErB1J,KAAKqG,UACH,SAAAJ,GACE,MAAO,CACLoF,QAASH,OAAOC,cAAcR,WAC9BW,MA5CY,IA6CZzO,MAAO,GACP0O,iBAAkBtF,EAAMsF,iBAAmB,MAG/C,WACM,EAAKG,iBAAiBC,aAAa,EAAKD,iBAC5CR,OAAOU,YAAW,WAChB,EAAKH,aACJ,S,iCAKG,IAAD,OACT,IAAIzL,KAAKiG,MAAMuF,SAAf,CAEA,IAAID,EAAmBvL,KAAKiG,MAAMsF,iBAE9BvL,KAAK0L,iBAAiBC,aAAa3L,KAAK0L,iBAE5C1L,KAAK0L,gBAAkBR,OAAOU,YAAW,WACvC,GAAI,EAAK3F,MAAMsF,mBAAqBA,EAApC,CAOA,GALuBL,OAAOC,cAAcR,WAAtC1O,aAC8BsI,QAAO,SAAC9D,EAAQhE,GAClD,OAAOA,EAAG7C,QAAU6G,EAAS,EAAIA,IAChC,GAEoB,EAGrB,OAFAyK,OAAOC,cAAcU,eACrB,EAAKJ,WAIPP,OAAOC,cAAcU,UAErB,EAAKxF,SACH,CACEgF,QAASH,OAAOC,cAAcR,WAC9BW,MAAO,EAAKrF,MAAMqF,MAnFV,GAmF8BQ,SAA4B,IAAnB,EAAK7F,MAAMqF,MAAc,IAnFhE,IAqFV,EAAKG,aAENzL,KAAKiG,MAAMqF,U,kCAGJS,EAAKjQ,GACf,GAAY,UAARiQ,EAAiB,CACnB,IAAIC,EAAYhM,KAAKiG,MAAMoB,OAC3B2E,EAAU9O,KAAK,CACbvE,UAAWmD,EAAKnD,UAChBqE,OAAQlB,EAAKkB,OAAOqE,QACpB4K,MAAM,IAAIxE,MAAOyE,YAGnBlM,KAAKqG,SAAS,CACZgB,OAAQ2E,IAGZ,MAAY,QAARD,GACQ,SAARA,EADsB/L,KAAKmM,UAEnB,SAARJ,EAAuB/L,KAAKoM,YAAYtQ,GAChC,QAARiQ,EAAsB/L,KAAKqM,eAA/B,I,kCAGUvQ,GAAO,IAAD,OACZwQ,EAAUpB,OAAOC,cAAcR,WAAWzO,gBAC1CW,EAAQmD,KAAKiG,MAAMpJ,MACnBQ,EAASiP,EAAQxQ,EAAKuB,QACtBC,EAAS9B,IAAE+B,IAAIzB,EAAKwB,QAAQ,SAAAZ,GAI9B,OAHAsO,EAAW9N,KAAKpB,EAAKuB,QACrBA,EAAOR,QACPyP,EAAQ5P,GAAO6M,SACR+C,EAAQ5P,MAEb6P,EAAe,CAAClP,EAAOiM,UAAW,SAAU9N,IAAE+B,IAAID,GAAQ,SAAAF,GAAM,OAAIA,EAAOkM,aAAWvO,KAAK,MAAMA,KAAK,KAE1G8B,EAAMK,KAAK,CAAEsK,KAAM,IAAIC,KAAQK,KAAMyE,IACrCvM,KAAKqG,SAAS,CACZxJ,MAAOA,IAGT+O,YAAW,kBAAM,EAAKY,aAAa1Q,EAAKuB,OAAQA,EAAQC,KAAS,O,gCAIjE0C,KAAKqG,SAAS,CACZgF,QAASH,OAAOC,cAAcR,WAC9BtD,OAAQ,GACRiE,MAAO,EACPzO,MAAO,GACP2O,UAAU,M,mCAID9O,EAAOW,EAAQC,GAC1B,IAAImP,EAAcjR,IAAE2B,OAAO6N,GAAY,SAAA5N,GAAM,OAAIA,IAAWV,KAAO1D,OAC/D0T,EAAY,GACZC,EAAe,GACf9P,EAAQmD,KAAKiG,MAAMpJ,MAKvB,OAJ0B,IAAtBmO,EAAWhS,QACb4S,WAAWtD,IAAG5Q,OAAOC,WAAWd,OAAQ,IAGlCyG,EAAOtE,QACb,KAAK,EACH4S,WAAWtD,IAAG5Q,OAAOE,WAAWf,OAAQ,KACxC6V,EAAYrP,EAAOiM,UAAY,sBAC/B,MACF,KAAK,EACHsC,WAAWtD,IAAG5Q,OAAOG,WAAWhB,OAAQ,KACxC6V,EAAYrP,EAAOiM,UAAY,sBAC/B,MACF,KAAK,EACHsC,WAAWtD,IAAG5Q,OAAOI,YAAYjB,OAAQ,KACzC6V,EAAYrP,EAAOiM,UAAY,wBAQnC,OALAzM,EAAMK,KAAK,CACTsK,KAAM,IAAIC,KACVK,KAAM4E,IAGAD,EAAc5T,KAAKE,MAAsB,EAAhBF,KAAKC,WACpC,KAAK,EACH8S,WAAWtD,IAAG5Q,OAAOK,aAAalB,OAAQ,KAC1C8V,EAAetP,EAAOiM,UAAY,0BAClC,MACF,KAAK,EACHsC,WAAWtD,IAAG5Q,OAAOM,WAAWnB,OAAQ,KACxC8V,EAAetP,EAAOiM,UAAY,kBAClC,MACF,KAAK,EACHsC,WAAWtD,IAAG5Q,OAAOO,QAAQpB,OAAQ,KACrC8V,EAAetP,EAAOiM,UAAY,6BAClC,MACF,KAAK,EACHsC,WAAWtD,IAAG5Q,OAAOQ,QAAQrB,OAAQ,KACrC8V,EAAetP,EAAOiM,UAAY,eAClC,MACF,QACEqD,EAAY,+BAA2BtP,EAAOiM,UAAlC,KACZsC,WAAWtD,IAAG5Q,OAAOS,OAAOtB,OAAQ,KAEpCgC,KAAKC,SAAW,IAAK+D,EAAMK,KAAK,CAAEsK,KAAM,IAAIC,KAAQK,KAAM6E,IAC9D3M,KAAKqG,SAAS,CACZxJ,MAAOA,M,+BAID,IAAD,EACoCmD,KAAKiG,MAA1CoF,EADC,EACDA,QAAShE,EADR,EACQA,OAAQxK,EADhB,EACgBA,MAAO2O,EADvB,EACuBA,SAExBrP,EAAmFkP,EAAnFlP,gBAAiB+N,EAAkEmB,EAAlEnB,UAAWjO,EAAuDoP,EAAvDpP,aAAcC,EAAyCmP,EAAzCnP,gBAAiB6K,EAAwBsE,EAAxBtE,OAAQoD,EAAgBkB,EAAhBlB,YAEzEhO,EAAkBA,GAAmB,CACnCG,SAAU,IAGZd,IAAEgB,QAAQN,GAAiB,SAACkB,EAAQV,GAClCwN,EAAU9M,EAAOiM,SAASzP,QAAUqC,EAAaS,GAAO9C,WAG1D,IAAM2S,EAAY,YAAO1P,GAEzB,GAAI2O,EAAU,CACZ,IAAMhO,EAAShC,IAAE0L,OAAOgD,GAAW,SAAAjD,GAAW,OAAwB,EAApBA,EAAYE,QAAW,GACzEoF,EAAarP,KAAK,CAChBsK,KAAM,IAAIC,KACVK,KAAM,uBAAG3J,MAAO,CAAEyO,MAAO,OAAQC,WAAY,MAAvC,YAAwDrP,EAAOU,KAA/D,OAERqO,EAAarP,KAAK,CAAEsK,KAAM,IAAIC,KAAQK,KAAM,oCAG9C,OACE,yBAAKxC,UAAU,QAAQwH,QAAS9M,KAAK+M,YAAYlC,KAAK7K,OACpD,kBAAC,EAAD,CAAO1D,SAAUH,EAAgBG,WACjC,kBAAC,EAAD,CAAQ+K,OAAQA,EAAOhG,QAAS/E,SAAUH,EAAgBG,WAC1D,kBAAC,EAAD,CAAOA,SAAUH,EAAgBG,SAAUC,aAAcJ,EAAgBI,eACzE,kBAAC,EAAD,CAASD,SAAUH,EAAgBG,SAAUJ,gBAAiBA,EAAiBD,aAAcA,MAC1FsQ,EAAavT,QAAU,kBAAC,EAAD,CAAe6D,MAAO0P,IAChD,kBAAC,EAAD,CAAOxF,OAAQA,EAAQC,MAAOmD,EAAalO,aAAcA,EAAc6K,MAAOoD,KAC7E,O,GAhOW1E,IAAMC,WCPXuH,MARf,WACE,OACE,yBAAK1H,UAAU,OACb,kBAAC,EAAD,QCIc2H,QACW,cAA7B/B,OAAOgC,SAASC,UAEe,UAA7BjC,OAAOgC,SAASC,UAEhBjC,OAAOgC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.070c8e34.chunk.js","sourcesContent":["module.exports.lasers = {\n  laser0: { play() {} }, // new Audio('static/sounds/lasers/laser0.mp3'),\n  laser1: { play() {} }, // new Audio('static/sounds/lasers/laser1.mp3'),\n  laser2: { play() {} }, // new Audio('static/sounds/lasers/laser2.mp3'),\n  laser3: { play() {} }, // new Audio('static/sounds/lasers/laser3.mp3'),\n  laser4: { play() {} }, // new Audio('static/sounds/lasers/laser4.mp3'),\n  laser5: { play() {} }, // new Audio('static/sounds/lasers/laser5.mp3'),\n  laser6: { play() {} }, // new Audio('static/sounds/lasers/laser6.mp3'),\n  laser7: { play() {} }, // new Audio('static/sounds/lasers/laser7.mp3'),\n  laser8: { play() {} } // new Audio('static/sounds/lasers/laser8.mp3')\n};\n\nmodule.exports.explosions = {\n  explode0: { play() {} }, // new Audio('static/sounds/explosions/explode0.wav'),\n  explode1: { play() {} }, // new Audio('static/sounds/explosions/explode1.wav'),\n  explode2: { play() {} } // new Audio('static/sounds/explosions/explode2.wav')\n};\n\nmodule.exports.streak = {\n  firstBlood: { play() {} }, // new Audio('static/sounds/streak/first-blood.mp3'),\n  doubleKill: { play() {} }, // new Audio('static/sounds/streak/double-kill.mp3'),\n  tripleKill: { play() {} }, // new Audio('static/sounds/streak/triple-kill.mp3'),\n  monsterKill: { play() {} }, // new Audio('static/sounds/streak/monster-kill.mp3'),\n  killingSpree: { play() {} }, // new Audio('static/sounds/streak/killing-spree.mp3'),\n  dominating: { play() {} }, // new Audio('static/sounds/streak/dominating.mp3'),\n  rampage: { play() {} }, // new Audio('static/sounds/streak/rampage.mp3'),\n  godLike: { play() {} }, // new Audio('static/sounds/streak/god-like.mp3'),\n  ownage: { play() {} } // new Audio('static/sounds/streak/ownage.mp3')\n};\n\nmodule.exports.music = {\n  theme0: { play() {} } // new Audio('static/sounds/music/flight.ogg')\n};\n","var DIRECTIONS = ['north', 'east', 'south', 'west'];\nvar movements = ['north', 'east', 'south', 'west', 'shoot'];\n\nvar randomMove = () => {\n  return Math.random() > 0.33 ? 'move' : movements[Math.floor(Math.random() * movements.length)];\n};\n\nvar safeRandomMove = () => {\n  return Math.random() > 0.33 ? 'move' : DIRECTIONS[Math.floor(Math.random() * DIRECTIONS.length)];\n};\n\nvar turn = (currentPosition = [], howMuchTurn) => {\n  var currentPositionIndex = DIRECTIONS.indexOf(currentPosition);\n  return DIRECTIONS[(currentPositionIndex + howMuchTurn) % 4];\n};\n\nvar getDirection = (start = [], end = []) => {\n  start = start || [];\n  end = end || [];\n\n  var diffVertical = Math.abs(start[0] - end[0]);\n  var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  if (diffVertical > diffHorizontal) {\n    return start[0] - end[0] > 0 ? 'north' : 'south';\n  }\n  return start[1] - end[1] > 0 ? 'west' : 'east';\n};\n\nvar getDistance = (start = [], end = []) => {\n  var diffVertical = Math.abs(start[0] - end[0]);\n  var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  return diffHorizontal + diffVertical;\n};\n\nvar fastGetDirection = (start = [], end = []) => {\n  var diffVertical = Math.abs(start[0] - end[0]);\n  // var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  if (diffVertical) {\n    return start[0] - end[0] > 0 ? 'north' : 'south';\n  }\n  return start[1] - end[1] > 0 ? 'west' : 'east';\n};\n\nvar isVisible = (originalPosition = [], finalPosition = [], direction = []) => {\n  switch (direction) {\n    case DIRECTIONS[0]:\n      return originalPosition[1] === finalPosition[1] && originalPosition[0] > finalPosition[0];\n    case DIRECTIONS[1]:\n      return originalPosition[0] === finalPosition[0] && originalPosition[1] < finalPosition[1];\n    case DIRECTIONS[2]:\n      return originalPosition[1] === finalPosition[1] && originalPosition[0] < finalPosition[0];\n    case DIRECTIONS[3]:\n      return originalPosition[0] === finalPosition[0] && originalPosition[1] > finalPosition[1];\n    default:\n      break;\n  }\n};\n\nvar canKill = (currentPlayerState = {}, enemiesStates = []) => {\n  return enemiesStates.some(enemyObject => {\n    return enemyObject.isAlive &&\n      isVisible(currentPlayerState.position, enemyObject.position, currentPlayerState.direction);\n  });\n};\n\nmodule.exports = {\n  randomMove,\n  getDirection,\n  isVisible,\n  canKill,\n  safeRandomMove,\n  fastGetDirection,\n  turn,\n  getDistance\n};\n","var digits = '0123456789';\nvar lowercase = 'abcdefghijklmnoprstuvxuyz';\nvar uppercase = lowercase.toUpperCase();\nvar special = '+/';\nvar base64Chars;\nvar base62Chars;\nvar base32Chars;\nvar generateBaseString;\n\nmodule.exports = (exports = {});\n\nbase64Chars = function() {\n  return [digits, lowercase, uppercase, special].join('');\n};\n\nbase62Chars = function() {\n  return [digits, lowercase, uppercase].join('');\n};\n\nbase32Chars = function() {\n  return [uppercase, digits].join('');\n};\n\ngenerateBaseString = function(pool, length) {\n  var output = '';\n  var i;\n\n  for (i = 0; i < length; i += 1) {\n    output += pool[Math.ceil(Math.random() * 100 % pool.length || 1) - 1];\n  }\n\n  return output;\n};\n\nexports.generateBase64String = function(length) {\n  return generateBaseString(base64Chars(), length);\n};\n\nexports.generateBase62String = function(length) {\n  return generateBaseString(base62Chars(), length);\n};\n\nexports.generateBase32String = function(length) {\n  return generateBaseString(base32Chars(), length);\n};\n\nexports.generateBase10String = function(length) {\n  return generateBaseString(digits, length);\n};\n","var _ = require(\"lodash\");\nvar utils = require(\"../lib/utils.js\");\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nvar safeMovement = (value, size) => {\n  if (value < 0) return 0;\n  if (value > size - 1) return size - 1;\n  return value;\n};\n\nvar clashCoreUtils = data => {\n  var { playerIndex, playerAction, playerStates, playerInstances, gameEnvironment, evtCallback, coreCallback } = data;\n  var currentPlayerState = playerStates[playerIndex];\n\n  if (DIRECTIONS.indexOf(playerAction) !== -1) {\n    currentPlayerState.direction = playerAction;\n    return playerStates;\n  }\n\n  if (playerAction === \"move\") {\n    switch (currentPlayerState.direction) {\n      case DIRECTIONS[0]:\n        currentPlayerState.position[0]--;\n        break;\n      case DIRECTIONS[1]:\n        currentPlayerState.position[1]++;\n        break;\n      case DIRECTIONS[2]:\n        currentPlayerState.position[0]++;\n        break;\n      case DIRECTIONS[3]:\n        currentPlayerState.position[1]--;\n        break;\n      default:\n        break;\n    }\n\n    // prevent the player to go over the world\n    currentPlayerState.position[0] = safeMovement(currentPlayerState.position[0], gameEnvironment.gridSize);\n    currentPlayerState.position[1] = safeMovement(currentPlayerState.position[1], gameEnvironment.gridSize);\n\n    // check if the player collected ammo\n    gameEnvironment.ammoPosition.forEach((el, index) => {\n      if (el[0] === currentPlayerState.position[0] && el[1] === currentPlayerState.position[1]) {\n        gameEnvironment.ammoPosition.splice(index, 1);\n        currentPlayerState.ammo += 1;\n      }\n    });\n  }\n\n  if (playerAction === \"shoot\" && currentPlayerState.ammo > 0) {\n    currentPlayerState.ammo -= 1;\n\n    let kills = [];\n    let survivors = [];\n    evtCallback(\"SHOOT\", {\n      shooter: playerIndex,\n      origin: currentPlayerState.position,\n      direction: currentPlayerState.direction\n    });\n\n    playerStates.forEach((enemyObject, enemyIndex) => {\n      if (\n        enemyObject.isAlive &&\n        utils.isVisible(currentPlayerState.position, enemyObject.position, currentPlayerState.direction)\n      ) {\n        kills.push(enemyIndex);\n        enemyObject.isAlive = false;\n      }\n    });\n\n    if (kills.length) {\n      survivors = _.filter(playerStates, player => player.isAlive);\n      coreCallback(\"KILL\", {\n        killer: playerInstances[playerIndex],\n        killed: _.map(kills, index => playerInstances[index])\n      });\n      evtCallback(\"KILL\", {\n        killer: playerIndex,\n        killed: kills\n      });\n\n      if (!survivors.length) {\n        coreCallback(\"DRAW\");\n        evtCallback(\"DRAW\");\n      }\n\n      if (survivors.length === 1) {\n        coreCallback(\"WIN\", {\n          winner: playerInstances[playerIndex]\n        });\n        evtCallback(\"WIN\", {\n          winner: playerInstances[playerIndex]\n        });\n      }\n    }\n  }\n\n  return playerStates;\n};\n\nmodule.exports = clashCoreUtils;\n","module.exports = {\n  codingpains: require('./players/codingpains.js'),\n  // manuelmhtr: require('./players/manuelmhtr.js'),\n  ericku: require('./players/ericku.js'),\n  // siegfried: require('./players/siegfried.js'),\n  horror: require('./players/horror.js'),\n  elperron: require('./players/elperron.js'),\n  yuno: require('./players/yuno.js'),\n  xmontoya: require('./players/xmontoya.js'),\n  margeux: require('./players/margeux.js')\n};\n","const _ = require(\"lodash\");\n\nvar utils = require('./../lib/utils');\nvar logic = require('./../lib/codingpains-logic');\n\nvar codingpains = {\n  info: {\n    name: 'HGE-7',\n    style: 8\n  },\n\n  ai: function(player, enemies, map) {\n    var armedEnemies = _.filter(enemies, (enemy) => enemy.ammo > 0);\n    if (logic.inDanger(player, armedEnemies)) return codingpains._eluder(player, armedEnemies, map);\n    if (player.ammo) return codingpains._hunter(player, enemies, map);\n    return codingpains._gatherer(player, enemies, map);\n  },\n\n  _gatherer: function(player, enemies, map) {\n    var ammoMove;\n    var safestMove;\n    var centerMove;\n    codingpains.info.mode = 'g';\n    if (!map.ammoPosition.length) {\n      centerMove = logic.goToCenter(player, map);\n      if (logic.isMovementSafe(centerMove, player, enemies, map)) return centerMove;\n    } else {\n      ammoMove = logic.shouldMoveForAmmo(player, enemies, map);\n      if (ammoMove && logic.isMovementSafe(ammoMove, player, enemies, map)) return ammoMove;\n\n      centerMove = logic.goToCenter(player, map);\n      if (logic.isMovementSafe(centerMove, player, enemies, map)) return centerMove;\n    }\n\n    safestMove = logic.getSafestMove(player, enemies, map);\n    if (safestMove && logic.isMovementSafe(safestMove, player, enemies, map)) return safestMove;\n\n    return utils.safeRandomMove();\n  },\n\n  _hunter: function(player, enemies, map) {\n    var turnMove;\n    var ammoMove;\n    var chaseMove;\n    var safestMove;\n\n    codingpains.info.mode = 'h';\n\n    enemies = logic.getDangerousEnemies(enemies);\n\n    if (utils.canKill(player, enemies)) return 'shoot';\n\n    turnMove = logic.turnToAmbush(player, enemies);\n    if (turnMove) return turnMove;\n\n    turnMove = logic.turnToKill(player, enemies);\n    if (turnMove && logic.isMovementSafe(turnMove, player, enemies, map)) return turnMove;\n\n    chaseMove = logic.chaseEnemy(player, enemies, map);\n    if (chaseMove && logic.isMovementSafe(chaseMove, player, enemies, map)) return chaseMove;\n\n    safestMove = logic.getSafestMove(player, enemies, map);\n    if (safestMove) return safestMove;\n\n    return false;\n  },\n\n  _eluder: function(player, enemies, map) {\n    var killers = logic.getImmediateThreats(player, enemies);\n    var closeThreats = {y: [], x:[]};\n    codingpains.info.mode = 'e';\n    if (killers.length) {\n      if (logic.canKillAll(player, killers)) {\n        return 'shoot';\n      } else if (logic.isMovementSafe('move', player, killers, map)) {\n        return 'move';\n      } else {\n        // Here I would activate a shield!, for now just die :(\n        return false;\n      }\n    }\n\n    if (player.ammo) return this._hunter(player, enemies, map);\n    _.forEach(enemies, function(e) {\n      if (logic.sameY(player.position, e.position)) {\n        closeThreats.y.push(e);\n      }\n      if (logic.sameX(player.position, e.position)) {\n        closeThreats.x.push(e);\n      }\n    });\n\n    if (closeThreats.x.length) {\n      if (player.ammo && utils.canKill(player, closeThreats.x)) return 'shoot';\n      if (logic.isHorizontal(player.direction) && logic.canMoveTowards(player.direction, player, map)) {\n        return 'move';\n      } else {\n        return logic.opositeDirection(closeThreats.x[0].direction);\n      }\n    } else {\n      if (player.ammo && utils.canKill(player, closeThreats.y)) return 'shoot';\n      if (logic.isVertical(player.direction) && logic.canMoveTowards(player.direction, player, map)) {\n        return 'move';\n      } else {\n        return logic.opositeDirection(closeThreats.y[0].direction);\n      }\n    }\n\n  }\n};\n\nmodule.exports = codingpains;\n","const _ = require(\"lodash\");\n\nvar utils = require('./utils.js');\nvar DIRECTIONS = ['north', 'east', 'south', 'west'];\n\nvar inDanger = function(player, enemies) {\n  if (!enemies.length) return false;\n  var pos = player.position;\n  return _.some(enemies, e => sameY(pos, e.position) || sameX(pos, e.position));\n};\n\nvar sameY = function(start, end) {\n  return start[0] === end[0];\n};\n\nvar sameX = function(start, end) {\n  return start[1] === end[1];\n};\n\nvar canMoveTowards = function(direction, player, map) {\n  var canDo = false;\n  switch (direction) {\n    case 'north':\n      canDo = player.position[0] > 0;\n      break;\n    case 'east':\n      canDo = player.position[1] < map.gridSize;\n      break;\n    case 'south':\n      canDo = player.position[0] < map.gridSize - 1;\n      break;\n    case 'west':\n      canDo = player.position[1] > 0;\n      break;\n  }\n  return canDo;\n};\n\nvar canDie = function(player, enemies) {\n  return enemies\n    .map(function(enemy) {\n      return enemy.ammo > 0 && utils.isVisible(enemy.position, player.position, enemy.direction);\n    })\n    .filter(function(result) {\n      return result === true;\n    }).length > 0;\n};\n\nvar getClosestAmmo = function(player, ammoPosition) {\n  var closest;\n\n  if (!ammoPosition.length) return;\n\n  closest = ammoPosition[0];\n\n  ammoPosition.forEach(function(ammo) {\n    var isCloser = utils.getDistance(player.position, ammo) < utils.getDistance(player.position, closest);\n    if (isCloser) {\n      closest = ammo;\n    }\n  });\n\n  return closest;\n};\n\nvar getReachableAmmo = function(player, enemies, map) {\n  var reachable = map.ammoPosition.filter(function(ammo) {\n    var distance = utils.getDistance(player.position, ammo);\n\n    return !enemies.some(function(enemy) {\n      return utils.getDistance(enemy.position, ammo) < distance;\n    });\n  });\n\n  return reachable;\n};\n\nvar shouldMoveForAmmo = function(player, enemies, map) {\n  var ammo = getReachableAmmo(player, enemies, map);\n  var closest;\n  var direction;\n\n  if (!ammo.length) return false;\n\n  closest = getClosestAmmo(player, ammo);\n  direction = utils.fastGetDirection(player.position, closest);\n\n  if (direction !== player.direction) {\n    return direction;\n  }\n\n  return 'move';\n};\n\nvar isMovementSafe = function(action, player, enemies, map) {\n  var futureState = JSON.parse(JSON.stringify(player));\n\n  if (action === 'move') {\n    switch (player.direction) {\n      case DIRECTIONS[0]:\n        if (futureState.position[0] > 0) {\n          futureState.position[0]--;\n        }\n        break;\n      case DIRECTIONS[1]:\n        if (futureState.position[1] < map.gridSize) {\n          futureState.position[1]++;\n        }\n        break;\n      case DIRECTIONS[2]:\n        if (futureState.position[0] < map.gridSize) {\n          futureState.position[0]++;\n        }\n        break;\n      case DIRECTIONS[3]:\n        if (futureState.position[1] > 0) {\n          futureState.position[1]--;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (canDie(futureState, enemies)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nvar getSafestMove = function(player, enemies, map) {\n  var safest;\n  var isSafeHere = isMovementSafe('north', player, enemies, map);\n  var isSafeToMove = isMovementSafe('move', player, enemies, map);\n\n  if (isSafeHere) {\n    if (player.ammo) {\n      return turnToKill(player, enemies) || chaseEnemy(player, enemies, map);\n    }\n  }\n  if (isSafeToMove) {\n    return 'move';\n  }\n\n  return;\n};\n\nvar goToCenter = function(player, map) {\n  var center = [map.gridSize, map.gridSize].map(coord => Math.floor(coord / 2));\n  var movement = utils.fastGetDirection(player.position, center);\n\n  if (movement === player.direction) {\n    movement = 'move';\n  }\n\n  return movement;\n};\n\nvar getClosestEnemy = function(player, enemies) {\n  var clonedStates = enemies.slice(0, enemies.length);\n  var closest;\n\n  clonedStates = clonedStates.filter(function(enemy) {\n    return enemy.isAlive;\n  });\n\n  closest = clonedStates[0];\n\n  clonedStates.forEach(function(enemy) {\n    if (utils.getDistance(player, enemy) < utils.getDistance(player, closest)) {\n      closest = enemy;\n    }\n  });\n\n  return closest;\n};\n\nvar getBackPosition = function(enemy) {\n  var back = enemy.position.slice(0, 2);\n  switch (enemy.direction) {\n    case 'north':\n      back[0]++;\n      break;\n    case 'south':\n      back[0]--;\n      break;\n    case 'west':\n      back[1]++;\n      break;\n    case 'east':\n      back[1]--;\n      break;\n  }\n\n  return back;\n};\n\nvar sneakyGetDirection = function(player, enemy) {\n  var diffVertical = Math.abs(player.position[0] - player.position[0]);\n\n  if (diffVertical && enemy.position !== 'north' && enemy.position !== 'south') {\n    return player.position[0] - enemy.position[0] > 0 ? 'north' : 'south';\n  }\n  return player.position[1] - enemy.position[1] > 0 ? 'west' : 'east';\n};\n\nvar verticalDelta = function(start, end) {\n  return start[0] - end[0];\n};\n\nvar absVerticalDelta = function(start, end) {\n  return Math.abs(verticalDelta(start, end));\n};\n\nvar horizontalDelta = function(start, end) {\n  return start[1] - end[1];\n};\n\nvar absHorizontalDelta = function(start, end) {\n  return Math.abs(horizontalDelta(start, end));\n};\n\nvar isVertical = function(direction) {\n  return ['north', 'south'].indexOf(direction) > -1;\n};\n\nvar isHorizontal = function(direction) {\n  return ['west', 'east'].indexOf(direction) > -1;\n};\n\nvar opositeDirection = function(direction) {\n  var ret;\n  switch (direction) {\n    case 'north':\n      ret = 'south';\n      break;\n    case 'south':\n      ret = 'north';\n      break;\n    case 'west':\n      ret = 'east';\n      break;\n    case 'east':\n      ret = 'west';\n      break;\n  }\n  return ret;\n};\n\nvar chaseEnemy = function(player, enemies, map) {\n  var closest = getClosestEnemy(player, enemies);\n  var back = getBackPosition(closest);\n  var direction = sneakyGetDirection(player, closest);\n\n  if (direction !== player.direction) {\n    return direction;\n  }\n\n  if (!isMovementSafe('move', player, [closest], map)) {\n    if (isVertical(player.direction) && absHorizontalDelta(player.position, closest.position) === 1) return 'hold';\n    if (isHorizontal(player.direction) && absVerticalDelta(player.position, closest.position) === 1) return 'hold';\n    return opositeDirection(closest.direction);\n  }\n\n  return 'move';\n};\n\nvar turnToKill = function(player, enemies) {\n  var turn = false;\n  var mockState = JSON.parse(JSON.stringify(player));\n\n  DIRECTIONS.forEach(function(direction) {\n    mockState.direction = direction;\n\n    if (utils.canKill(mockState, enemies)) {\n      turn = direction;\n    }\n  });\n\n  return turn;\n};\n\nvar turnToAmbush = function(player, enemies) {\n  var killables = enemies.filter(function(enemy) {\n    switch (enemy.direction) {\n      case 'north':\n        return verticalDelta(player.position, enemy.position) === -1;\n        break;\n      case 'east':\n        return verticalDelta(player.position, enemy.position) === 1;\n        break;\n      case 'south':\n        return verticalDelta(player.position, enemy.position) === 1;\n        break;\n      case 'west':\n        return verticalDelta(player.position, enemy.position) === -1;\n        break;\n      default:\n        return false;\n    }\n  });\n  var enemy;\n\n  if (!killables.length) return;\n  enemy = killables[0];\n  if (isVertical(enemy.direction)) {\n    if (horizontalDelta(player.position, enemy.position) < 0) return 'east';\n    return 'west';\n  }\n\n  if (verticalDelta(player.position, enemy.position) < 0) return 'south';\n  return 'north';\n};\n\nvar canKillMany = function(player, enemies) {\n  let { position, direction } = player;\n  var targets = _.filter(enemies, enemy => utils.isVisible(position, enemy.position, direction));\n  return targets.length > 2;\n};\n\nvar canKillAll = function(player, enemies) {\n  if (!player.ammo) return false;\n  var killable = enemies.filter(enemy => utils.canKill(player, [enemy]));\n\n  return enemies.length === killable.length;\n};\n\nvar getImmediateThreats = function(player, enemies) {\n  return enemies.filter(enemy => enemy.ammo > 0 && utils.isVisible(enemy.position, player.position, enemy.direction));\n};\n\nvar getDangerousEnemies = function(enemies) {\n  var dangerous = enemies.filter(enemy => enemy.ammo);\n  if (dangerous.length) return dangerous;\n  return enemies;\n};\n\nmodule.exports = {\n  inDanger,\n  sameY,\n  sameX,\n  canDie,\n  canMoveTowards,\n  canKillMany,\n  getClosestAmmo,\n  getReachableAmmo,\n  shouldMoveForAmmo,\n  isMovementSafe,\n  getSafestMove,\n  goToCenter,\n  getClosestEnemy,\n  getBackPosition,\n  sneakyGetDirection,\n  isHorizontal,\n  isVertical,\n  absVerticalDelta,\n  absHorizontalDelta,\n  opositeDirection,\n  chaseEnemy,\n  turnToKill,\n  turnToAmbush,\n  canKillAll,\n  getImmediateThreats,\n  getDangerousEnemies\n};\n","var utils = require('../lib/utils.js');\nvar DIRECTIONS = ['north', 'east', 'south', 'west'];\n\nvar canDie = function(player, enemies) {\n  return enemies\n    .filter((enemy) => enemy.isAlive)\n    .map((enemy) => utils.canKill(enemy, [player], enemy.direction))\n    .filter((result) => result === true).length > 0;\n};\n\nvar getClosestAmmo = function(player, map) {\n  if (!map.ammoPosition.length) {\n    return;\n  }\n  var playerPos = player.position;\n  var closestAmmo = map.ammoPosition[0];\n\n  map.ammoPosition.forEach(function(pos) {\n    var isCloser = utils.getDistance(playerPos, pos) < utils.getDistance(playerPos, closestAmmo)\n    if (isCloser) {\n      closestAmmo = pos;\n    }\n  });\n\n  return closestAmmo;\n};\n\nvar shouldMoveForAmmo = function(player, map) {\n  var closest = getClosestAmmo(player, map);\n  var direction;\n\n  if (!closest) {\n    return;\n  }\n\n  direction = utils.fastGetDirection(player.position, closest);\n\n  if (direction !== player.direction) {\n    return direction;\n  }\n\n  return 'move';\n};\n\nvar isMovementSafe = function(action, player, enemies, map) {\n  var futureState = JSON.parse(JSON.stringify(player));\n\n  if (action === 'move') {\n    switch (player.direction) {\n      case DIRECTIONS[0]:\n        if (futureState.position[0] > 0) {\n          futureState.position[0]--;\n        }\n        break;\n      case DIRECTIONS[1]:\n        if (futureState.position[1] < map.gridSize[1]) {\n          futureState.position[1]++;\n        }\n        break;\n      case DIRECTIONS[2]:\n        if (futureState.position[0] < map.gridSize[0]) futureState.position[0]++;\n        break;\n      case DIRECTIONS[3]:\n        if (futureState[1] > 0) futureState.position[1]--;\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (canDie(futureState, enemies)) {\n    return false;\n  }\n  return true;\n};\n\nvar getSafestMove = function(player, enemies, map) {\n  var safest;\n  var isSafeHere = isMovementSafe('north', player, enemies, map);\n  var isSafeToMove = isMovementSafe('move', player, enemies, map);\n\n  if (isSafeHere) {\n    if (player.ammo) {\n      return turnToKill(player, enemies) || chaseEnemy(player, enemies);\n    }\n  }\n  if (isSafeToMove) {\n    return 'move';\n  }\n\n  return;\n};\n\nvar getClosestEnemy = function(player, enemies) {\n  var clonedStates = enemies.slice(0, enemies.length);\n  var closest;\n\n  clonedStates = clonedStates.filter(function(enemy) {\n    return enemy.isAlive;\n  });\n\n  closest = clonedStates[0];\n\n  clonedStates.forEach(function(enemy) {\n    if (utils.getDistance(player, enemy) < utils.getDistance(player, closest)) {\n      closest = enemy;\n    }\n  });\n\n  return closest;\n};\n\nvar chaseEnemy = function(player, enemies) {\n  var closestEnemy = getClosestEnemy(player, enemies);\n  var direction = utils.fastGetDirection(player.position, closestEnemy.position);\n\n  if (direction !== player.direction) {\n    return direction;\n  }\n\n  return 'move';\n};\n\nvar turnToKill = function(player, enemies) {\n  var turn = player.direction === 'north' ? 'south' : 'north';\n  var mockState = JSON.parse(JSON.stringify(player));\n\n  enemies = enemies.filter(function(enemy) {\n    return enemy.isAlive;\n  });\n\n  DIRECTIONS.forEach(function(direction) {\n    mockState.direction = direction;\n\n    if (utils.canKill(mockState, enemies)) {\n      turn = direction;\n    }\n  });\n\n  return turn;\n};\n\nvar hunter = function(player, enemies, map) {\n  var turnMove;\n  var ammoMove;\n  var safestMove;\n\n  if (utils.canKill(player, enemies)) return 'shoot';\n\n  turnMove = turnToKill(player, enemies);\n  if (turnMove && isMovementSafe(turnMove, player, enemies, map)) return turnMove;\n\n  safestMove = getSafestMove(player, enemies, map);\n  if (safestMove) return safestMove;\n\n  return 'stay';\n};\n\nvar gatherer = function(player, enemies, map) {\n  var ammoMove;\n  var safestMove;\n\n  ammoMove = shouldMoveForAmmo(player, map);\n  if (ammoMove && isMovementSafe(ammoMove, player, enemies, map)) return ammoMove;\n\n  safestMove = getSafestMove(player, enemies, map);\n  if (safestMove) return safestMove;\n\n  return utils.safeRandomMove();\n};\n\nvar kills = 0;\n\nvar ericku_ = {\n  info: {\n    name: 'Gurren',\n    style: 6\n  },\n  ai: function(player, enemies, map) {\n    if (player.ammo) return hunter(player, enemies, map);\n    return gatherer(player, enemies, map);\n  }\n};\n\nmodule.exports = ericku_;\n","var utils = require('../lib/utils.js');\n\nvar MUSOLINI = {\n  info: {\n    name: 'Horror',\n    style: 10\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = MUSOLINI;\n","/**\r\n * Created by Roberto Alvarez on 7/29/2015.\r\n */var utils = require('../lib/utils.js'),\r\n    currentDirection = 0,\r\n    oldBestAmo = null,\r\n    directions = {\r\n        1: 'north',\r\n        2: 'east',\r\n        3: 'south',\r\n        4: 'west'\r\n    },\r\n    turnsComplete = 0,\r\n    ElPerron = {\r\n        info: {\r\n            name: 'ElPerron',\r\n            style: 7\r\n        },\r\n        ai: (playerState, enemiesStates, gameEnvironment) => {\r\n            var directionToTarget,\r\n                /**\r\n                 * Devuelve la direcci�n del amo mas cercano en base a la posici�n actual de la\r\n                 * nave\r\n                 * @returns {*}\r\n                 */\r\n                getBestAmmo = () => {\r\n                    var myPosition = playerState.position,\r\n                        distanceMin = 22,\r\n                        ammoMin = null;\r\n                    for (var amIndex in gameEnvironment.ammoPosition) {\r\n                        var ammo = gameEnvironment.ammoPosition[amIndex];\r\n                        var difXbyMe = Math.abs(myPosition[1] - ammo[1]),\r\n                            difYbyMe = Math.abs(myPosition[0] - ammo[0]),\r\n                            distanceByMe = difXbyMe + difYbyMe;\r\n\r\n                        if (distanceByMe < distanceMin) {\r\n                            distanceMin = distanceByMe;\r\n                            ammoMin = ammo;\r\n                        }\r\n                    }\r\n\r\n                    return ammoMin;\r\n                },\r\n                /**\r\n                 * Devuelve n�mero de enemigos vivos\r\n                 * @returns {number}\r\n                 */\r\n                getCountEnemiesAlive = () => {\r\n                    var countEnemies = 0;\r\n\r\n                    for (var enIndex in enemiesStates) {\r\n                        var enemy = enemiesStates[enIndex];\r\n\r\n                        if (enemy.isAlive) {\r\n                            countEnemies++;\r\n                        }\r\n                    }\r\n\r\n                    return countEnemies;\r\n                },\r\n                /**\r\n                 * Devuelve si la nave esta posicionada en el mismo lugar que el ammo\r\n                 * @param ammo\r\n                 * @returns {boolean}\r\n                 */\r\n                isOnAmmo = (ammo) => {\r\n                    if (ammo == null) {\r\n                        return false;\r\n                    }\r\n                    return ammo[0] == playerState.position[0] &&\r\n                        ammo[1] == playerState.position[1];\r\n                };\r\n\r\n            // Hasta la vista baby !!!\r\n            if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\r\n                return 'shoot';\r\n            }\r\n\r\n            if (playerState.ammo == 0 || turnsComplete == 1) {\r\n                var toPosition = getBestAmmo();\r\n\r\n                // Si tengo los suficientes disparos para eliminar a todos los enemigos\r\n                // me dirijo hacia ellos\r\n                // if (playerState.ammo >= getCountEnemiesAlive()) {\r\n                //     toPosition = enemiesStates[0].position;\r\n                // }\r\n\r\n                directionToTarget = utils.getDirection(playerState.position, toPosition);\r\n\r\n                if (isOnAmmo(oldBestAmo)) {\r\n                    turnsComplete = 0;\r\n                }\r\n\r\n                // Guardo referencia de la posicion a la que me dirigi anteriormente\r\n                oldBestAmo = toPosition;\r\n\r\n                // Si ya se movio, cambio mi direcci�n\r\n                if (directionToTarget !== playerState.direction) {\r\n                    return directionToTarget;\r\n                }\r\n\r\n                return 'move';\r\n            }\r\n            else {\r\n                // Si tiene armas lo hago girar\r\n                currentDirection++;\r\n                if (currentDirection > 4) {\r\n                    currentDirection = 1;\r\n                    turnsComplete++;\r\n                }\r\n\r\n                return directions[currentDirection];\r\n            }\r\n\r\n            return utils.randomMove();\r\n        }\r\n    };\r\n\r\nmodule.exports = ElPerron;\r\n","var utils = require(\"../lib/utils.js\");\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nvar getShortestDirection = (start, endArray) => {\n  var reducedArray = endArray.reduce(\n    (reduced, currentPosition) => {\n      if (reduced[0] === -1 || utils.getDistance(start, currentPosition) < reduced[0]) {\n        reduced[0] = utils.getDistance(start, currentPosition);\n        reduced[1] = currentPosition;\n      }\n\n      return reduced;\n    },\n    [-1, 0]\n  );\n\n  return utils.fastGetDirection(start, reducedArray[1]);\n};\n\nvar turnToKill = (originalPosition, positionArray) => {\n  return DIRECTIONS.reduce((result, currentDirection) => {\n    if (result) return result;\n    return positionArray.reduce((resultPositions, currentEnemyPosition) => {\n      if (resultPositions) return resultPositions;\n      return utils.isVisible(originalPosition, currentEnemyPosition, currentDirection) ? currentDirection : null;\n    }, null);\n  }, null);\n};\n\nvar Yuno = {\n  info: {\n    name: \"Yuno\",\n    style: 9\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n    var directionToPlayer;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) return \"shoot\";\n\n    if (playerState.ammo) {\n      directionToPlayer = turnToKill(playerState.position, enemiesStates.map(el => el.position));\n      if (directionToPlayer) {\n        return directionToPlayer;\n      }\n\n      directionToPlayer = getShortestDirection(playerState.position, enemiesStates.map(el => el.position));\n      if (directionToPlayer !== playerState.direction) return directionToPlayer;\n      return \"move\";\n    }\n\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = getShortestDirection(playerState.position, gameEnvironment.ammoPosition);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return \"move\";\n    }\n\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = Yuno;\n","var utils = require('../lib/utils.js');\n\nvar xmontoya = {\n  info: {\n    name: 'Xmontoya89',\n    style: 1\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return utils.safeRandomMove();\n    }\n\n    return 'move';\n  }\n};\n\nmodule.exports = xmontoya;\n","var utils = require('../lib/utils.js');\nvar noAmmo = true;\nvar margeux = {\n  info: {\n    name: 'margeux',\n    style: 5\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n    var directionToEnemy;\n    if (playerState.ammo >0){\n      noAmmo = false;\n    }\n    if (playerState.ammo == 0){\n      noAmmo= true;\n    }\n\n    if (gameEnvironment.ammoPosition.length && noAmmo) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n\n    //LOOK for an enemy\n    if(!noAmmo){\n      directionToEnemy = utils.fastGetDirection(playerState.position, enemiesStates[0].position);\n      if (directionToEnemy !== playerState.direction){\n        var directionToMargeus = utils.fastGetDirection(enemiesStates[0].position, playerState.position);\n        if (directionToMargeus !== enemiesStates[0].position){\n                  return directionToEnemy;\n        }else{\n                  return utils.safeRandomMove();\n        }\n      }\n      if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n      }else{\n        return utils.safeRandomMove();\n      }\n    }\n\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n    if (gameEnvironment.ammoPosition.length ) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = margeux;\n","import React from \"react\";\n\nclass Tiles extends React.Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    var { gridSize } = this.props;\n\n    var tileSize = 100 / gridSize;\n    var i;\n\n    var tileRender = [];\n    for (i = 0; i < gridSize * gridSize; i++) {\n      tileRender.push(\n        <div style={{ height: tileSize + \"vmin\", width: tileSize + \"vmin\" }} className=\"clash-tile\" key={i} />\n      );\n    }\n\n    return <div>{tileRender}</div>;\n  }\n}\n\nexport default Tiles;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nclass Ammos extends React.Component {\n  render() {\n    var { gridSize, ammoPosition } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var ammoRender = _.map(ammoPosition, (ammoPos, ammoIndex) => {\n      return (\n        <div\n          key={ammoIndex}\n          className=\"clash-ammo\"\n          style={{\n            top: tileSize * ammoPos[0] + \"vmin\",\n            left: tileSize * ammoPos[1] + \"vmin\",\n            width: tileSize + \"vmin\",\n            height: tileSize + \"vmin\"\n          }}\n        />\n      );\n    });\n\n    return <div className=\"clash-layer animation-glow\">{ammoRender}</div>;\n  }\n}\n\nexport default Ammos;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nclass Players extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerDirections: props.playerStates.map(el => DIRECTIONS.indexOf(el.direction))\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var playerDirections = this.state.playerDirections;\n    var newPlayerDirections = nextProps.playerStates.map(el => DIRECTIONS.indexOf(el.direction));\n\n    this.setState({\n      playerDirections: newPlayerDirections.map((el, index) => {\n        var diff = ((el + 4) % 4) - ((playerDirections[index] + 4) % 4);\n        if (diff === 3) diff = -1;\n        if (diff === -3) diff = 1;\n\n        return playerDirections[index] + diff;\n      })\n    });\n  }\n\n  render() {\n    var { playerDirections } = this.state;\n    var { gridSize, playerStates, playerInstances } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var playerRender = _.map(playerStates, (playerData, playerIndex) => {\n      if (!playerData.isAlive) return null;\n\n      var playerInfo = playerInstances[playerIndex].getInfo();\n\n      return (\n        <div\n          key={playerIndex}\n          className=\"clash-player-container\"\n          style={{\n            width: tileSize + \"vmin\",\n            height: tileSize + \"vmin\",\n            transform:\n              \"translateY(\" +\n              tileSize * playerData.position[0] +\n              \"vmin) \" +\n              \"translateX(\" +\n              tileSize * playerData.position[1] +\n              \"vmin)\"\n          }}>\n          <div\n            className=\"clash-player\"\n            style={{\n              width: tileSize + \"vmin\",\n              height: tileSize + \"vmin\",\n              backgroundImage: \"url(static/rockets/rocket\" + (playerData.style || 0) + \".png)\",\n              transform: \"scale(1.25) \" + \"rotate(\" + 90 * playerDirections[playerIndex] + \"deg) \"\n            }}\n          />\n          <div className=\"clash-player-name\">{playerInfo.name}</div>\n        </div>\n      );\n    });\n\n    return <div className=\"clash-layer\">{playerRender}</div>;\n  }\n}\n\nexport default Players;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nclass Stats extends React.Component {\n  render() {\n    let { stats, rounds, total } = this.props;\n    stats = _.map(stats, playerStats => playerStats);\n    stats = _.sortBy(stats, playerStats => playerStats.wins * -1);\n    return (\n      <div className=\"stats\">\n        <table>\n          <thead>\n            <tr>\n              <th />\n              <th>\n                Round {rounds}/{total}\n              </th>\n              <th>Wins</th>\n            </tr>\n          </thead>\n          <tbody>\n            {_.map(stats, (playerStats, index) => {\n              return (\n                <tr key={index} className={playerStats.isAlive ? \"\" : \"player-dead\"}>\n                  <td className=\"player-dead-emoji\">💀</td>\n                  <td className=\"player-name\">{playerStats.name}</td>\n                  <td className=\"stats-results\">{playerStats.wins}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nclass Shoots extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return nextProps.shoots.length !== this.props.shoots.length;\n  }\n\n  render() {\n    var { shoots, gridSize } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var shootsRender = _.map(shoots, (el, index) => {\n      return (\n        <div\n          key={index}\n          className=\"clash-shoot animation-shot\"\n          style={{\n            top: tileSize * el.origin[0] + \"vmin\",\n            left: tileSize * el.origin[1] + \"vmin\",\n            transform:\n              \"translatex(\" +\n              tileSize / 2 +\n              \"vmin) \" +\n              \"translatey(\" +\n              tileSize / 2 +\n              \"vmin) \" +\n              \"rotate(\" +\n              (DIRECTIONS.indexOf(el.direction) - 1) * 90 +\n              \"deg) \"\n          }}\n        />\n      );\n    });\n\n    return <div className=\"clash-layer\">{shootsRender}</div>;\n  }\n}\n\nexport default Shoots;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nclass Notifications extends React.Component {\n  render() {\n    var { kills } = this.props;\n    var date = new Date();\n\n    _.remove(kills, k => date - k.date > 3000);\n    kills = _.sortBy(kills, k => k.date.valueOf);\n    return (\n      <div className=\"notifications\">\n        {_.map(kills, (k, idx) => {\n          return <p key={idx}>{k.text}</p>;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Notifications;\n","import fx from \"./../lib/sound-effects\";\nimport generateId from \"./../lib/string-tools\";\n\nclass PlayerClass {\n  constructor(options) {\n    this._id = generateId.generateBase32String(8);\n    this._playerInfo = options.info;\n    this._playerAI = options.ai;\n  }\n\n  getId() {\n    return this._id;\n  }\n\n  getInfo() {\n    return this._playerInfo;\n  }\n\n  getName() {\n    return this._playerInfo.name;\n  }\n\n  playExplosion() {\n    var i = Math.round(Math.random() * 10) % 3;\n    fx.explosions[\"explode\" + i].play();\n  }\n\n  execute(playerState, enemiesStates, gameEnvironment) {\n    try {\n      return this._playerAI(playerState, enemiesStates, gameEnvironment);\n    } catch (e) {\n      console.error(\"!\", e);\n    }\n  }\n}\n\nexport default PlayerClass;\n","import _ from \"lodash\";\n\nimport PlayerClass from \"./PlayerClass.js\";\nimport executeMovementHelper from \"./executeMovementHelper.js\";\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nconst SUDDEN_DEATH_TURN = 100;\n\nclass ClashJS {\n  constructor(playerDefinitionArray, currentStats, evtCallback) {\n    // const clashjsTarget = class ClashJSTarget extends EventTarget {};\n    // this.target = new clashjsTarget();\n\n    this._totalRounds = playerDefinitionArray.length * 2 + 6;\n    this._rounds = 0;\n    this._gameStats = currentStats || {};\n    this._evtCallback = (msg, data) => {\n      // this.target.dispatchEvent(new CustomEvent(\"DATA\", { detail: { name: msg, data: data } }));\n      evtCallback(msg, data);\n    };\n    this._alivePlayerCount = 0;\n    this._suddenDeathCount = 0;\n    this._playerInstances = playerDefinitionArray.map(playerDefinition => {\n      let player = new PlayerClass(playerDefinition);\n      this._gameStats[player.getId()] = {\n        name: player.getName(),\n        deaths: 0,\n        kills: 0,\n        kdr: 0,\n        wins: 0,\n        winrate: 0\n      };\n      return player;\n    });\n\n    this.setupGame();\n  }\n\n  _getAlivePlayerCount() {\n    return this._playerStates.reduce((result, el) => {\n      return el.isAlive ? result + 1 : result;\n    }, 0);\n  }\n\n  setupGame() {\n    this._gameEnvironment = {\n      gridSize: 13,\n      ammoPosition: []\n    };\n    this._rounds++;\n    this._suddenDeathCount = 0;\n    this._playerInstances = _.shuffle(this._playerInstances);\n    this._alivePlayerCount = this._playerInstances.length;\n    this._playerStates = this._playerInstances.map(playerInstance => {\n      let gridSize = this._gameEnvironment.gridSize;\n      return {\n        style: playerInstance.getInfo().style,\n        position: [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)],\n        direction: DIRECTIONS[Math.floor(Math.random() * 4)],\n        ammo: 0,\n        isAlive: true\n      };\n    });\n\n    this._currentPlayer = 0;\n    this._createAmmo();\n  }\n\n  _createAmmo() {\n    var newAmmoPosition = [\n      Math.floor(Math.random() * this._gameEnvironment.gridSize),\n      Math.floor(Math.random() * this._gameEnvironment.gridSize)\n    ];\n\n    if (\n      this._gameEnvironment.ammoPosition.some(el => {\n        return el[0] === newAmmoPosition[0] && el[1] === newAmmoPosition[1];\n      })\n    ) {\n      this._createAmmo();\n      return;\n    }\n\n    this._gameEnvironment.ammoPosition.push(newAmmoPosition);\n  }\n\n  getState() {\n    return {\n      gameEnvironment: this._gameEnvironment,\n      gameStats: this._gameStats,\n      rounds: this._rounds,\n      totalRounds: this._totalRounds,\n      playerStates: this._playerStates,\n      playerInstances: this._playerInstances\n    };\n  }\n\n  nextPly() {\n    if (this._suddenDeathCount > SUDDEN_DEATH_TURN * this._getAlivePlayerCount()) {\n      this._evtCallback(\"DRAW\");\n      this._handleCoreAction(\"DRAW\");\n    }\n    let clonedStates = _.cloneDeep(this._playerStates, true);\n\n    if (this._getAlivePlayerCount() < 2) {\n      this._suddenDeathCount += 10;\n    }\n\n    if (this._getAlivePlayerCount() < 3) {\n      this._suddenDeathCount++;\n    }\n\n    var otherPlayers = clonedStates.filter((currentEnemyFilter, index) => {\n      if (index === this._currentPlayer) return false;\n      return currentEnemyFilter.isAlive;\n    });\n\n    if (this._playerStates[this._currentPlayer].isAlive) {\n      this._savePlayerAction(\n        this._currentPlayer,\n        this._playerInstances[this._currentPlayer].execute(\n          clonedStates[this._currentPlayer],\n          otherPlayers,\n          _.cloneDeep(this._gameEnvironment, true)\n        )\n      );\n    }\n\n    this._currentPlayer = (this._currentPlayer + 1) % this._playerInstances.length;\n\n    if (this._gameEnvironment.ammoPosition.length < this._playerStates.length / 1.2 && Math.random() > 0.92) {\n      this._createAmmo();\n    }\n\n    if (Math.random() > 0.98) {\n      this._createAmmo();\n    }\n\n    return this.getState();\n  }\n\n  _handleCoreAction(action, data) {\n    if (action === \"KILL\") {\n      let { killer, killed } = data;\n      this._gameStats[killer.getId()].kills++;\n      _.forEach(this._playerInstances, player => {\n        let stats = this._gameStats[player.getId()];\n        if (killed.indexOf(player) > -1) {\n          this._alivePlayerCount--;\n          stats.deaths++;\n        }\n        if (stats.deaths) {\n          stats.kdr = stats.kills / stats.deaths;\n        } else {\n          stats.kdr = stats.kills;\n        }\n      });\n      this._suddenDeathCount = 0;\n    }\n    if (action === \"WIN\") {\n      this._gameStats[data.winner.getId()].wins++;\n      _.forEach(this._gameStats, (playerStats, key) => {\n        let { wins, winrate } = playerStats;\n        playerStats.winrate = Math.round((wins * 100) / this._rounds);\n      });\n\n      if (this._rounds >= this._totalRounds) {\n        return this._evtCallback(\"END\");\n      }\n    }\n    if (action === \"DRAW\") {\n      _.forEach(this._gameStats, (playerStats, key) => {\n        let { wins, winrate } = playerStats;\n        playerStats.winrate = Math.round((wins * 100) / this._rounds);\n      });\n      if (this._rounds >= this._totalRounds) {\n        return this._evtCallback(\"END\");\n      }\n    }\n  }\n\n  _savePlayerAction(playerIndex, playerAction) {\n    this._playerStates = executeMovementHelper({\n      playerIndex: playerIndex,\n      playerAction: playerAction,\n      playerStates: this._playerStates,\n      playerInstances: this._playerInstances,\n      gameEnvironment: this._gameEnvironment,\n      evtCallback: this._evtCallback,\n      coreCallback: this._handleCoreAction.bind(this)\n    });\n  }\n}\n\nexport default ClashJS;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport fx from \"./../lib/sound-effects\";\nimport Tiles from \"./Tiles.jsx\";\nimport Ammos from \"./Ammos.jsx\";\nimport Players from \"./Players.jsx\";\nimport Stats from \"./Stats.jsx\";\nimport Shoots from \"./Shoots.jsx\";\nimport Notifications from \"./Notifications.jsx\";\n\nimport ClashJS from \"../clashjs/ClashCore.js\";\n\nimport playerObjects from \"../Players.js\";\nvar playerArray = _.shuffle(_.map(playerObjects, el => el));\n\nvar killsStack = [];\n\nconst DEFAULT_SPEED = 100;\nconst MAX_SPEED = 50;\n\nclass Clash extends React.Component {\n  constructor(props) {\n    super(props);\n\n    window.ClashInstance = new ClashJS(playerArray, {}, this.handleEvent.bind(this));\n\n    // window.ClashInstance.target.addEventListener(\"DATA\", evt => {\n    //   this.handleEvent(evt.detail.name, evt.detail.data);\n    // });\n\n    this.state = {\n      clashjs: window.ClashInstance.getState(),\n      shoots: [],\n      speed: DEFAULT_SPEED,\n      kills: [],\n      currentGameIndex: 1,\n      finished: false\n    };\n  }\n\n  componentDidMount() {\n    this.nextTurn();\n  }\n\n  handleClick() {\n    this.setState({\n      speed: Math.floor(this.state.speed * 0.9)\n    });\n  }\n\n  newGame() {\n    killsStack = [];\n\n    if (this.nextTurnTimeout) clearTimeout(this.nextTurnTimeout);\n\n    window.ClashInstance.setupGame();\n\n    this.setState(\n      state => {\n        return {\n          clashjs: window.ClashInstance.getState(),\n          speed: DEFAULT_SPEED,\n          kills: [],\n          currentGameIndex: state.currentGameIndex + 1\n        };\n      },\n      () => {\n        if (this.nextTurnTimeout) clearTimeout(this.nextTurnTimeout);\n        window.setTimeout(() => {\n          this.nextTurn();\n        }, 50);\n      }\n    );\n  }\n\n  nextTurn() {\n    if (this.state.finished) return;\n\n    var currentGameIndex = this.state.currentGameIndex;\n\n    if (this.nextTurnTimeout) clearTimeout(this.nextTurnTimeout);\n\n    this.nextTurnTimeout = window.setTimeout(() => {\n      if (this.state.currentGameIndex !== currentGameIndex) return;\n\n      var { playerStates } = window.ClashInstance.getState();\n      var alivePlayerCount = playerStates.reduce((result, el) => {\n        return el.isAlive ? result + 1 : result;\n      }, 0);\n\n      if (alivePlayerCount < 2) {\n        window.ClashInstance.nextPly();\n        this.nextTurn();\n        return;\n      }\n\n      window.ClashInstance.nextPly();\n\n      this.setState(\n        {\n          clashjs: window.ClashInstance.getState(),\n          speed: this.state.speed > MAX_SPEED ? parseInt(this.state.speed * 0.99, 10) : MAX_SPEED\n        },\n        this.nextTurn\n      );\n    }, this.state.speed);\n  }\n\n  handleEvent(evt, data) {\n    if (evt === \"SHOOT\") {\n      let newShoots = this.state.shoots;\n      newShoots.push({\n        direction: data.direction,\n        origin: data.origin.slice(),\n        time: new Date().getTime()\n      });\n\n      this.setState({\n        shoots: newShoots\n      });\n    }\n    if (evt === \"WIN\") return this.newGame();\n    if (evt === \"DRAW\") return this.newGame();\n    if (evt === \"KILL\") return this._handleKill(data);\n    if (evt === \"END\") return this.endGame();\n  }\n\n  _handleKill(data) {\n    let players = window.ClashInstance.getState().playerInstances;\n    let kills = this.state.kills;\n    let killer = players[data.killer];\n    let killed = _.map(data.killed, index => {\n      killsStack.push(data.killer);\n      killer.kills++;\n      players[index].deaths++;\n      return players[index];\n    });\n    let notification = [killer.getName(), \"killed\", _.map(killed, player => player.getName()).join(\",\")].join(\" \");\n\n    kills.push({ date: new Date(), text: notification });\n    this.setState({\n      kills: kills\n    });\n\n    setTimeout(() => this.handleStreak(data.killer, killer, killed), 100);\n  }\n\n  endGame() {\n    this.setState({\n      clashjs: window.ClashInstance.getState(),\n      shoots: [],\n      speed: 0,\n      kills: [],\n      finished: true\n    });\n  }\n\n  handleStreak(index, killer, killed) {\n    let streakCount = _.filter(killsStack, player => player === index).length;\n    let multiKill = \"\";\n    let spreeMessage = \"\";\n    let kills = this.state.kills;\n    if (killsStack.length === 1) {\n      setTimeout(fx.streak.firstBlood.play(), 50);\n    }\n\n    switch (killed.length) {\n      case 2:\n        setTimeout(fx.streak.doubleKill.play(), 100);\n        multiKill = killer.getName() + \" got a double kill!\";\n        break;\n      case 3:\n        setTimeout(fx.streak.tripleKill.play(), 100);\n        multiKill = killer.getName() + \" got a Triple Kill!\";\n        break;\n      case 4:\n        setTimeout(fx.streak.monsterKill.play(), 100);\n        multiKill = killer.getName() + \" is a MONSTER KILLER!\";\n        break;\n    }\n    kills.push({\n      date: new Date(),\n      text: multiKill\n    });\n\n    switch (streakCount + Math.floor(Math.random() * 3)) {\n      case 3:\n        setTimeout(fx.streak.killingSpree.play(), 300);\n        spreeMessage = killer.getName() + \" is on a killing spree!\";\n        break;\n      case 4:\n        setTimeout(fx.streak.dominating.play(), 300);\n        spreeMessage = killer.getName() + \" is dominating!\";\n        break;\n      case 5:\n        setTimeout(fx.streak.rampage.play(), 300);\n        spreeMessage = killer.getName() + \" is on a rampage of kills!\";\n        break;\n      case 6:\n        setTimeout(fx.streak.godLike.play(), 300);\n        spreeMessage = killer.getName() + \" is Godlike!\";\n        break;\n      default:\n        spreeMessage = `Somebody please stop ${killer.getName()}!`;\n        setTimeout(fx.streak.ownage.play(), 300);\n    }\n    if (Math.random() > 0.5) kills.push({ date: new Date(), text: spreeMessage });\n    this.setState({\n      kills: kills\n    });\n  }\n\n  render() {\n    var { clashjs, shoots, kills, finished } = this.state;\n\n    var { gameEnvironment, gameStats, playerStates, playerInstances, rounds, totalRounds } = clashjs;\n\n    gameEnvironment = gameEnvironment || {\n      gridSize: 13\n    };\n\n    _.forEach(playerInstances, (player, index) => {\n      gameStats[player.getId()].isAlive = playerStates[index].isAlive;\n    });\n\n    const notification = [...kills];\n\n    if (finished) {\n      const winner = _.sortBy(gameStats, playerStats => playerStats.wins * -1)[0];\n      notification.push({\n        date: new Date(),\n        text: <b style={{ color: \"#0e0\", fontWeight: 700 }}>Congrats {winner.name}!</b>\n      });\n      notification.push({ date: new Date(), text: \"Refresh the page to start again\" });\n    }\n\n    return (\n      <div className=\"clash\" onClick={this.handleClick.bind(this)}>\n        <Tiles gridSize={gameEnvironment.gridSize} />\n        <Shoots shoots={shoots.slice()} gridSize={gameEnvironment.gridSize} />\n        <Ammos gridSize={gameEnvironment.gridSize} ammoPosition={gameEnvironment.ammoPosition} />\n        <Players gridSize={gameEnvironment.gridSize} playerInstances={playerInstances} playerStates={playerStates} />\n        {!!notification.length && <Notifications kills={notification} />}\n        <Stats rounds={rounds} total={totalRounds} playerStates={playerStates} stats={gameStats} />\n        {false && <pre className=\"debugger\">{JSON.stringify(playerStates, 0, 2)}</pre>}\n      </div>\n    );\n  }\n}\n\nexport default Clash;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Clash from \"./components/Clash.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Clash />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}