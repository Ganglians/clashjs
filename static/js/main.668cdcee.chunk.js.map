{"version":3,"sources":["lib/utils.js","lib/sound-effects.js","components/Clash.jsx","components/Tiles.jsx","components/Ammos.jsx","components/Players.jsx","components/Stats.jsx","components/Shoots.jsx","components/Notifications.jsx","clashjs/ClashCore.js","clashjs/PlayerClass.js","lib/string-tools.js","clashjs/executeMovementHelper.js","Players.js","players/manuelmhtr.js","players/siegfried.js","players/horror.js","players/elperron.js","players/xmontoya.js","players/margeux.js","App.js","serviceWorker.js","index.js"],"names":["DIRECTIONS","movements","isVisible","originalPosition","finalPosition","direction","module","exports","randomMove","Math","random","floor","length","getDirection","start","end","diffVertical","abs","diffHorizontal","canKill","currentPlayerState","enemiesStates","some","enemyObject","isAlive","position","safeRandomMove","fastGetDirection","turn","currentPosition","howMuchTurn","currentPositionIndex","indexOf","getDistance","lasers","laser0","play","laser1","laser2","laser3","laser4","laser5","laser6","laser7","laser8","explosions","explode0","explode1","explode2","streak","firstBlood","doubleKill","tripleKill","monsterKill","killingSpree","dominating","rampage","godLike","ownage","music","theme0","React","require","_","fx","Tiles","Ammos","Players","Stats","Shoots","Notifications","ClashJS","playerObjects","playerArray","shuffle","map","el","killsStack","window","ClashInstance","DEFAULT_SPEED","Clash","props","target","addEventListener","evt","handleEvent","detail","name","data","state","clashjs","getState","shoots","speed","kills","currentGameIndex","finished","this","nextTurn","setState","nextTurnTimeout","clearTimeout","setupGame","setTimeout","playerStates","reduce","result","nextPly","parseInt","newShoots","push","origin","slice","time","Date","getTime","newGame","_handleKill","endGame","players","playerInstances","killer","killed","index","deaths","notification","getName","player","join","date","text","handleStreak","streakCount","filter","multiKill","spreeMessage","gameEnvironment","gameStats","rounds","totalRounds","gridSize","forEach","getId","winner","sortBy","playerStats","wins","style","color","fontWeight","console","log","JSON","stringify","className","onClick","handleClick","bind","ammoPosition","total","stats","Component","i","tileSize","tileRender","height","width","key","ammoRender","ammoPos","ammoIndex","top","left","playerDirections","nextProps","newPlayerDirections","diff","playerRender","playerData","playerIndex","playerInfo","getInfo","transform","backgroundImage","shootsRender","remove","k","valueOf","idx","PlayerClass","executeMovementHelper","playerDefinitionArray","currentStats","clashjsTarget","EventTarget","_totalRounds","_rounds","_gameStats","_evtCallback","msg","dispatchEvent","CustomEvent","_alivePlayerCount","_suddenDeathCount","_playerInstances","playerDefinition","kdr","winrate","_playerStates","_gameEnvironment","playerInstance","ammo","_currentPlayer","_createAmmo","newAmmoPosition","_getAlivePlayerCount","_handleCoreAction","clonedStates","cloneDeep","otherPlayers","currentEnemyFilter","_savePlayerAction","execute","action","round","playerAction","evtCallback","coreCallback","generateId","generateBase32String","options","_id","_playerInfo","info","_playerAI","ai","playerState","e","error","base64Chars","base62Chars","base32Chars","generateBaseString","digits","lowercase","uppercase","toUpperCase","special","pool","output","ceil","generateBase64String","generateBase62String","generateBase10String","utils","safeMovement","value","size","splice","survivors","shooter","enemyIndex","manuelmhtr","siegfried","horror","elperron","xmontoya","margeux","ORIENTATION","north","east","south","west","enemies","params","vulnerabilityLevel","nearestAmmo","nearestEnemy","canMove","calculateVulnerabilityLevel","targetPosition","enemy","max","isAligned","nearestAmmoDistance","northEast","southWest","aligned","calculateEnemyDistance","min","getSafestDirection","safestDirection","lowestVulnerability","maxDistanceLeft","option","vulnerability","distanceLeft","calculateDistanceLeft","isBetterOption","moveSafely","huntEnemy","attackDirection","isEnemyAligned","enemyOrientation","getAttackDirection","enemyDistance","destination","getAmmo","goToDirection","nearestDistance","distance","calculateDistanceToNearestAmmo","getNearestAmmo","instance","getNearestEnemy","attacker","canRun","defend","directionToAmmo","MUSOLINI","currentDirection","oldBestAmo","directions","1","2","3","4","turnsComplete","ElPerron","directionToTarget","toPosition","myPosition","distanceMin","ammoMin","amIndex","distanceByMe","getBestAmmo","noAmmo","directionToEnemy","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.668cdcee.chunk.js","sourcesContent":["var DIRECTIONS = ['north', 'east', 'south', 'west'];\nvar movements = ['north', 'east', 'south', 'west', 'shoot'];\n\nvar randomMove = () => {\n  return Math.random() > 0.33 ? 'move' : movements[Math.floor(Math.random() * movements.length)];\n};\n\nvar safeRandomMove = () => {\n  return Math.random() > 0.33 ? 'move' : DIRECTIONS[Math.floor(Math.random() * DIRECTIONS.length)];\n};\n\nvar turn = (currentPosition = [], howMuchTurn) => {\n  var currentPositionIndex = DIRECTIONS.indexOf(currentPosition);\n  return DIRECTIONS[(currentPositionIndex + howMuchTurn) % 4];\n};\n\nvar getDirection = (start = [], end = []) => {\n  start = start || [];\n  end = end || [];\n\n  var diffVertical = Math.abs(start[0] - end[0]);\n  var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  if (diffVertical > diffHorizontal) {\n    return start[0] - end[0] > 0 ? 'north' : 'south';\n  }\n  return start[1] - end[1] > 0 ? 'west' : 'east';\n};\n\nvar getDistance = (start = [], end = []) => {\n  var diffVertical = Math.abs(start[0] - end[0]);\n  var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  return diffHorizontal + diffVertical;\n};\n\nvar fastGetDirection = (start = [], end = []) => {\n  var diffVertical = Math.abs(start[0] - end[0]);\n  // var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  if (diffVertical) {\n    return start[0] - end[0] > 0 ? 'north' : 'south';\n  }\n  return start[1] - end[1] > 0 ? 'west' : 'east';\n};\n\nvar isVisible = (originalPosition = [], finalPosition = [], direction = []) => {\n  switch (direction) {\n    case DIRECTIONS[0]:\n      return originalPosition[1] === finalPosition[1] && originalPosition[0] > finalPosition[0];\n    case DIRECTIONS[1]:\n      return originalPosition[0] === finalPosition[0] && originalPosition[1] < finalPosition[1];\n    case DIRECTIONS[2]:\n      return originalPosition[1] === finalPosition[1] && originalPosition[0] < finalPosition[0];\n    case DIRECTIONS[3]:\n      return originalPosition[0] === finalPosition[0] && originalPosition[1] > finalPosition[1];\n    default:\n      break;\n  }\n};\n\nvar canKill = (currentPlayerState = {}, enemiesStates = []) => {\n  return enemiesStates.some(enemyObject => {\n    return enemyObject.isAlive &&\n      isVisible(currentPlayerState.position, enemyObject.position, currentPlayerState.direction);\n  });\n};\n\nmodule.exports = {\n  randomMove,\n  getDirection,\n  isVisible,\n  canKill,\n  safeRandomMove,\n  fastGetDirection,\n  turn,\n  getDistance\n};\n","module.exports.lasers = {\n  laser0: { play() {} }, // new Audio('static/sounds/lasers/laser0.mp3'),\n  laser1: { play() {} }, // new Audio('static/sounds/lasers/laser1.mp3'),\n  laser2: { play() {} }, // new Audio('static/sounds/lasers/laser2.mp3'),\n  laser3: { play() {} }, // new Audio('static/sounds/lasers/laser3.mp3'),\n  laser4: { play() {} }, // new Audio('static/sounds/lasers/laser4.mp3'),\n  laser5: { play() {} }, // new Audio('static/sounds/lasers/laser5.mp3'),\n  laser6: { play() {} }, // new Audio('static/sounds/lasers/laser6.mp3'),\n  laser7: { play() {} }, // new Audio('static/sounds/lasers/laser7.mp3'),\n  laser8: { play() {} } // new Audio('static/sounds/lasers/laser8.mp3')\n};\n\nmodule.exports.explosions = {\n  explode0: { play() {} }, // new Audio('static/sounds/explosions/explode0.wav'),\n  explode1: { play() {} }, // new Audio('static/sounds/explosions/explode1.wav'),\n  explode2: { play() {} } // new Audio('static/sounds/explosions/explode2.wav')\n};\n\nmodule.exports.streak = {\n  firstBlood: { play() {} }, // new Audio('static/sounds/streak/first-blood.mp3'),\n  doubleKill: { play() {} }, // new Audio('static/sounds/streak/double-kill.mp3'),\n  tripleKill: { play() {} }, // new Audio('static/sounds/streak/triple-kill.mp3'),\n  monsterKill: { play() {} }, // new Audio('static/sounds/streak/monster-kill.mp3'),\n  killingSpree: { play() {} }, // new Audio('static/sounds/streak/killing-spree.mp3'),\n  dominating: { play() {} }, // new Audio('static/sounds/streak/dominating.mp3'),\n  rampage: { play() {} }, // new Audio('static/sounds/streak/rampage.mp3'),\n  godLike: { play() {} }, // new Audio('static/sounds/streak/god-like.mp3'),\n  ownage: { play() {} } // new Audio('static/sounds/streak/ownage.mp3')\n};\n\nmodule.exports.music = {\n  theme0: { play() {} } // new Audio('static/sounds/music/flight.ogg')\n};\n","var React = require(\"react\");\nvar _ = require(\"lodash\");\nvar fx = require(\"./../lib/sound-effects\");\nvar Tiles = require(\"./Tiles.jsx\");\nvar Ammos = require(\"./Ammos.jsx\");\nvar Players = require(\"./Players.jsx\");\nvar Stats = require(\"./Stats.jsx\");\nvar Shoots = require(\"./Shoots.jsx\");\nvar Notifications = require(\"./Notifications.jsx\");\n\nvar ClashJS = require(\"../clashjs/ClashCore.js\");\n\nvar playerObjects = require(\"../Players.js\");\nvar playerArray = _.shuffle(_.map(playerObjects, el => el));\n\nvar killsStack = [];\n\nwindow.ClashInstance = new ClashJS(playerArray, {});\nconst DEFAULT_SPEED = 100;\nconst MAX_SPEED = 50;\n\nclass Clash extends React.Component {\n  constructor(props) {\n    super(props);\n\n    window.ClashInstance.target.addEventListener(\"DATA\", evt => {\n      this.handleEvent(evt.detail.name, evt.detail.data);\n    });\n\n    this.state = {\n      clashjs: window.ClashInstance.getState(),\n      shoots: [],\n      speed: DEFAULT_SPEED,\n      kills: [],\n      currentGameIndex: 1,\n      finished: false\n    };\n  }\n\n  componentDidMount() {\n    this.nextTurn();\n  }\n\n  handleClick() {\n    this.setState({\n      speed: Math.floor(this.state.speed * 0.9)\n    });\n  }\n\n  newGame() {\n    killsStack = [];\n\n    if (this.nextTurnTimeout) clearTimeout(this.nextTurnTimeout);\n\n    window.ClashInstance.setupGame();\n\n    this.setState(\n      state => {\n        return {\n          clashjs: window.ClashInstance.getState(),\n          speed: DEFAULT_SPEED,\n          kills: [],\n          currentGameIndex: state.currentGameIndex + 1\n        };\n      },\n      () => {\n        if (this.nextTurnTimeout) clearTimeout(this.nextTurnTimeout);\n        window.setTimeout(() => {\n          this.nextTurn();\n        }, 50);\n      }\n    );\n  }\n\n  nextTurn() {\n    if (this.state.finished) return;\n\n    var currentGameIndex = this.state.currentGameIndex;\n\n    if (this.nextTurnTimeout) clearTimeout(this.nextTurnTimeout);\n\n    this.nextTurnTimeout = window.setTimeout(() => {\n      if (this.state.currentGameIndex !== currentGameIndex) return;\n\n      var { playerStates } = window.ClashInstance.getState();\n      var alivePlayerCount = playerStates.reduce((result, el) => {\n        return el.isAlive ? result + 1 : result;\n      }, 0);\n\n      if (alivePlayerCount < 2) {\n        window.ClashInstance.nextPly();\n        this.nextTurn();\n        return;\n      }\n\n      window.ClashInstance.nextPly();\n\n      this.setState(\n        {\n          clashjs: window.ClashInstance.getState(),\n          speed: this.state.speed > MAX_SPEED ? parseInt(this.state.speed * 0.99, 10) : MAX_SPEED\n        },\n        this.nextTurn\n      );\n    }, this.state.speed);\n  }\n\n  handleEvent(evt, data) {\n    if (evt === \"SHOOT\") {\n      let newShoots = this.state.shoots;\n      newShoots.push({\n        direction: data.direction,\n        origin: data.origin.slice(),\n        time: new Date().getTime()\n      });\n\n      this.setState({\n        shoots: newShoots\n      });\n    }\n    if (evt === \"WIN\") return this.newGame();\n    if (evt === \"DRAW\") return this.newGame();\n    if (evt === \"KILL\") return this._handleKill(data);\n    if (evt === \"END\") return this.endGame();\n  }\n\n  _handleKill(data) {\n    let players = window.ClashInstance.getState().playerInstances;\n    let kills = this.state.kills;\n    let killer = players[data.killer];\n    let killed = _.map(data.killed, index => {\n      killsStack.push(data.killer);\n      killer.kills++;\n      players[index].deaths++;\n      return players[index];\n    });\n    let notification = [killer.getName(), \"killed\", _.map(killed, player => player.getName()).join(\",\")].join(\" \");\n\n    kills.push({ date: new Date(), text: notification });\n    this.setState({\n      kills: kills\n    });\n\n    setTimeout(() => this.handleStreak(data.killer, killer, killed), 100);\n  }\n\n  endGame() {\n    this.setState({\n      clashjs: window.ClashInstance.getState(),\n      shoots: [],\n      speed: 0,\n      kills: [],\n      finished: true\n    });\n  }\n\n  handleStreak(index, killer, killed) {\n    let streakCount = _.filter(killsStack, player => player === index).length;\n    let multiKill = \"\";\n    let spreeMessage = \"\";\n    let kills = this.state.kills;\n    if (killsStack.length === 1) {\n      setTimeout(fx.streak.firstBlood.play(), 50);\n    }\n\n    switch (killed.length) {\n      case 2:\n        setTimeout(fx.streak.doubleKill.play(), 100);\n        multiKill = killer.getName() + \" got a double kill!\";\n        break;\n      case 3:\n        setTimeout(fx.streak.tripleKill.play(), 100);\n        multiKill = killer.getName() + \" got a Triple Kill!\";\n        break;\n      case 4:\n        setTimeout(fx.streak.monsterKill.play(), 100);\n        multiKill = killer.getName() + \" is a MONSTER KILLER!\";\n        break;\n    }\n    kills.push({\n      date: new Date(),\n      text: multiKill\n    });\n\n    switch (streakCount) {\n      case 3:\n        setTimeout(fx.streak.killingSpree.play(), 300);\n        spreeMessage = killer.getName() + \" is on a killing spree!\";\n        break;\n      case 4:\n        setTimeout(fx.streak.dominating.play(), 300);\n        spreeMessage = killer.getName() + \" is dominating!\";\n        break;\n      case 5:\n        setTimeout(fx.streak.rampage.play(), 300);\n        spreeMessage = killer.getName() + \" is on a rampage of kills!\";\n        break;\n      case 6:\n        setTimeout(fx.streak.godLike.play(), 300);\n        spreeMessage = killer.getName() + \" is Godlike!\";\n        break;\n      default:\n        spreeMessage = \"Somebody stop \" + killer.getName();\n        setTimeout(fx.streak.ownage.play(), 300);\n    }\n    kills.push({ date: new Date(), text: spreeMessage });\n    this.setState({\n      kills: kills\n    });\n  }\n\n  render() {\n    var { clashjs, shoots, kills, finished } = this.state;\n\n    var { gameEnvironment, gameStats, playerStates, playerInstances, rounds, totalRounds } = clashjs;\n\n    gameEnvironment = gameEnvironment || {\n      gridSize: 13\n    };\n\n    _.forEach(playerInstances, (player, index) => {\n      gameStats[player.getId()].isAlive = playerStates[index].isAlive;\n    });\n\n    const notification = [...kills];\n\n    if (finished) {\n      const winner = _.sortBy(gameStats, playerStats => playerStats.wins * -1)[0];\n      notification.push({\n        date: new Date(),\n        text: <b style={{ color: \"#0e0\", fontWeight: 700 }}>Congrats {winner.name}!</b>\n      });\n      notification.push({ date: new Date(), text: \"Refresh the page to start again\" });\n\n      console.log(JSON.stringify(gameStats, 0, 2));\n    }\n\n    return (\n      <div className=\"clash\" onClick={this.handleClick.bind(this)}>\n        <Tiles gridSize={gameEnvironment.gridSize} />\n        <Shoots shoots={shoots.slice()} gridSize={gameEnvironment.gridSize} />\n        <Ammos gridSize={gameEnvironment.gridSize} ammoPosition={gameEnvironment.ammoPosition} />\n        <Players gridSize={gameEnvironment.gridSize} playerInstances={playerInstances} playerStates={playerStates} />\n        <Notifications kills={notification} />\n        <Stats rounds={rounds} total={totalRounds} playerStates={playerStates} stats={gameStats} />\n        {false && <pre className=\"debugger\">{JSON.stringify(playerStates, 0, 2)}</pre>}\n      </div>\n    );\n  }\n}\n\nmodule.exports = Clash;\n","import React from \"react\";\n\nclass Tiles extends React.Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    var { gridSize } = this.props;\n\n    var tileSize = 100 / gridSize;\n    var i;\n\n    var tileRender = [];\n    for (i = 0; i < gridSize * gridSize; i++) {\n      tileRender.push(\n        <div style={{ height: tileSize + \"vmin\", width: tileSize + \"vmin\" }} className=\"clash-tile\" key={i} />\n      );\n    }\n\n    return <div>{tileRender}</div>;\n  }\n}\n\nexport default Tiles;\n","var React = require(\"react\");\nvar _ = require(\"lodash\");\n\nclass Ammos extends React.Component {\n  render() {\n    var { gridSize, ammoPosition } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var ammoRender = _.map(ammoPosition, (ammoPos, ammoIndex) => {\n      return (\n        <div\n          key={ammoIndex}\n          className=\"clash-ammo\"\n          style={{\n            top: tileSize * ammoPos[0] + \"vmin\",\n            left: tileSize * ammoPos[1] + \"vmin\",\n            width: tileSize + \"vmin\",\n            height: tileSize + \"vmin\"\n          }}\n        />\n      );\n    });\n\n    return <div className=\"clash-layer animation-glow\">{ammoRender}</div>;\n  }\n}\n\nmodule.exports = Ammos;\n","var React = require(\"react\");\nvar _ = require(\"lodash\");\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nclass Players extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerDirections: props.playerStates.map(el => DIRECTIONS.indexOf(el.direction))\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var playerDirections = this.state.playerDirections;\n    var newPlayerDirections = nextProps.playerStates.map(el => DIRECTIONS.indexOf(el.direction));\n\n    this.setState({\n      playerDirections: newPlayerDirections.map((el, index) => {\n        var diff = ((el + 4) % 4) - ((playerDirections[index] + 4) % 4);\n        if (diff === 3) diff = -1;\n        if (diff === -3) diff = 1;\n\n        return playerDirections[index] + diff;\n      })\n    });\n  }\n\n  render() {\n    var { playerDirections } = this.state;\n    var { gridSize, playerStates, playerInstances } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var playerRender = _.map(playerStates, (playerData, playerIndex) => {\n      if (!playerData.isAlive) return null;\n\n      var playerInfo = playerInstances[playerIndex].getInfo();\n\n      return (\n        <div\n          key={playerIndex}\n          className=\"clash-player-container\"\n          style={{\n            width: tileSize + \"vmin\",\n            height: tileSize + \"vmin\",\n            transform:\n              \"translateY(\" +\n              tileSize * playerData.position[0] +\n              \"vmin) \" +\n              \"translateX(\" +\n              tileSize * playerData.position[1] +\n              \"vmin)\"\n          }}>\n          <div\n            className=\"clash-player\"\n            style={{\n              width: tileSize + \"vmin\",\n              height: tileSize + \"vmin\",\n              backgroundImage: \"url(static/rockets/rocket\" + (playerData.style || 0) + \".png)\",\n              transform: \"scale(1.25) \" + \"rotate(\" + 90 * playerDirections[playerIndex] + \"deg) \"\n            }}\n          />\n          <div className=\"clash-player-name\">{playerInfo.name}</div>\n        </div>\n      );\n    });\n\n    return <div className=\"clash-layer\">{playerRender}</div>;\n  }\n}\n\nmodule.exports = Players;\n","var React = require(\"react\");\nvar _ = require(\"lodash\");\n\nclass Stats extends React.Component {\n  render() {\n    let { stats, rounds, total } = this.props;\n    stats = _.map(stats, playerStats => playerStats);\n    stats = _.sortBy(stats, playerStats => playerStats.wins * -1);\n    return (\n      <div className=\"stats\">\n        <div className=\"stats-title\">\n          Round {rounds} of {total}\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th />\n              <th />\n              <th>Wins</th>\n            </tr>\n          </thead>\n          <tbody>\n            {_.map(stats, (playerStats, index) => {\n              return (\n                <tr key={index} className={playerStats.isAlive ? \"\" : \"player-dead\"}>\n                  <td>{playerStats.isAlive ? \"\" : \"💀\"}</td>\n                  <td className=\"player-name\">{playerStats.name}</td>\n                  <td className=\"stats-results\">{playerStats.wins}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nmodule.exports = Stats;\n","var React = require(\"react\");\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nvar _ = require(\"lodash\");\n\nclass Shoots extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return nextProps.shoots.length !== this.props.shoots.length;\n  }\n\n  render() {\n    var { shoots, gridSize } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var shootsRender = _.map(shoots, (el, index) => {\n      return (\n        <div\n          key={index}\n          className=\"clash-shoot animation-shot\"\n          style={{\n            top: tileSize * el.origin[0] + \"vmin\",\n            left: tileSize * el.origin[1] + \"vmin\",\n            transform:\n              \"translatex(\" +\n              tileSize / 2 +\n              \"vmin) \" +\n              \"translatey(\" +\n              tileSize / 2 +\n              \"vmin) \" +\n              \"rotate(\" +\n              (DIRECTIONS.indexOf(el.direction) - 1) * 90 +\n              \"deg) \"\n          }}\n        />\n      );\n    });\n\n    return <div className=\"clash-layer\">{shootsRender}</div>;\n  }\n}\n\nmodule.exports = Shoots;\n","var React = require(\"react\");\n\nconst _ = require(\"lodash\");\n\nclass Notifications extends React.Component {\n  render() {\n    var { kills } = this.props;\n    var date = new Date();\n\n    _.remove(kills, k => date - k.date > 3000);\n    kills = _.sortBy(kills, k => k.date.valueOf);\n    return (\n      <div className=\"notifications\">\n        {_.map(kills, (k, idx) => {\n          return <p key={idx}>{k.text}</p>;\n        })}\n      </div>\n    );\n  }\n}\n\nmodule.exports = Notifications;\n","const _ = require(\"lodash\");\n\nvar PlayerClass = require(\"./PlayerClass.js\");\nvar executeMovementHelper = require(\"./executeMovementHelper.js\");\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nconst SUDDEN_DEATH_TURN = 60;\n\nclass ClashJS {\n  constructor(playerDefinitionArray, currentStats) {\n    const clashjsTarget = class ClashJSTarget extends EventTarget {};\n    this.target = new clashjsTarget();\n\n    this._totalRounds = playerDefinitionArray.length * 2 + 8;\n    this._rounds = 0;\n    this._gameStats = currentStats || {};\n    this._evtCallback = (msg, data) => {\n      this.target.dispatchEvent(new CustomEvent(\"DATA\", { detail: { name: msg, data: data } }));\n    };\n    this._alivePlayerCount = 0;\n    this._suddenDeathCount = 0;\n    this._playerInstances = playerDefinitionArray.map(playerDefinition => {\n      let player = new PlayerClass(playerDefinition);\n      this._gameStats[player.getId()] = {\n        name: player.getName(),\n        deaths: 0,\n        kills: 0,\n        kdr: 0,\n        wins: 0,\n        winrate: 0\n      };\n      return player;\n    });\n\n    this.setupGame();\n  }\n\n  _getAlivePlayerCount() {\n    return this._playerStates.reduce((result, el) => {\n      return el.isAlive ? result + 1 : result;\n    }, 0);\n  }\n\n  setupGame() {\n    this._gameEnvironment = {\n      gridSize: 13,\n      ammoPosition: []\n    };\n    this._rounds++;\n    this._suddenDeathCount = 0;\n    this._playerInstances = _.shuffle(this._playerInstances);\n    this._alivePlayerCount = this._playerInstances.length;\n    this._playerStates = this._playerInstances.map(playerInstance => {\n      let gridSize = this._gameEnvironment.gridSize;\n      return {\n        style: playerInstance.getInfo().style,\n        position: [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)],\n        direction: DIRECTIONS[Math.floor(Math.random() * 4)],\n        ammo: 0,\n        isAlive: true\n      };\n    });\n\n    this._currentPlayer = 0;\n    this._createAmmo();\n  }\n\n  _createAmmo() {\n    var newAmmoPosition = [\n      Math.floor(Math.random() * this._gameEnvironment.gridSize),\n      Math.floor(Math.random() * this._gameEnvironment.gridSize)\n    ];\n\n    if (\n      this._gameEnvironment.ammoPosition.some(el => {\n        return el[0] === newAmmoPosition[0] && el[1] === newAmmoPosition[1];\n      })\n    ) {\n      this._createAmmo();\n      return;\n    }\n\n    this._gameEnvironment.ammoPosition.push(newAmmoPosition);\n  }\n\n  getState() {\n    return {\n      gameEnvironment: this._gameEnvironment,\n      gameStats: this._gameStats,\n      rounds: this._rounds,\n      totalRounds: this._totalRounds,\n      playerStates: this._playerStates,\n      playerInstances: this._playerInstances\n    };\n  }\n\n  nextPly() {\n    if (this._suddenDeathCount > SUDDEN_DEATH_TURN * this._getAlivePlayerCount()) {\n      this._evtCallback(\"DRAW\");\n      this._handleCoreAction(\"DRAW\");\n    }\n    let clonedStates = _.cloneDeep(this._playerStates, true);\n\n    if (this._getAlivePlayerCount() < 2) {\n      this._suddenDeathCount += 10;\n    }\n\n    if (this._getAlivePlayerCount() < 3) {\n      this._suddenDeathCount++;\n    }\n\n    var otherPlayers = clonedStates.filter((currentEnemyFilter, index) => {\n      if (index === this._currentPlayer) return false;\n      return currentEnemyFilter.isAlive;\n    });\n\n    if (this._playerStates[this._currentPlayer].isAlive) {\n      this._savePlayerAction(\n        this._currentPlayer,\n        this._playerInstances[this._currentPlayer].execute(\n          clonedStates[this._currentPlayer],\n          otherPlayers,\n          _.cloneDeep(this._gameEnvironment, true)\n        )\n      );\n    }\n\n    this._currentPlayer = (this._currentPlayer + 1) % this._playerInstances.length;\n\n    if (this._gameEnvironment.ammoPosition.length < this._playerStates.length / 1.2 && Math.random() > 0.92) {\n      this._createAmmo();\n    }\n\n    if (Math.random() > 0.99) {\n      this._createAmmo();\n    }\n\n    return this.getState();\n  }\n\n  _handleCoreAction(action, data) {\n    if (action === \"KILL\") {\n      let { killer, killed } = data;\n      this._gameStats[killer.getId()].kills++;\n      _.forEach(this._playerInstances, player => {\n        let stats = this._gameStats[player.getId()];\n        if (killed.indexOf(player) > -1) {\n          this._alivePlayerCount--;\n          stats.deaths++;\n        }\n        if (stats.deaths) {\n          stats.kdr = stats.kills / stats.deaths;\n        } else {\n          stats.kdr = stats.kills;\n        }\n      });\n      this._suddenDeathCount = 0;\n    }\n    if (action === \"WIN\") {\n      this._gameStats[data.winner.getId()].wins++;\n      _.forEach(this._gameStats, (playerStats, key) => {\n        let { wins, winrate } = playerStats;\n        playerStats.winrate = Math.round((wins * 100) / this._rounds);\n      });\n\n      if (this._rounds >= this._totalRounds) {\n        return this._evtCallback(\"END\");\n      }\n    }\n    if (action === \"DRAW\") {\n      _.forEach(this._gameStats, (playerStats, key) => {\n        let { wins, winrate } = playerStats;\n        playerStats.winrate = Math.round((wins * 100) / this._rounds);\n      });\n      if (this._rounds >= this._totalRounds) {\n        return this._evtCallback(\"END\");\n      }\n    }\n  }\n\n  _savePlayerAction(playerIndex, playerAction) {\n    this._playerStates = executeMovementHelper({\n      playerIndex: playerIndex,\n      playerAction: playerAction,\n      playerStates: this._playerStates,\n      playerInstances: this._playerInstances,\n      gameEnvironment: this._gameEnvironment,\n      evtCallback: this._evtCallback,\n      coreCallback: this._handleCoreAction.bind(this)\n    });\n  }\n}\n\nmodule.exports = ClashJS;\n","var fx = require(\"./../lib/sound-effects\");\nvar generateId = require(\"./../lib/string-tools\").generateBase32String;\n\nclass PlayerClass {\n  constructor(options) {\n    this._id = generateId(8);\n    this._playerInfo = options.info;\n    this._playerAI = options.ai;\n  }\n\n  getId() {\n    return this._id;\n  }\n\n  getInfo() {\n    return this._playerInfo;\n  }\n\n  getName() {\n    return this._playerInfo.name;\n  }\n\n  playExplosion() {\n    var i = Math.round(Math.random() * 10) % 3;\n    fx.explosions[\"explode\" + i].play();\n  }\n\n  execute(playerState, enemiesStates, gameEnvironment) {\n    try {\n      return this._playerAI(playerState, enemiesStates, gameEnvironment);\n    } catch (e) {\n      console.error(\"!\", e);\n    }\n  }\n}\n\nmodule.exports = PlayerClass;\n","var digits = '0123456789';\nvar lowercase = 'abcdefghijklmnoprstuvxuyz';\nvar uppercase = lowercase.toUpperCase();\nvar special = '+/';\nvar base64Chars;\nvar base62Chars;\nvar base32Chars;\nvar generateBaseString;\n\nmodule.exports = (exports = {});\n\nbase64Chars = function() {\n  return [digits, lowercase, uppercase, special].join('');\n};\n\nbase62Chars = function() {\n  return [digits, lowercase, uppercase].join('');\n};\n\nbase32Chars = function() {\n  return [uppercase, digits].join('');\n};\n\ngenerateBaseString = function(pool, length) {\n  var output = '';\n  var i;\n\n  for (i = 0; i < length; i += 1) {\n    output += pool[Math.ceil(Math.random() * 100 % pool.length || 1) - 1];\n  }\n\n  return output;\n};\n\nexports.generateBase64String = function(length) {\n  return generateBaseString(base64Chars(), length);\n};\n\nexports.generateBase62String = function(length) {\n  return generateBaseString(base62Chars(), length);\n};\n\nexports.generateBase32String = function(length) {\n  return generateBaseString(base32Chars(), length);\n};\n\nexports.generateBase10String = function(length) {\n  return generateBaseString(digits, length);\n};\n","var _ = require(\"lodash\");\nvar utils = require(\"../lib/utils.js\");\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nvar safeMovement = (value, size) => {\n  if (value < 0) return 0;\n  if (value > size - 1) return size - 1;\n  return value;\n};\n\nvar clashCoreUtils = data => {\n  var { playerIndex, playerAction, playerStates, playerInstances, gameEnvironment, evtCallback, coreCallback } = data;\n  var currentPlayerState = playerStates[playerIndex];\n\n  if (DIRECTIONS.indexOf(playerAction) !== -1) {\n    currentPlayerState.direction = playerAction;\n    return playerStates;\n  }\n\n  if (playerAction === \"move\") {\n    switch (currentPlayerState.direction) {\n      case DIRECTIONS[0]:\n        currentPlayerState.position[0]--;\n        break;\n      case DIRECTIONS[1]:\n        currentPlayerState.position[1]++;\n        break;\n      case DIRECTIONS[2]:\n        currentPlayerState.position[0]++;\n        break;\n      case DIRECTIONS[3]:\n        currentPlayerState.position[1]--;\n        break;\n      default:\n        break;\n    }\n\n    // prevent the player to go over the world\n    currentPlayerState.position[0] = safeMovement(currentPlayerState.position[0], gameEnvironment.gridSize);\n    currentPlayerState.position[1] = safeMovement(currentPlayerState.position[1], gameEnvironment.gridSize);\n\n    // check if the player collected ammo\n    gameEnvironment.ammoPosition.forEach((el, index) => {\n      if (el[0] === currentPlayerState.position[0] && el[1] === currentPlayerState.position[1]) {\n        gameEnvironment.ammoPosition.splice(index, 1);\n        currentPlayerState.ammo += 1;\n      }\n    });\n  }\n\n  if (playerAction === \"shoot\" && currentPlayerState.ammo > 0) {\n    currentPlayerState.ammo -= 1;\n\n    let kills = [];\n    let survivors = [];\n    evtCallback(\"SHOOT\", {\n      shooter: playerIndex,\n      origin: currentPlayerState.position,\n      direction: currentPlayerState.direction\n    });\n\n    playerStates.forEach((enemyObject, enemyIndex) => {\n      if (\n        enemyObject.isAlive &&\n        utils.isVisible(currentPlayerState.position, enemyObject.position, currentPlayerState.direction)\n      ) {\n        kills.push(enemyIndex);\n        enemyObject.isAlive = false;\n      }\n    });\n\n    if (kills.length) {\n      survivors = _.filter(playerStates, player => player.isAlive);\n      coreCallback(\"KILL\", {\n        killer: playerInstances[playerIndex],\n        killed: _.map(kills, index => playerInstances[index])\n      });\n      evtCallback(\"KILL\", {\n        killer: playerIndex,\n        killed: kills\n      });\n\n      if (!survivors.length) {\n        coreCallback(\"DRAW\");\n        evtCallback(\"DRAW\");\n      }\n\n      if (survivors.length === 1) {\n        coreCallback(\"WIN\", {\n          winner: playerInstances[playerIndex]\n        });\n        evtCallback(\"WIN\", {\n          winner: playerInstances[playerIndex]\n        });\n      }\n    }\n  }\n\n  return playerStates;\n};\n\nmodule.exports = clashCoreUtils;\n","module.exports = {\n  // codingpains: require('./players/codingpains.js'),\n  manuelmhtr: require('./players/manuelmhtr.js'),\n  // ericku: require('./players/ericku.js'),\n  siegfried: require('./players/siegfried.js'),\n  horror: require('./players/horror.js'),\n  elperron: require('./players/elperron.js'),\n  // yuno: require('./players/yuno.js'),\n  xmontoya: require('./players/xmontoya.js'),\n  margeux: require('./players/margeux.js')\n};\n","var utils = require('../lib/utils.js');\nvar ORIENTATION = {north: 'vertical', east: 'horizontal', south: 'vertical', west: 'horizontal'};\n\nvar manuelmhtr = {\n  info: {\n    name: 'Manuelmhtr',\n    style: 3\n  },\n  ai: function(playerState, enemiesStates, gameEnvironment) {\n    var response;\n    var enemies = [];\n    var params = {\n      vulnerabilityLevel: null,\n      canKill: null,\n      nearestAmmo: null,\n      nearestEnemy: null,\n      canMove: null\n    };\n\n    // Parse enemies\n    enemiesStates.forEach(function(enemy) {\n      if (enemy.isAlive === true) {\n        enemy.nearestAmmoDistance = calculateDistanceToNearestAmmo(enemy.position);\n        enemies.push(enemy);\n      }\n    });\n\n    // Process parameters\n    params.vulnerabilityLevel = calculateVulnerabilityLevel(playerState.position);\n    params.canKill = playerState.ammo > 0 && utils.canKill(playerState, enemiesStates);\n    params.nearestAmmo = getNearestAmmo(playerState.position);\n    params.nearestEnemy = getNearestEnemy(playerState.position);\n    params.canMove = canMove(playerState.position, playerState.direction);\n\n    function calculateVulnerabilityLevel(targetPosition) {\n      var vulnerabilityLevel = 0.0;\n      enemies.forEach(function(enemy) {\n        if (utils.isVisible(enemy.position, targetPosition, enemy.direction) && enemy.ammo > 0) {\n          vulnerabilityLevel = Math.max(vulnerabilityLevel, 1.0);\n        } else if (isAligned(enemy.position, targetPosition) && (enemy.ammo > 0 || enemy.nearestAmmoDistance === 1)) {\n          vulnerabilityLevel = Math.max(vulnerabilityLevel, 0.5);\n        }\n      });\n\n      if (vulnerabilityLevel === 0.0) {\n        // Check if other enemies are near\n        var northEast = [targetPosition[0] + 1, targetPosition[1] + 1];\n        var southWest = [targetPosition[0] - 1, targetPosition[1] - 1];\n        enemies.forEach(function(enemy) {\n          if (enemy.ammo > 0) {\n            if (isAligned(enemy.position, northEast) || isAligned(enemy.position, southWest)) {\n              vulnerabilityLevel = Math.max(vulnerabilityLevel, 0.25);\n            }\n          }\n        });\n      }\n\n      return vulnerabilityLevel;\n    }\n\n    function isAligned(originalPosition, finalPosition) {\n      var aligned = false;\n      aligned = aligned || originalPosition[1] === finalPosition[1] && originalPosition[0] > finalPosition[0];\n      aligned = aligned || originalPosition[0] === finalPosition[0] && originalPosition[1] < finalPosition[1];\n      aligned = aligned || originalPosition[1] === finalPosition[1] && originalPosition[0] < finalPosition[0];\n      aligned = aligned || originalPosition[0] === finalPosition[0] && originalPosition[1] > finalPosition[1];\n      return aligned;\n    }\n\n    function getNearestAmmo(position) {\n      var nearestAmmo = null;\n      var nearestDistance = null;\n      gameEnvironment.ammoPosition.forEach(function(ammo) {\n        var distance = utils.getDistance(position, ammo);\n        if (nearestDistance === null || distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestAmmo = {\n            position: ammo,\n            distance: nearestDistance\n          };\n        }\n      });\n      return nearestAmmo;\n    }\n\n    function calculateDistanceToNearestAmmo(position) {\n      var nearestDistance = null;\n      gameEnvironment.ammoPosition.forEach(function(ammo) {\n        var distance = utils.getDistance(position, ammo);\n        if (nearestDistance === null || distance < nearestDistance) {\n          nearestDistance = distance;\n        }\n      });\n      return nearestDistance;\n    }\n\n    function getNearestEnemy(position) {\n      var nearestEnemy = null;\n      var nearestDistance = null;\n      enemies.forEach(function(enemy) {\n        var distance = calculateEnemyDistance(position, enemy);\n\n        if (nearestDistance === null || distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestEnemy = {\n            instance: enemy,\n            distance: nearestDistance\n          };\n        }\n      });\n      return nearestEnemy;\n    }\n\n    function calculateEnemyDistance(position, enemy) {\n      var diffVertical = Math.abs(position[0] - enemy.position[0]);\n      var diffHorizontal = Math.abs(position[1] - enemy.position[1]);\n      return Math.min(diffHorizontal, diffVertical);\n    }\n\n    function defend() {\n      if (params.vulnerabilityLevel === 1.0) {\n        var canRun = params.canMove;\n        var attacker;\n\n        // Find attacker\n        enemies.forEach(function(enemy) {\n          if (enemy.ammo > 0 && utils.isVisible(enemy.position, playerState.position, enemy.direction)) {\n            attacker = enemy;\n          }\n        });\n\n        // Check if can run\n        if (attacker && ORIENTATION[attacker.direction] === ORIENTATION[playerState.direction]) {\n          canRun = false;\n        }\n\n        if (canRun) {\n          return 'move';\n        } else if (attacker && playerState.ammo > 0) {\n          // Counterattack\n          return huntEnemy(attacker);\n        } else {\n          return getSafestDirection();\n        }\n      } else {\n        return getSafestDirection();\n      }\n    }\n\n    function getSafestDirection() {\n      var safestDirection = playerState.direction;\n      var lowestVulnerability = params.vulnerabilityLevel;\n      var maxDistanceLeft = 0;\n\n      var options = [{\n          direction: 'north',\n          position: [playerState.position[0] - 1, playerState.position[1]]\n        }, {\n          direction: 'east',\n          position: [playerState.position[0], playerState.position[1] + 1]\n        }, {\n          direction: 'south',\n          position: [playerState.position[0] + 1, playerState.position[1]]\n        }, {\n          direction: 'west',\n          position: [playerState.position[0], playerState.position[1] - 1]\n        }\n      ];\n\n      // Process options\n      options.forEach(function(option) {\n        option.vulnerability = calculateVulnerabilityLevel(option.position);\n        option.distanceLeft = calculateDistanceLeft(option.direction);\n        option.canMove = canMove(playerState.position, option.direction);\n        var isBetterOption = option.vulnerability < lowestVulnerability || (option.vulnerability === lowestVulnerability && option.distanceLeft > maxDistanceLeft);\n        if (option.canMove && isBetterOption) {\n          safestDirection = option.direction;\n          lowestVulnerability = option.vulnerability;\n          maxDistanceLeft = option.distanceLeft;\n        }\n      });\n\n      if (safestDirection === playerState.direction) {\n        return moveSafely();\n      } else {\n        return safestDirection;\n      }\n\n      function calculateDistanceLeft(direction) {\n        if (direction === 'north') {\n          return playerState.position[0];\n        } else if (direction === 'east') {\n          return gameEnvironment.gridSize - playerState.position[1];\n        } else if (direction === 'south') {\n          return gameEnvironment.gridSize - playerState.position[0];\n        } else if (direction === 'west') {\n          return playerState.position[1];\n        }\n      }\n    }\n\n    function canMove(position, direction) {\n      if (direction === 'north') {\n        return position[0] > 0;\n      } else if (direction === 'east') {\n        return position[1] < gameEnvironment.gridSize;\n      } else if (direction === 'south') {\n        return position[0] < gameEnvironment.gridSize;\n      } else if (direction === 'west') {\n        return position[1] > 0;\n      }\n    }\n\n    function attack() {\n      return 'shoot';\n    }\n\n    function moveWisely() {\n      if (playerState.ammo === 0 && params.nearestAmmo) {\n        return getAmmo(params.nearestAmmo.position);\n      } else if (playerState.ammo > 0 && params.nearestEnemy) {\n        if (params.nearestAmmo && params.nearestAmmo.distance < params.nearestEnemy.distance) {\n          return getAmmo(params.nearestAmmo.position);\n        } else {\n          return huntEnemy(params.nearestEnemy.instance);\n        }\n      } else {\n        return getSafestDirection();\n      }\n    }\n\n    function huntEnemy(enemy) {\n      if (utils.isVisible(playerState.position, enemy.position, playerState.direction)) {\n        return attack();\n      } else {\n        var attackDirection = getAttackDirection();\n        var enemyDistance = calculateEnemyDistance(playerState.position, enemy);\n\n        if (attackDirection === playerState.direction && (enemyDistance > 1 || enemy.ammo === 0)) {\n          return 'move';\n        } else {\n          return attackDirection;\n        }\n      }\n\n      function getAttackDirection() {\n        var isEnemyAligned = isAligned(playerState.position, enemy.position);\n        var enemyOrientation = ORIENTATION[enemy.direction];\n\n        if (isEnemyAligned) {\n          return utils.fastGetDirection(playerState.position, enemy.position);\n        } else {\n          if (enemyOrientation === 'vertical') {\n            return enemy.position[1] > playerState.position[1] ? 'east' : 'west';\n          } else {\n            return enemy.position[0] > playerState.position[0] ? 'south' : 'north';\n          }\n        }\n      }\n    }\n\n    function moveSafely() {\n      var destination;\n      var vulnerabilityOnMove;\n\n      if (playerState.direction === 'north') {\n        destination = [playerState.position[0] - 1, playerState.position[1]];\n      } else if (playerState.direction === 'east') {\n        destination = [playerState.position[0], playerState.position[1] + 1];\n      } else if (playerState.direction === 'south') {\n        destination = [playerState.position[0] + 1, playerState.position[1]];\n      } else if (playerState.direction === 'west') {\n        destination = [playerState.position[0], playerState.position[1] - 1];\n      }\n\n      vulnerabilityOnMove = calculateVulnerabilityLevel(destination);\n\n      if (vulnerabilityOnMove === 1.0) {\n        return null;\n      } else {\n        return 'move';\n      }\n    }\n\n    function getAmmo(ammoPosition) {\n      // Get direction to turn\n      var goToDirection = utils.fastGetDirection(playerState.position, ammoPosition);\n\n      // If same direction, move\n      if (goToDirection === playerState.direction) {\n        return moveSafely();\n      } else {\n        return goToDirection;\n      }\n    }\n\n    // Decide movement\n    if (params.vulnerabilityLevel === 1.0 || params.vulnerabilityLevel >= 0.5 && params.canKill !== true) {\n      response = defend();\n    } else if (params.canKill === true) {\n      response = attack();\n    } else {\n      response = moveWisely();\n    }\n    return response;\n\n  }\n};\n\nmodule.exports = manuelmhtr;\n","var utils = require('../lib/utils.js');\n\nvar siegfried = {\n  info: {\n    name: 'Siegfried',\n    style: 4\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.getDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.randomMove();\n  }\n};\n\nmodule.exports = siegfried;\n","var utils = require('../lib/utils.js');\n\nvar MUSOLINI = {\n  info: {\n    name: 'Horror',\n    style: 10\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = MUSOLINI;\n","/**\r\n * Created by Roberto Alvarez on 7/29/2015.\r\n */var utils = require('../lib/utils.js'),\r\n    currentDirection = 0,\r\n    oldBestAmo = null,\r\n    directions = {\r\n        1: 'north',\r\n        2: 'east',\r\n        3: 'south',\r\n        4: 'west'\r\n    },\r\n    turnsComplete = 0,\r\n    ElPerron = {\r\n        info: {\r\n            name: 'ElPerron',\r\n            style: 7\r\n        },\r\n        ai: (playerState, enemiesStates, gameEnvironment) => {\r\n            var directionToTarget,\r\n                /**\r\n                 * Devuelve la direcci�n del amo mas cercano en base a la posici�n actual de la\r\n                 * nave\r\n                 * @returns {*}\r\n                 */\r\n                getBestAmmo = () => {\r\n                    var myPosition = playerState.position,\r\n                        distanceMin = 22,\r\n                        ammoMin = null;\r\n                    for (var amIndex in gameEnvironment.ammoPosition) {\r\n                        var ammo = gameEnvironment.ammoPosition[amIndex];\r\n                        var difXbyMe = Math.abs(myPosition[1] - ammo[1]),\r\n                            difYbyMe = Math.abs(myPosition[0] - ammo[0]),\r\n                            distanceByMe = difXbyMe + difYbyMe;\r\n\r\n                        if (distanceByMe < distanceMin) {\r\n                            distanceMin = distanceByMe;\r\n                            ammoMin = ammo;\r\n                        }\r\n                    }\r\n\r\n                    return ammoMin;\r\n                },\r\n                /**\r\n                 * Devuelve n�mero de enemigos vivos\r\n                 * @returns {number}\r\n                 */\r\n                getCountEnemiesAlive = () => {\r\n                    var countEnemies = 0;\r\n\r\n                    for (var enIndex in enemiesStates) {\r\n                        var enemy = enemiesStates[enIndex];\r\n\r\n                        if (enemy.isAlive) {\r\n                            countEnemies++;\r\n                        }\r\n                    }\r\n\r\n                    return countEnemies;\r\n                },\r\n                /**\r\n                 * Devuelve si la nave esta posicionada en el mismo lugar que el ammo\r\n                 * @param ammo\r\n                 * @returns {boolean}\r\n                 */\r\n                isOnAmmo = (ammo) => {\r\n                    if (ammo == null) {\r\n                        return false;\r\n                    }\r\n                    return ammo[0] == playerState.position[0] &&\r\n                        ammo[1] == playerState.position[1];\r\n                };\r\n\r\n            // Hasta la vista baby !!!\r\n            if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\r\n                return 'shoot';\r\n            }\r\n\r\n            if (playerState.ammo == 0 || turnsComplete == 1) {\r\n                var toPosition = getBestAmmo();\r\n\r\n                // Si tengo los suficientes disparos para eliminar a todos los enemigos\r\n                // me dirijo hacia ellos\r\n                // if (playerState.ammo >= getCountEnemiesAlive()) {\r\n                //     toPosition = enemiesStates[0].position;\r\n                // }\r\n\r\n                directionToTarget = utils.getDirection(playerState.position, toPosition);\r\n\r\n                if (isOnAmmo(oldBestAmo)) {\r\n                    turnsComplete = 0;\r\n                }\r\n\r\n                // Guardo referencia de la posicion a la que me dirigi anteriormente\r\n                oldBestAmo = toPosition;\r\n\r\n                // Si ya se movio, cambio mi direcci�n\r\n                if (directionToTarget !== playerState.direction) {\r\n                    return directionToTarget;\r\n                }\r\n\r\n                return 'move';\r\n            }\r\n            else {\r\n                // Si tiene armas lo hago girar\r\n                currentDirection++;\r\n                if (currentDirection > 4) {\r\n                    currentDirection = 1;\r\n                    turnsComplete++;\r\n                }\r\n\r\n                return directions[currentDirection];\r\n            }\r\n\r\n            return utils.randomMove();\r\n        }\r\n    };\r\n\r\nmodule.exports = ElPerron;\r\n","var utils = require('../lib/utils.js');\n\nvar xmontoya = {\n  info: {\n    name: 'Xmontoya89',\n    style: 1\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return utils.safeRandomMove();\n    }\n\n    return 'move';\n  }\n};\n\nmodule.exports = xmontoya;\n","var utils = require('../lib/utils.js');\nvar noAmmo = true;\nvar margeux = {\n  info: {\n    name: 'margeux',\n    style: 5\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n    var directionToEnemy;\n    if (playerState.ammo >0){\n      noAmmo = false;\n    }\n    if (playerState.ammo == 0){\n      noAmmo= true;\n    }\n\n    if (gameEnvironment.ammoPosition.length && noAmmo) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n\n    //LOOK for an enemy\n    if(!noAmmo){\n      directionToEnemy = utils.fastGetDirection(playerState.position, enemiesStates[0].position);\n      if (directionToEnemy !== playerState.direction){\n        var directionToMargeus = utils.fastGetDirection(enemiesStates[0].position, playerState.position);\n        if (directionToMargeus !== enemiesStates[0].position){\n                  return directionToEnemy;\n        }else{\n                  return utils.safeRandomMove();\n        }\n      }\n      if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n      }else{\n        return utils.safeRandomMove();\n      }\n    }\n\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n    if (gameEnvironment.ammoPosition.length ) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = margeux;\n","import React from \"react\";\nimport \"./App.css\";\n\nvar Clash = require(\"./components/Clash.jsx\");\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Clash />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}