{"version":3,"sources":["lib/sound-effects.js","lib/utils.js","lib/string-tools.js","clashjs/executeMovementHelper.js","Players.js","players/manuelmhtr.js","players/siegfried.js","players/horror.js","players/elperron.js","players/xmontoya.js","players/margeux.js","components/Tiles.jsx","components/Ammos.jsx","components/Players.jsx","components/Stats.jsx","components/Shoots.jsx","components/Notifications.jsx","clashjs/PlayerClass.js","clashjs/ClashCore.js","components/Clash.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","lasers","laser0","play","laser1","laser2","laser3","laser4","laser5","laser6","laser7","laser8","explosions","explode0","explode1","explode2","streak","firstBlood","doubleKill","tripleKill","monsterKill","killingSpree","dominating","rampage","godLike","ownage","music","theme0","DIRECTIONS","movements","isVisible","originalPosition","finalPosition","direction","randomMove","Math","random","floor","length","getDirection","start","end","diffVertical","abs","diffHorizontal","canKill","currentPlayerState","enemiesStates","some","enemyObject","isAlive","position","safeRandomMove","fastGetDirection","turn","currentPosition","howMuchTurn","currentPositionIndex","indexOf","getDistance","base64Chars","base62Chars","base32Chars","generateBaseString","digits","lowercase","uppercase","toUpperCase","special","join","pool","i","output","ceil","generateBase64String","generateBase62String","generateBase32String","generateBase10String","_","require","utils","safeMovement","value","size","data","playerIndex","playerAction","playerStates","playerInstances","gameEnvironment","evtCallback","coreCallback","gridSize","ammoPosition","forEach","el","index","splice","ammo","kills","survivors","shooter","origin","enemyIndex","push","filter","player","killer","killed","map","winner","manuelmhtr","siegfried","horror","elperron","xmontoya","margeux","ORIENTATION","north","east","south","west","info","name","style","ai","playerState","enemies","params","vulnerabilityLevel","nearestAmmo","nearestEnemy","canMove","calculateVulnerabilityLevel","targetPosition","enemy","max","isAligned","nearestAmmoDistance","northEast","southWest","aligned","calculateEnemyDistance","min","getSafestDirection","safestDirection","lowestVulnerability","maxDistanceLeft","option","vulnerability","distanceLeft","calculateDistanceLeft","isBetterOption","moveSafely","huntEnemy","attackDirection","isEnemyAligned","enemyOrientation","getAttackDirection","enemyDistance","destination","getAmmo","goToDirection","nearestDistance","distance","calculateDistanceToNearestAmmo","getNearestAmmo","instance","getNearestEnemy","attacker","canRun","defend","directionToAmmo","MUSOLINI","currentDirection","oldBestAmo","directions","1","2","3","4","turnsComplete","ElPerron","directionToTarget","toPosition","myPosition","distanceMin","ammoMin","amIndex","distanceByMe","getBestAmmo","noAmmo","directionToEnemy","Tiles","this","props","tileSize","tileRender","height","width","className","key","React","Component","Ammos","ammoRender","ammoPos","ammoIndex","top","left","Players","state","playerDirections","nextProps","newPlayerDirections","setState","diff","playerRender","playerData","playerInfo","getInfo","transform","backgroundImage","Stats","stats","rounds","total","playerStats","sortBy","wins","Shoots","shoots","shootsRender","Notifications","date","Date","remove","k","valueOf","idx","text","PlayerClass","options","_id","generateId","_playerInfo","_playerAI","round","fx","e","console","error","ClashJS","playerDefinitionArray","currentStats","clashjsTarget","EventTarget","target","_totalRounds","_rounds","_gameStats","_evtCallback","msg","dispatchEvent","CustomEvent","detail","_alivePlayerCount","_suddenDeathCount","_playerInstances","playerDefinition","getId","getName","deaths","kdr","winrate","setupGame","_playerStates","reduce","result","_gameEnvironment","shuffle","playerInstance","_currentPlayer","_createAmmo","newAmmoPosition","gameStats","totalRounds","_getAlivePlayerCount","_handleCoreAction","clonedStates","cloneDeep","otherPlayers","currentEnemyFilter","_savePlayerAction","execute","getState","action","executeMovementHelper","bind","playerArray","playerObjects","killsStack","window","ClashInstance","DEFAULT_SPEED","Clash","addEventListener","evt","handleEvent","clashjs","speed","currentGameIndex","finished","nextTurn","nextTurnTimeout","clearTimeout","setTimeout","nextPly","parseInt","newShoots","slice","time","getTime","newGame","_handleKill","endGame","players","notification","handleStreak","streakCount","multiKill","spreeMessage","color","fontWeight","onClick","handleClick","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6527d34b.chunk.js","sourcesContent":["module.exports.lasers = {\n  laser0: { play() {} }, // new Audio('static/sounds/lasers/laser0.mp3'),\n  laser1: { play() {} }, // new Audio('static/sounds/lasers/laser1.mp3'),\n  laser2: { play() {} }, // new Audio('static/sounds/lasers/laser2.mp3'),\n  laser3: { play() {} }, // new Audio('static/sounds/lasers/laser3.mp3'),\n  laser4: { play() {} }, // new Audio('static/sounds/lasers/laser4.mp3'),\n  laser5: { play() {} }, // new Audio('static/sounds/lasers/laser5.mp3'),\n  laser6: { play() {} }, // new Audio('static/sounds/lasers/laser6.mp3'),\n  laser7: { play() {} }, // new Audio('static/sounds/lasers/laser7.mp3'),\n  laser8: { play() {} } // new Audio('static/sounds/lasers/laser8.mp3')\n};\n\nmodule.exports.explosions = {\n  explode0: { play() {} }, // new Audio('static/sounds/explosions/explode0.wav'),\n  explode1: { play() {} }, // new Audio('static/sounds/explosions/explode1.wav'),\n  explode2: { play() {} } // new Audio('static/sounds/explosions/explode2.wav')\n};\n\nmodule.exports.streak = {\n  firstBlood: { play() {} }, // new Audio('static/sounds/streak/first-blood.mp3'),\n  doubleKill: { play() {} }, // new Audio('static/sounds/streak/double-kill.mp3'),\n  tripleKill: { play() {} }, // new Audio('static/sounds/streak/triple-kill.mp3'),\n  monsterKill: { play() {} }, // new Audio('static/sounds/streak/monster-kill.mp3'),\n  killingSpree: { play() {} }, // new Audio('static/sounds/streak/killing-spree.mp3'),\n  dominating: { play() {} }, // new Audio('static/sounds/streak/dominating.mp3'),\n  rampage: { play() {} }, // new Audio('static/sounds/streak/rampage.mp3'),\n  godLike: { play() {} }, // new Audio('static/sounds/streak/god-like.mp3'),\n  ownage: { play() {} } // new Audio('static/sounds/streak/ownage.mp3')\n};\n\nmodule.exports.music = {\n  theme0: { play() {} } // new Audio('static/sounds/music/flight.ogg')\n};\n","var DIRECTIONS = ['north', 'east', 'south', 'west'];\nvar movements = ['north', 'east', 'south', 'west', 'shoot'];\n\nvar randomMove = () => {\n  return Math.random() > 0.33 ? 'move' : movements[Math.floor(Math.random() * movements.length)];\n};\n\nvar safeRandomMove = () => {\n  return Math.random() > 0.33 ? 'move' : DIRECTIONS[Math.floor(Math.random() * DIRECTIONS.length)];\n};\n\nvar turn = (currentPosition = [], howMuchTurn) => {\n  var currentPositionIndex = DIRECTIONS.indexOf(currentPosition);\n  return DIRECTIONS[(currentPositionIndex + howMuchTurn) % 4];\n};\n\nvar getDirection = (start = [], end = []) => {\n  start = start || [];\n  end = end || [];\n\n  var diffVertical = Math.abs(start[0] - end[0]);\n  var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  if (diffVertical > diffHorizontal) {\n    return start[0] - end[0] > 0 ? 'north' : 'south';\n  }\n  return start[1] - end[1] > 0 ? 'west' : 'east';\n};\n\nvar getDistance = (start = [], end = []) => {\n  var diffVertical = Math.abs(start[0] - end[0]);\n  var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  return diffHorizontal + diffVertical;\n};\n\nvar fastGetDirection = (start = [], end = []) => {\n  var diffVertical = Math.abs(start[0] - end[0]);\n  // var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  if (diffVertical) {\n    return start[0] - end[0] > 0 ? 'north' : 'south';\n  }\n  return start[1] - end[1] > 0 ? 'west' : 'east';\n};\n\nvar isVisible = (originalPosition = [], finalPosition = [], direction = []) => {\n  switch (direction) {\n    case DIRECTIONS[0]:\n      return originalPosition[1] === finalPosition[1] && originalPosition[0] > finalPosition[0];\n    case DIRECTIONS[1]:\n      return originalPosition[0] === finalPosition[0] && originalPosition[1] < finalPosition[1];\n    case DIRECTIONS[2]:\n      return originalPosition[1] === finalPosition[1] && originalPosition[0] < finalPosition[0];\n    case DIRECTIONS[3]:\n      return originalPosition[0] === finalPosition[0] && originalPosition[1] > finalPosition[1];\n    default:\n      break;\n  }\n};\n\nvar canKill = (currentPlayerState = {}, enemiesStates = []) => {\n  return enemiesStates.some(enemyObject => {\n    return enemyObject.isAlive &&\n      isVisible(currentPlayerState.position, enemyObject.position, currentPlayerState.direction);\n  });\n};\n\nmodule.exports = {\n  randomMove,\n  getDirection,\n  isVisible,\n  canKill,\n  safeRandomMove,\n  fastGetDirection,\n  turn,\n  getDistance\n};\n","var digits = '0123456789';\nvar lowercase = 'abcdefghijklmnoprstuvxuyz';\nvar uppercase = lowercase.toUpperCase();\nvar special = '+/';\nvar base64Chars;\nvar base62Chars;\nvar base32Chars;\nvar generateBaseString;\n\nmodule.exports = (exports = {});\n\nbase64Chars = function() {\n  return [digits, lowercase, uppercase, special].join('');\n};\n\nbase62Chars = function() {\n  return [digits, lowercase, uppercase].join('');\n};\n\nbase32Chars = function() {\n  return [uppercase, digits].join('');\n};\n\ngenerateBaseString = function(pool, length) {\n  var output = '';\n  var i;\n\n  for (i = 0; i < length; i += 1) {\n    output += pool[Math.ceil(Math.random() * 100 % pool.length || 1) - 1];\n  }\n\n  return output;\n};\n\nexports.generateBase64String = function(length) {\n  return generateBaseString(base64Chars(), length);\n};\n\nexports.generateBase62String = function(length) {\n  return generateBaseString(base62Chars(), length);\n};\n\nexports.generateBase32String = function(length) {\n  return generateBaseString(base32Chars(), length);\n};\n\nexports.generateBase10String = function(length) {\n  return generateBaseString(digits, length);\n};\n","var _ = require(\"lodash\");\nvar utils = require(\"../lib/utils.js\");\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nvar safeMovement = (value, size) => {\n  if (value < 0) return 0;\n  if (value > size - 1) return size - 1;\n  return value;\n};\n\nvar clashCoreUtils = data => {\n  var { playerIndex, playerAction, playerStates, playerInstances, gameEnvironment, evtCallback, coreCallback } = data;\n  var currentPlayerState = playerStates[playerIndex];\n\n  if (DIRECTIONS.indexOf(playerAction) !== -1) {\n    currentPlayerState.direction = playerAction;\n    return playerStates;\n  }\n\n  if (playerAction === \"move\") {\n    switch (currentPlayerState.direction) {\n      case DIRECTIONS[0]:\n        currentPlayerState.position[0]--;\n        break;\n      case DIRECTIONS[1]:\n        currentPlayerState.position[1]++;\n        break;\n      case DIRECTIONS[2]:\n        currentPlayerState.position[0]++;\n        break;\n      case DIRECTIONS[3]:\n        currentPlayerState.position[1]--;\n        break;\n      default:\n        break;\n    }\n\n    // prevent the player to go over the world\n    currentPlayerState.position[0] = safeMovement(currentPlayerState.position[0], gameEnvironment.gridSize);\n    currentPlayerState.position[1] = safeMovement(currentPlayerState.position[1], gameEnvironment.gridSize);\n\n    // check if the player collected ammo\n    gameEnvironment.ammoPosition.forEach((el, index) => {\n      if (el[0] === currentPlayerState.position[0] && el[1] === currentPlayerState.position[1]) {\n        gameEnvironment.ammoPosition.splice(index, 1);\n        currentPlayerState.ammo += 1;\n      }\n    });\n  }\n\n  if (playerAction === \"shoot\" && currentPlayerState.ammo > 0) {\n    currentPlayerState.ammo -= 1;\n\n    let kills = [];\n    let survivors = [];\n    evtCallback(\"SHOOT\", {\n      shooter: playerIndex,\n      origin: currentPlayerState.position,\n      direction: currentPlayerState.direction\n    });\n\n    playerStates.forEach((enemyObject, enemyIndex) => {\n      if (\n        enemyObject.isAlive &&\n        utils.isVisible(currentPlayerState.position, enemyObject.position, currentPlayerState.direction)\n      ) {\n        kills.push(enemyIndex);\n        enemyObject.isAlive = false;\n      }\n    });\n\n    if (kills.length) {\n      survivors = _.filter(playerStates, player => player.isAlive);\n      coreCallback(\"KILL\", {\n        killer: playerInstances[playerIndex],\n        killed: _.map(kills, index => playerInstances[index])\n      });\n      evtCallback(\"KILL\", {\n        killer: playerIndex,\n        killed: kills\n      });\n\n      if (!survivors.length) {\n        coreCallback(\"DRAW\");\n        evtCallback(\"DRAW\");\n      }\n\n      if (survivors.length === 1) {\n        coreCallback(\"WIN\", {\n          winner: playerInstances[playerIndex]\n        });\n        evtCallback(\"WIN\", {\n          winner: playerInstances[playerIndex]\n        });\n      }\n    }\n  }\n\n  return playerStates;\n};\n\nmodule.exports = clashCoreUtils;\n","module.exports = {\n  // codingpains: require('./players/codingpains.js'),\n  manuelmhtr: require('./players/manuelmhtr.js'),\n  // ericku: require('./players/ericku.js'),\n  siegfried: require('./players/siegfried.js'),\n  horror: require('./players/horror.js'),\n  elperron: require('./players/elperron.js'),\n  // yuno: require('./players/yuno.js'),\n  xmontoya: require('./players/xmontoya.js'),\n  margeux: require('./players/margeux.js')\n};\n","var utils = require('../lib/utils.js');\nvar ORIENTATION = {north: 'vertical', east: 'horizontal', south: 'vertical', west: 'horizontal'};\n\nvar manuelmhtr = {\n  info: {\n    name: 'Manuelmhtr',\n    style: 3\n  },\n  ai: function(playerState, enemiesStates, gameEnvironment) {\n    var response;\n    var enemies = [];\n    var params = {\n      vulnerabilityLevel: null,\n      canKill: null,\n      nearestAmmo: null,\n      nearestEnemy: null,\n      canMove: null\n    };\n\n    // Parse enemies\n    enemiesStates.forEach(function(enemy) {\n      if (enemy.isAlive === true) {\n        enemy.nearestAmmoDistance = calculateDistanceToNearestAmmo(enemy.position);\n        enemies.push(enemy);\n      }\n    });\n\n    // Process parameters\n    params.vulnerabilityLevel = calculateVulnerabilityLevel(playerState.position);\n    params.canKill = playerState.ammo > 0 && utils.canKill(playerState, enemiesStates);\n    params.nearestAmmo = getNearestAmmo(playerState.position);\n    params.nearestEnemy = getNearestEnemy(playerState.position);\n    params.canMove = canMove(playerState.position, playerState.direction);\n\n    function calculateVulnerabilityLevel(targetPosition) {\n      var vulnerabilityLevel = 0.0;\n      enemies.forEach(function(enemy) {\n        if (utils.isVisible(enemy.position, targetPosition, enemy.direction) && enemy.ammo > 0) {\n          vulnerabilityLevel = Math.max(vulnerabilityLevel, 1.0);\n        } else if (isAligned(enemy.position, targetPosition) && (enemy.ammo > 0 || enemy.nearestAmmoDistance === 1)) {\n          vulnerabilityLevel = Math.max(vulnerabilityLevel, 0.5);\n        }\n      });\n\n      if (vulnerabilityLevel === 0.0) {\n        // Check if other enemies are near\n        var northEast = [targetPosition[0] + 1, targetPosition[1] + 1];\n        var southWest = [targetPosition[0] - 1, targetPosition[1] - 1];\n        enemies.forEach(function(enemy) {\n          if (enemy.ammo > 0) {\n            if (isAligned(enemy.position, northEast) || isAligned(enemy.position, southWest)) {\n              vulnerabilityLevel = Math.max(vulnerabilityLevel, 0.25);\n            }\n          }\n        });\n      }\n\n      return vulnerabilityLevel;\n    }\n\n    function isAligned(originalPosition, finalPosition) {\n      var aligned = false;\n      aligned = aligned || originalPosition[1] === finalPosition[1] && originalPosition[0] > finalPosition[0];\n      aligned = aligned || originalPosition[0] === finalPosition[0] && originalPosition[1] < finalPosition[1];\n      aligned = aligned || originalPosition[1] === finalPosition[1] && originalPosition[0] < finalPosition[0];\n      aligned = aligned || originalPosition[0] === finalPosition[0] && originalPosition[1] > finalPosition[1];\n      return aligned;\n    }\n\n    function getNearestAmmo(position) {\n      var nearestAmmo = null;\n      var nearestDistance = null;\n      gameEnvironment.ammoPosition.forEach(function(ammo) {\n        var distance = utils.getDistance(position, ammo);\n        if (nearestDistance === null || distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestAmmo = {\n            position: ammo,\n            distance: nearestDistance\n          };\n        }\n      });\n      return nearestAmmo;\n    }\n\n    function calculateDistanceToNearestAmmo(position) {\n      var nearestDistance = null;\n      gameEnvironment.ammoPosition.forEach(function(ammo) {\n        var distance = utils.getDistance(position, ammo);\n        if (nearestDistance === null || distance < nearestDistance) {\n          nearestDistance = distance;\n        }\n      });\n      return nearestDistance;\n    }\n\n    function getNearestEnemy(position) {\n      var nearestEnemy = null;\n      var nearestDistance = null;\n      enemies.forEach(function(enemy) {\n        var distance = calculateEnemyDistance(position, enemy);\n\n        if (nearestDistance === null || distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestEnemy = {\n            instance: enemy,\n            distance: nearestDistance\n          };\n        }\n      });\n      return nearestEnemy;\n    }\n\n    function calculateEnemyDistance(position, enemy) {\n      var diffVertical = Math.abs(position[0] - enemy.position[0]);\n      var diffHorizontal = Math.abs(position[1] - enemy.position[1]);\n      return Math.min(diffHorizontal, diffVertical);\n    }\n\n    function defend() {\n      if (params.vulnerabilityLevel === 1.0) {\n        var canRun = params.canMove;\n        var attacker;\n\n        // Find attacker\n        enemies.forEach(function(enemy) {\n          if (enemy.ammo > 0 && utils.isVisible(enemy.position, playerState.position, enemy.direction)) {\n            attacker = enemy;\n          }\n        });\n\n        // Check if can run\n        if (attacker && ORIENTATION[attacker.direction] === ORIENTATION[playerState.direction]) {\n          canRun = false;\n        }\n\n        if (canRun) {\n          return 'move';\n        } else if (attacker && playerState.ammo > 0) {\n          // Counterattack\n          return huntEnemy(attacker);\n        } else {\n          return getSafestDirection();\n        }\n      } else {\n        return getSafestDirection();\n      }\n    }\n\n    function getSafestDirection() {\n      var safestDirection = playerState.direction;\n      var lowestVulnerability = params.vulnerabilityLevel;\n      var maxDistanceLeft = 0;\n\n      var options = [{\n          direction: 'north',\n          position: [playerState.position[0] - 1, playerState.position[1]]\n        }, {\n          direction: 'east',\n          position: [playerState.position[0], playerState.position[1] + 1]\n        }, {\n          direction: 'south',\n          position: [playerState.position[0] + 1, playerState.position[1]]\n        }, {\n          direction: 'west',\n          position: [playerState.position[0], playerState.position[1] - 1]\n        }\n      ];\n\n      // Process options\n      options.forEach(function(option) {\n        option.vulnerability = calculateVulnerabilityLevel(option.position);\n        option.distanceLeft = calculateDistanceLeft(option.direction);\n        option.canMove = canMove(playerState.position, option.direction);\n        var isBetterOption = option.vulnerability < lowestVulnerability || (option.vulnerability === lowestVulnerability && option.distanceLeft > maxDistanceLeft);\n        if (option.canMove && isBetterOption) {\n          safestDirection = option.direction;\n          lowestVulnerability = option.vulnerability;\n          maxDistanceLeft = option.distanceLeft;\n        }\n      });\n\n      if (safestDirection === playerState.direction) {\n        return moveSafely();\n      } else {\n        return safestDirection;\n      }\n\n      function calculateDistanceLeft(direction) {\n        if (direction === 'north') {\n          return playerState.position[0];\n        } else if (direction === 'east') {\n          return gameEnvironment.gridSize - playerState.position[1];\n        } else if (direction === 'south') {\n          return gameEnvironment.gridSize - playerState.position[0];\n        } else if (direction === 'west') {\n          return playerState.position[1];\n        }\n      }\n    }\n\n    function canMove(position, direction) {\n      if (direction === 'north') {\n        return position[0] > 0;\n      } else if (direction === 'east') {\n        return position[1] < gameEnvironment.gridSize;\n      } else if (direction === 'south') {\n        return position[0] < gameEnvironment.gridSize;\n      } else if (direction === 'west') {\n        return position[1] > 0;\n      }\n    }\n\n    function attack() {\n      return 'shoot';\n    }\n\n    function moveWisely() {\n      if (playerState.ammo === 0 && params.nearestAmmo) {\n        return getAmmo(params.nearestAmmo.position);\n      } else if (playerState.ammo > 0 && params.nearestEnemy) {\n        if (params.nearestAmmo && params.nearestAmmo.distance < params.nearestEnemy.distance) {\n          return getAmmo(params.nearestAmmo.position);\n        } else {\n          return huntEnemy(params.nearestEnemy.instance);\n        }\n      } else {\n        return getSafestDirection();\n      }\n    }\n\n    function huntEnemy(enemy) {\n      if (utils.isVisible(playerState.position, enemy.position, playerState.direction)) {\n        return attack();\n      } else {\n        var attackDirection = getAttackDirection();\n        var enemyDistance = calculateEnemyDistance(playerState.position, enemy);\n\n        if (attackDirection === playerState.direction && (enemyDistance > 1 || enemy.ammo === 0)) {\n          return 'move';\n        } else {\n          return attackDirection;\n        }\n      }\n\n      function getAttackDirection() {\n        var isEnemyAligned = isAligned(playerState.position, enemy.position);\n        var enemyOrientation = ORIENTATION[enemy.direction];\n\n        if (isEnemyAligned) {\n          return utils.fastGetDirection(playerState.position, enemy.position);\n        } else {\n          if (enemyOrientation === 'vertical') {\n            return enemy.position[1] > playerState.position[1] ? 'east' : 'west';\n          } else {\n            return enemy.position[0] > playerState.position[0] ? 'south' : 'north';\n          }\n        }\n      }\n    }\n\n    function moveSafely() {\n      var destination;\n      var vulnerabilityOnMove;\n\n      if (playerState.direction === 'north') {\n        destination = [playerState.position[0] - 1, playerState.position[1]];\n      } else if (playerState.direction === 'east') {\n        destination = [playerState.position[0], playerState.position[1] + 1];\n      } else if (playerState.direction === 'south') {\n        destination = [playerState.position[0] + 1, playerState.position[1]];\n      } else if (playerState.direction === 'west') {\n        destination = [playerState.position[0], playerState.position[1] - 1];\n      }\n\n      vulnerabilityOnMove = calculateVulnerabilityLevel(destination);\n\n      if (vulnerabilityOnMove === 1.0) {\n        return null;\n      } else {\n        return 'move';\n      }\n    }\n\n    function getAmmo(ammoPosition) {\n      // Get direction to turn\n      var goToDirection = utils.fastGetDirection(playerState.position, ammoPosition);\n\n      // If same direction, move\n      if (goToDirection === playerState.direction) {\n        return moveSafely();\n      } else {\n        return goToDirection;\n      }\n    }\n\n    // Decide movement\n    if (params.vulnerabilityLevel === 1.0 || params.vulnerabilityLevel >= 0.5 && params.canKill !== true) {\n      response = defend();\n    } else if (params.canKill === true) {\n      response = attack();\n    } else {\n      response = moveWisely();\n    }\n    return response;\n\n  }\n};\n\nmodule.exports = manuelmhtr;\n","var utils = require('../lib/utils.js');\n\nvar siegfried = {\n  info: {\n    name: 'Siegfried',\n    style: 4\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.getDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.randomMove();\n  }\n};\n\nmodule.exports = siegfried;\n","var utils = require('../lib/utils.js');\n\nvar MUSOLINI = {\n  info: {\n    name: 'Horror',\n    style: 10\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = MUSOLINI;\n","/**\r\n * Created by Roberto Alvarez on 7/29/2015.\r\n */var utils = require('../lib/utils.js'),\r\n    currentDirection = 0,\r\n    oldBestAmo = null,\r\n    directions = {\r\n        1: 'north',\r\n        2: 'east',\r\n        3: 'south',\r\n        4: 'west'\r\n    },\r\n    turnsComplete = 0,\r\n    ElPerron = {\r\n        info: {\r\n            name: 'ElPerron',\r\n            style: 7\r\n        },\r\n        ai: (playerState, enemiesStates, gameEnvironment) => {\r\n            var directionToTarget,\r\n                /**\r\n                 * Devuelve la direcci�n del amo mas cercano en base a la posici�n actual de la\r\n                 * nave\r\n                 * @returns {*}\r\n                 */\r\n                getBestAmmo = () => {\r\n                    var myPosition = playerState.position,\r\n                        distanceMin = 22,\r\n                        ammoMin = null;\r\n                    for (var amIndex in gameEnvironment.ammoPosition) {\r\n                        var ammo = gameEnvironment.ammoPosition[amIndex];\r\n                        var difXbyMe = Math.abs(myPosition[1] - ammo[1]),\r\n                            difYbyMe = Math.abs(myPosition[0] - ammo[0]),\r\n                            distanceByMe = difXbyMe + difYbyMe;\r\n\r\n                        if (distanceByMe < distanceMin) {\r\n                            distanceMin = distanceByMe;\r\n                            ammoMin = ammo;\r\n                        }\r\n                    }\r\n\r\n                    return ammoMin;\r\n                },\r\n                /**\r\n                 * Devuelve n�mero de enemigos vivos\r\n                 * @returns {number}\r\n                 */\r\n                getCountEnemiesAlive = () => {\r\n                    var countEnemies = 0;\r\n\r\n                    for (var enIndex in enemiesStates) {\r\n                        var enemy = enemiesStates[enIndex];\r\n\r\n                        if (enemy.isAlive) {\r\n                            countEnemies++;\r\n                        }\r\n                    }\r\n\r\n                    return countEnemies;\r\n                },\r\n                /**\r\n                 * Devuelve si la nave esta posicionada en el mismo lugar que el ammo\r\n                 * @param ammo\r\n                 * @returns {boolean}\r\n                 */\r\n                isOnAmmo = (ammo) => {\r\n                    if (ammo == null) {\r\n                        return false;\r\n                    }\r\n                    return ammo[0] == playerState.position[0] &&\r\n                        ammo[1] == playerState.position[1];\r\n                };\r\n\r\n            // Hasta la vista baby !!!\r\n            if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\r\n                return 'shoot';\r\n            }\r\n\r\n            if (playerState.ammo == 0 || turnsComplete == 1) {\r\n                var toPosition = getBestAmmo();\r\n\r\n                // Si tengo los suficientes disparos para eliminar a todos los enemigos\r\n                // me dirijo hacia ellos\r\n                // if (playerState.ammo >= getCountEnemiesAlive()) {\r\n                //     toPosition = enemiesStates[0].position;\r\n                // }\r\n\r\n                directionToTarget = utils.getDirection(playerState.position, toPosition);\r\n\r\n                if (isOnAmmo(oldBestAmo)) {\r\n                    turnsComplete = 0;\r\n                }\r\n\r\n                // Guardo referencia de la posicion a la que me dirigi anteriormente\r\n                oldBestAmo = toPosition;\r\n\r\n                // Si ya se movio, cambio mi direcci�n\r\n                if (directionToTarget !== playerState.direction) {\r\n                    return directionToTarget;\r\n                }\r\n\r\n                return 'move';\r\n            }\r\n            else {\r\n                // Si tiene armas lo hago girar\r\n                currentDirection++;\r\n                if (currentDirection > 4) {\r\n                    currentDirection = 1;\r\n                    turnsComplete++;\r\n                }\r\n\r\n                return directions[currentDirection];\r\n            }\r\n\r\n            return utils.randomMove();\r\n        }\r\n    };\r\n\r\nmodule.exports = ElPerron;\r\n","var utils = require('../lib/utils.js');\n\nvar xmontoya = {\n  info: {\n    name: 'Xmontoya89',\n    style: 1\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return utils.safeRandomMove();\n    }\n\n    return 'move';\n  }\n};\n\nmodule.exports = xmontoya;\n","var utils = require('../lib/utils.js');\nvar noAmmo = true;\nvar margeux = {\n  info: {\n    name: 'margeux',\n    style: 5\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n    var directionToEnemy;\n    if (playerState.ammo >0){\n      noAmmo = false;\n    }\n    if (playerState.ammo == 0){\n      noAmmo= true;\n    }\n\n    if (gameEnvironment.ammoPosition.length && noAmmo) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n\n    //LOOK for an enemy\n    if(!noAmmo){\n      directionToEnemy = utils.fastGetDirection(playerState.position, enemiesStates[0].position);\n      if (directionToEnemy !== playerState.direction){\n        var directionToMargeus = utils.fastGetDirection(enemiesStates[0].position, playerState.position);\n        if (directionToMargeus !== enemiesStates[0].position){\n                  return directionToEnemy;\n        }else{\n                  return utils.safeRandomMove();\n        }\n      }\n      if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n      }else{\n        return utils.safeRandomMove();\n      }\n    }\n\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n    if (gameEnvironment.ammoPosition.length ) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = margeux;\n","import React from \"react\";\n\nclass Tiles extends React.Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    var { gridSize } = this.props;\n\n    var tileSize = 100 / gridSize;\n    var i;\n\n    var tileRender = [];\n    for (i = 0; i < gridSize * gridSize; i++) {\n      tileRender.push(\n        <div style={{ height: tileSize + \"vmin\", width: tileSize + \"vmin\" }} className=\"clash-tile\" key={i} />\n      );\n    }\n\n    return <div>{tileRender}</div>;\n  }\n}\n\nexport default Tiles;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nclass Ammos extends React.Component {\n  render() {\n    var { gridSize, ammoPosition } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var ammoRender = _.map(ammoPosition, (ammoPos, ammoIndex) => {\n      return (\n        <div\n          key={ammoIndex}\n          className=\"clash-ammo\"\n          style={{\n            top: tileSize * ammoPos[0] + \"vmin\",\n            left: tileSize * ammoPos[1] + \"vmin\",\n            width: tileSize + \"vmin\",\n            height: tileSize + \"vmin\"\n          }}\n        />\n      );\n    });\n\n    return <div className=\"clash-layer animation-glow\">{ammoRender}</div>;\n  }\n}\n\nexport default Ammos;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nclass Players extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerDirections: props.playerStates.map(el => DIRECTIONS.indexOf(el.direction))\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var playerDirections = this.state.playerDirections;\n    var newPlayerDirections = nextProps.playerStates.map(el => DIRECTIONS.indexOf(el.direction));\n\n    this.setState({\n      playerDirections: newPlayerDirections.map((el, index) => {\n        var diff = ((el + 4) % 4) - ((playerDirections[index] + 4) % 4);\n        if (diff === 3) diff = -1;\n        if (diff === -3) diff = 1;\n\n        return playerDirections[index] + diff;\n      })\n    });\n  }\n\n  render() {\n    var { playerDirections } = this.state;\n    var { gridSize, playerStates, playerInstances } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var playerRender = _.map(playerStates, (playerData, playerIndex) => {\n      if (!playerData.isAlive) return null;\n\n      var playerInfo = playerInstances[playerIndex].getInfo();\n\n      return (\n        <div\n          key={playerIndex}\n          className=\"clash-player-container\"\n          style={{\n            width: tileSize + \"vmin\",\n            height: tileSize + \"vmin\",\n            transform:\n              \"translateY(\" +\n              tileSize * playerData.position[0] +\n              \"vmin) \" +\n              \"translateX(\" +\n              tileSize * playerData.position[1] +\n              \"vmin)\"\n          }}>\n          <div\n            className=\"clash-player\"\n            style={{\n              width: tileSize + \"vmin\",\n              height: tileSize + \"vmin\",\n              backgroundImage: \"url(static/rockets/rocket\" + (playerData.style || 0) + \".png)\",\n              transform: \"scale(1.25) \" + \"rotate(\" + 90 * playerDirections[playerIndex] + \"deg) \"\n            }}\n          />\n          <div className=\"clash-player-name\">{playerInfo.name}</div>\n        </div>\n      );\n    });\n\n    return <div className=\"clash-layer\">{playerRender}</div>;\n  }\n}\n\nexport default Players;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nclass Stats extends React.Component {\n  render() {\n    let { stats, rounds, total } = this.props;\n    stats = _.map(stats, playerStats => playerStats);\n    stats = _.sortBy(stats, playerStats => playerStats.wins * -1);\n    return (\n      <div className=\"stats\">\n        <div className=\"stats-title\">\n          Round {rounds} of {total}\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th />\n              <th />\n              <th>Wins</th>\n            </tr>\n          </thead>\n          <tbody>\n            {_.map(stats, (playerStats, index) => {\n              return (\n                <tr key={index} className={playerStats.isAlive ? \"\" : \"player-dead\"}>\n                  <td>{playerStats.isAlive ? \"\" : \"💀\"}</td>\n                  <td className=\"player-name\">{playerStats.name}</td>\n                  <td className=\"stats-results\">{playerStats.wins}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nclass Shoots extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return nextProps.shoots.length !== this.props.shoots.length;\n  }\n\n  render() {\n    var { shoots, gridSize } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var shootsRender = _.map(shoots, (el, index) => {\n      return (\n        <div\n          key={index}\n          className=\"clash-shoot animation-shot\"\n          style={{\n            top: tileSize * el.origin[0] + \"vmin\",\n            left: tileSize * el.origin[1] + \"vmin\",\n            transform:\n              \"translatex(\" +\n              tileSize / 2 +\n              \"vmin) \" +\n              \"translatey(\" +\n              tileSize / 2 +\n              \"vmin) \" +\n              \"rotate(\" +\n              (DIRECTIONS.indexOf(el.direction) - 1) * 90 +\n              \"deg) \"\n          }}\n        />\n      );\n    });\n\n    return <div className=\"clash-layer\">{shootsRender}</div>;\n  }\n}\n\nexport default Shoots;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nclass Notifications extends React.Component {\n  render() {\n    var { kills } = this.props;\n    var date = new Date();\n\n    _.remove(kills, k => date - k.date > 3000);\n    kills = _.sortBy(kills, k => k.date.valueOf);\n    return (\n      <div className=\"notifications\">\n        {_.map(kills, (k, idx) => {\n          return <p key={idx}>{k.text}</p>;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Notifications;\n","import fx from \"./../lib/sound-effects\";\nimport generateId from \"./../lib/string-tools\";\n\nclass PlayerClass {\n  constructor(options) {\n    this._id = generateId.generateBase32String(8);\n    this._playerInfo = options.info;\n    this._playerAI = options.ai;\n  }\n\n  getId() {\n    return this._id;\n  }\n\n  getInfo() {\n    return this._playerInfo;\n  }\n\n  getName() {\n    return this._playerInfo.name;\n  }\n\n  playExplosion() {\n    var i = Math.round(Math.random() * 10) % 3;\n    fx.explosions[\"explode\" + i].play();\n  }\n\n  execute(playerState, enemiesStates, gameEnvironment) {\n    try {\n      return this._playerAI(playerState, enemiesStates, gameEnvironment);\n    } catch (e) {\n      console.error(\"!\", e);\n    }\n  }\n}\n\nexport default PlayerClass;\n","import _ from \"lodash\";\n\nimport PlayerClass from \"./PlayerClass.js\";\nimport executeMovementHelper from \"./executeMovementHelper.js\";\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nconst SUDDEN_DEATH_TURN = 60;\n\nclass ClashJS {\n  constructor(playerDefinitionArray, currentStats) {\n    const clashjsTarget = class ClashJSTarget extends EventTarget {};\n    this.target = new clashjsTarget();\n\n    this._totalRounds = playerDefinitionArray.length * 2 + 8;\n    this._rounds = 0;\n    this._gameStats = currentStats || {};\n    this._evtCallback = (msg, data) => {\n      this.target.dispatchEvent(new CustomEvent(\"DATA\", { detail: { name: msg, data: data } }));\n    };\n    this._alivePlayerCount = 0;\n    this._suddenDeathCount = 0;\n    this._playerInstances = playerDefinitionArray.map(playerDefinition => {\n      let player = new PlayerClass(playerDefinition);\n      this._gameStats[player.getId()] = {\n        name: player.getName(),\n        deaths: 0,\n        kills: 0,\n        kdr: 0,\n        wins: 0,\n        winrate: 0\n      };\n      return player;\n    });\n\n    this.setupGame();\n  }\n\n  _getAlivePlayerCount() {\n    return this._playerStates.reduce((result, el) => {\n      return el.isAlive ? result + 1 : result;\n    }, 0);\n  }\n\n  setupGame() {\n    this._gameEnvironment = {\n      gridSize: 13,\n      ammoPosition: []\n    };\n    this._rounds++;\n    this._suddenDeathCount = 0;\n    this._playerInstances = _.shuffle(this._playerInstances);\n    this._alivePlayerCount = this._playerInstances.length;\n    this._playerStates = this._playerInstances.map(playerInstance => {\n      let gridSize = this._gameEnvironment.gridSize;\n      return {\n        style: playerInstance.getInfo().style,\n        position: [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)],\n        direction: DIRECTIONS[Math.floor(Math.random() * 4)],\n        ammo: 0,\n        isAlive: true\n      };\n    });\n\n    this._currentPlayer = 0;\n    this._createAmmo();\n  }\n\n  _createAmmo() {\n    var newAmmoPosition = [\n      Math.floor(Math.random() * this._gameEnvironment.gridSize),\n      Math.floor(Math.random() * this._gameEnvironment.gridSize)\n    ];\n\n    if (\n      this._gameEnvironment.ammoPosition.some(el => {\n        return el[0] === newAmmoPosition[0] && el[1] === newAmmoPosition[1];\n      })\n    ) {\n      this._createAmmo();\n      return;\n    }\n\n    this._gameEnvironment.ammoPosition.push(newAmmoPosition);\n  }\n\n  getState() {\n    return {\n      gameEnvironment: this._gameEnvironment,\n      gameStats: this._gameStats,\n      rounds: this._rounds,\n      totalRounds: this._totalRounds,\n      playerStates: this._playerStates,\n      playerInstances: this._playerInstances\n    };\n  }\n\n  nextPly() {\n    if (this._suddenDeathCount > SUDDEN_DEATH_TURN * this._getAlivePlayerCount()) {\n      this._evtCallback(\"DRAW\");\n      this._handleCoreAction(\"DRAW\");\n    }\n    let clonedStates = _.cloneDeep(this._playerStates, true);\n\n    if (this._getAlivePlayerCount() < 2) {\n      this._suddenDeathCount += 10;\n    }\n\n    if (this._getAlivePlayerCount() < 3) {\n      this._suddenDeathCount++;\n    }\n\n    var otherPlayers = clonedStates.filter((currentEnemyFilter, index) => {\n      if (index === this._currentPlayer) return false;\n      return currentEnemyFilter.isAlive;\n    });\n\n    if (this._playerStates[this._currentPlayer].isAlive) {\n      this._savePlayerAction(\n        this._currentPlayer,\n        this._playerInstances[this._currentPlayer].execute(\n          clonedStates[this._currentPlayer],\n          otherPlayers,\n          _.cloneDeep(this._gameEnvironment, true)\n        )\n      );\n    }\n\n    this._currentPlayer = (this._currentPlayer + 1) % this._playerInstances.length;\n\n    if (this._gameEnvironment.ammoPosition.length < this._playerStates.length / 1.2 && Math.random() > 0.92) {\n      this._createAmmo();\n    }\n\n    if (Math.random() > 0.99) {\n      this._createAmmo();\n    }\n\n    return this.getState();\n  }\n\n  _handleCoreAction(action, data) {\n    if (action === \"KILL\") {\n      let { killer, killed } = data;\n      this._gameStats[killer.getId()].kills++;\n      _.forEach(this._playerInstances, player => {\n        let stats = this._gameStats[player.getId()];\n        if (killed.indexOf(player) > -1) {\n          this._alivePlayerCount--;\n          stats.deaths++;\n        }\n        if (stats.deaths) {\n          stats.kdr = stats.kills / stats.deaths;\n        } else {\n          stats.kdr = stats.kills;\n        }\n      });\n      this._suddenDeathCount = 0;\n    }\n    if (action === \"WIN\") {\n      this._gameStats[data.winner.getId()].wins++;\n      _.forEach(this._gameStats, (playerStats, key) => {\n        let { wins, winrate } = playerStats;\n        playerStats.winrate = Math.round((wins * 100) / this._rounds);\n      });\n\n      if (this._rounds >= this._totalRounds) {\n        return this._evtCallback(\"END\");\n      }\n    }\n    if (action === \"DRAW\") {\n      _.forEach(this._gameStats, (playerStats, key) => {\n        let { wins, winrate } = playerStats;\n        playerStats.winrate = Math.round((wins * 100) / this._rounds);\n      });\n      if (this._rounds >= this._totalRounds) {\n        return this._evtCallback(\"END\");\n      }\n    }\n  }\n\n  _savePlayerAction(playerIndex, playerAction) {\n    this._playerStates = executeMovementHelper({\n      playerIndex: playerIndex,\n      playerAction: playerAction,\n      playerStates: this._playerStates,\n      playerInstances: this._playerInstances,\n      gameEnvironment: this._gameEnvironment,\n      evtCallback: this._evtCallback,\n      coreCallback: this._handleCoreAction.bind(this)\n    });\n  }\n}\n\nexport default ClashJS;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport fx from \"./../lib/sound-effects\";\nimport Tiles from \"./Tiles.jsx\";\nimport Ammos from \"./Ammos.jsx\";\nimport Players from \"./Players.jsx\";\nimport Stats from \"./Stats.jsx\";\nimport Shoots from \"./Shoots.jsx\";\nimport Notifications from \"./Notifications.jsx\";\n\nimport ClashJS from \"../clashjs/ClashCore.js\";\n\nimport playerObjects from \"../Players.js\";\nvar playerArray = _.shuffle(_.map(playerObjects, el => el));\n\nvar killsStack = [];\n\nwindow.ClashInstance = new ClashJS(playerArray, {});\nconst DEFAULT_SPEED = 100;\nconst MAX_SPEED = 50;\n\nclass Clash extends React.Component {\n  constructor(props) {\n    super(props);\n\n    window.ClashInstance.target.addEventListener(\"DATA\", evt => {\n      this.handleEvent(evt.detail.name, evt.detail.data);\n    });\n\n    this.state = {\n      clashjs: window.ClashInstance.getState(),\n      shoots: [],\n      speed: DEFAULT_SPEED,\n      kills: [],\n      currentGameIndex: 1,\n      finished: false\n    };\n  }\n\n  componentDidMount() {\n    this.nextTurn();\n  }\n\n  handleClick() {\n    this.setState({\n      speed: Math.floor(this.state.speed * 0.9)\n    });\n  }\n\n  newGame() {\n    killsStack = [];\n\n    if (this.nextTurnTimeout) clearTimeout(this.nextTurnTimeout);\n\n    window.ClashInstance.setupGame();\n\n    this.setState(\n      state => {\n        return {\n          clashjs: window.ClashInstance.getState(),\n          speed: DEFAULT_SPEED,\n          kills: [],\n          currentGameIndex: state.currentGameIndex + 1\n        };\n      },\n      () => {\n        if (this.nextTurnTimeout) clearTimeout(this.nextTurnTimeout);\n        window.setTimeout(() => {\n          this.nextTurn();\n        }, 50);\n      }\n    );\n  }\n\n  nextTurn() {\n    if (this.state.finished) return;\n\n    var currentGameIndex = this.state.currentGameIndex;\n\n    if (this.nextTurnTimeout) clearTimeout(this.nextTurnTimeout);\n\n    this.nextTurnTimeout = window.setTimeout(() => {\n      if (this.state.currentGameIndex !== currentGameIndex) return;\n\n      var { playerStates } = window.ClashInstance.getState();\n      var alivePlayerCount = playerStates.reduce((result, el) => {\n        return el.isAlive ? result + 1 : result;\n      }, 0);\n\n      if (alivePlayerCount < 2) {\n        window.ClashInstance.nextPly();\n        this.nextTurn();\n        return;\n      }\n\n      window.ClashInstance.nextPly();\n\n      this.setState(\n        {\n          clashjs: window.ClashInstance.getState(),\n          speed: this.state.speed > MAX_SPEED ? parseInt(this.state.speed * 0.99, 10) : MAX_SPEED\n        },\n        this.nextTurn\n      );\n    }, this.state.speed);\n  }\n\n  handleEvent(evt, data) {\n    if (evt === \"SHOOT\") {\n      let newShoots = this.state.shoots;\n      newShoots.push({\n        direction: data.direction,\n        origin: data.origin.slice(),\n        time: new Date().getTime()\n      });\n\n      this.setState({\n        shoots: newShoots\n      });\n    }\n    if (evt === \"WIN\") return this.newGame();\n    if (evt === \"DRAW\") return this.newGame();\n    if (evt === \"KILL\") return this._handleKill(data);\n    if (evt === \"END\") return this.endGame();\n  }\n\n  _handleKill(data) {\n    let players = window.ClashInstance.getState().playerInstances;\n    let kills = this.state.kills;\n    let killer = players[data.killer];\n    let killed = _.map(data.killed, index => {\n      killsStack.push(data.killer);\n      killer.kills++;\n      players[index].deaths++;\n      return players[index];\n    });\n    let notification = [killer.getName(), \"killed\", _.map(killed, player => player.getName()).join(\",\")].join(\" \");\n\n    kills.push({ date: new Date(), text: notification });\n    this.setState({\n      kills: kills\n    });\n\n    setTimeout(() => this.handleStreak(data.killer, killer, killed), 100);\n  }\n\n  endGame() {\n    this.setState({\n      clashjs: window.ClashInstance.getState(),\n      shoots: [],\n      speed: 0,\n      kills: [],\n      finished: true\n    });\n  }\n\n  handleStreak(index, killer, killed) {\n    let streakCount = _.filter(killsStack, player => player === index).length;\n    let multiKill = \"\";\n    let spreeMessage = \"\";\n    let kills = this.state.kills;\n    if (killsStack.length === 1) {\n      setTimeout(fx.streak.firstBlood.play(), 50);\n    }\n\n    switch (killed.length) {\n      case 2:\n        setTimeout(fx.streak.doubleKill.play(), 100);\n        multiKill = killer.getName() + \" got a double kill!\";\n        break;\n      case 3:\n        setTimeout(fx.streak.tripleKill.play(), 100);\n        multiKill = killer.getName() + \" got a Triple Kill!\";\n        break;\n      case 4:\n        setTimeout(fx.streak.monsterKill.play(), 100);\n        multiKill = killer.getName() + \" is a MONSTER KILLER!\";\n        break;\n    }\n    kills.push({\n      date: new Date(),\n      text: multiKill\n    });\n\n    switch (streakCount) {\n      case 3:\n        setTimeout(fx.streak.killingSpree.play(), 300);\n        spreeMessage = killer.getName() + \" is on a killing spree!\";\n        break;\n      case 4:\n        setTimeout(fx.streak.dominating.play(), 300);\n        spreeMessage = killer.getName() + \" is dominating!\";\n        break;\n      case 5:\n        setTimeout(fx.streak.rampage.play(), 300);\n        spreeMessage = killer.getName() + \" is on a rampage of kills!\";\n        break;\n      case 6:\n        setTimeout(fx.streak.godLike.play(), 300);\n        spreeMessage = killer.getName() + \" is Godlike!\";\n        break;\n      default:\n        spreeMessage = \"Somebody stop \" + killer.getName();\n        setTimeout(fx.streak.ownage.play(), 300);\n    }\n    kills.push({ date: new Date(), text: spreeMessage });\n    this.setState({\n      kills: kills\n    });\n  }\n\n  render() {\n    var { clashjs, shoots, kills, finished } = this.state;\n\n    var { gameEnvironment, gameStats, playerStates, playerInstances, rounds, totalRounds } = clashjs;\n\n    gameEnvironment = gameEnvironment || {\n      gridSize: 13\n    };\n\n    _.forEach(playerInstances, (player, index) => {\n      gameStats[player.getId()].isAlive = playerStates[index].isAlive;\n    });\n\n    const notification = [...kills];\n\n    if (finished) {\n      const winner = _.sortBy(gameStats, playerStats => playerStats.wins * -1)[0];\n      notification.push({\n        date: new Date(),\n        text: <b style={{ color: \"#0e0\", fontWeight: 700 }}>Congrats {winner.name}!</b>\n      });\n      notification.push({ date: new Date(), text: \"Refresh the page to start again\" });\n    }\n    \n    return (\n      <div className=\"clash\" onClick={this.handleClick.bind(this)}>\n        <Tiles gridSize={gameEnvironment.gridSize} />\n        <Shoots shoots={shoots.slice()} gridSize={gameEnvironment.gridSize} />\n        <Ammos gridSize={gameEnvironment.gridSize} ammoPosition={gameEnvironment.ammoPosition} />\n        <Players gridSize={gameEnvironment.gridSize} playerInstances={playerInstances} playerStates={playerStates} />\n        <Notifications kills={notification} />\n        <Stats rounds={rounds} total={totalRounds} playerStates={playerStates} stats={gameStats} />\n        {false && <pre className=\"debugger\">{JSON.stringify(playerStates, 0, 2)}</pre>}\n      </div>\n    );\n  }\n}\n\nexport default Clash;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Clash from \"./components/Clash.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Clash />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}